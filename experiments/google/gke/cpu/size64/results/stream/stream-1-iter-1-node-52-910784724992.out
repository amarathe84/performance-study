-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20706 microseconds.
   (= 20706 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14669.6     0.013367     0.010907     0.023060
Scale:           9321.8     0.024399     0.017164     0.038935
Add:            11106.4     0.027413     0.021609     0.052399
Triad:          11267.1     0.025959     0.021301     0.038723
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 18967 microseconds.
   (= 18967 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14801.2     0.018038     0.010810     0.020750
Scale:           9509.7     0.031223     0.016825     0.038175
Add:            10970.5     0.042026     0.021877     0.052420
Triad:          11057.8     0.044928     0.021704     0.054640
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15311 microseconds.
   (= 15311 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           13994.7     0.019829     0.011433     0.021982
Scale:           8727.5     0.034458     0.018333     0.040144
Add:            10409.4     0.045881     0.023056     0.053105
Triad:          10683.7     0.044621     0.022464     0.053287
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 10071 microseconds.
   (= 10071 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8101.3     0.020799     0.019750     0.022898
Scale:           4386.1     0.039909     0.036479     0.043462
Add:             9923.5     0.048233     0.024185     0.055218
Triad:           7971.8     0.047043     0.030106     0.052514
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 12102 microseconds.
   (= 12102 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10306.7     0.020525     0.015524     0.022391
Scale:           5661.5     0.037292     0.028261     0.041448
Add:             8913.4     0.049538     0.026926     0.053176
Triad:          10304.5     0.048839     0.023291     0.053963
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 14213 microseconds.
   (= 14213 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14133.2     0.018914     0.011321     0.023620
Scale:           7040.1     0.031452     0.022727     0.037774
Add:            10241.9     0.043211     0.023433     0.052197
Triad:           9906.0     0.041657     0.024228     0.051790
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 17936 microseconds.
   (= 17936 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10147.3     0.019290     0.015768     0.023731
Scale:           5681.2     0.033727     0.028163     0.039480
Add:            10296.0     0.043669     0.023310     0.052168
Triad:           9060.8     0.040243     0.026488     0.051101
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 22359 microseconds.
   (= 22359 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12515.6     0.018611     0.012784     0.023695
Scale:           9337.5     0.031865     0.017135     0.038350
Add:             8468.9     0.044607     0.028339     0.052294
Triad:           9171.5     0.042490     0.026168     0.051049
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7162 microseconds.
   (= 7162 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7037.1     0.025836     0.022737     0.027550
Scale:           4120.8     0.043360     0.038827     0.045952
Add:             4047.6     0.067271     0.059294     0.071333
Triad:           4290.5     0.061798     0.055937     0.065656
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7390 microseconds.
   (= 7390 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7066.5     0.025784     0.022642     0.027621
Scale:           4128.1     0.042978     0.038759     0.046077
Add:             4052.9     0.067036     0.059217     0.071342
Triad:           4318.6     0.062626     0.055574     0.069279
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 13639 microseconds.
   (= 13639 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8069.4     0.022748     0.019828     0.025109
Scale:           4142.7     0.041701     0.038622     0.045005
Add:             5558.5     0.062156     0.043177     0.073437
Triad:           5592.2     0.055536     0.042917     0.064093
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7054 microseconds.
   (= 7054 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7924.7     0.023980     0.020190     0.025524
Scale:           4039.4     0.045841     0.039610     0.048117
Add:             4182.1     0.067898     0.057388     0.071623
Triad:           4272.4     0.062608     0.056175     0.066727
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 16985 microseconds.
   (= 16985 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7459.9     0.023929     0.021448     0.025408
Scale:           4002.6     0.045119     0.039974     0.047968
Add:             4292.8     0.062165     0.055908     0.066430
Triad:           4781.4     0.065464     0.050195     0.071591
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11209 microseconds.
   (= 11209 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6992.4     0.025772     0.022882     0.028029
Scale:           3983.3     0.045449     0.040168     0.047800
Add:             4087.1     0.066282     0.058722     0.070886
Triad:           4367.0     0.061142     0.054958     0.064973
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7889 microseconds.
   (= 7889 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8138.7     0.024242     0.019659     0.025856
Scale:           3775.0     0.047958     0.042384     0.050098
Add:             4214.7     0.064966     0.056943     0.068749
Triad:           4359.9     0.065110     0.055047     0.069362
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19161 microseconds.
   (= 19161 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7496.2     0.023926     0.021344     0.025560
Scale:           4096.5     0.043420     0.039058     0.047959
Add:             4440.2     0.065446     0.054052     0.070633
Triad:           6139.7     0.062173     0.039090     0.069284
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 12727 microseconds.
   (= 12727 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
precision of your system timer.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Function    Best Rate MB/s  Avg time     Min time     Max time
This system uses 8 bytes per array element.
-------------------------------------------------------------
Copy:            7687.9     0.023209     0.020812     0.025551
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Scale:           4956.0     0.045364     0.032284     0.050901
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Add:             5627.7     0.060155     0.042646     0.067856
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Triad:           5580.9     0.061309     0.043004     0.068508
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
-------------------------------------------------------------
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Solution Validates: avg error less than 1.000000e-13 on all three arrays
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21308 microseconds.
Each test below will take on the order of 10951 microseconds.
   (= 21308 clock ticks)
   (= 10951 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8018.5     0.023006     0.019954     0.026383
Copy:            6972.6     0.025871     0.022947     0.027978
Scale:           3923.4     0.045574     0.040781     0.049620
Scale:           3744.4     0.046535     0.042731     0.048547
Add:             5746.4     0.055390     0.041765     0.064284
Add:             4194.0     0.064859     0.057225     0.069411
Triad:           5822.2     0.057158     0.041222     0.068709
Triad:           4484.6     0.061691     0.053516     0.065929
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Each kernel will be executed 10 times.
STREAM version $Revision: 5.10 $
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Array size = 10000000 (elements), Offset = 0 (elements)
Each test below will take on the order of 27794 microseconds.
Memory per array = 76.3 MiB (= 0.1 GiB).
   (= 27794 clock ticks)
Total memory required = 228.9 MiB (= 0.2 GiB).
Increase the size of the arrays if this shows that
Each kernel will be executed 10 times.
you are not getting at least 20 clock ticks per test.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
Your clock granularity/precision appears to be 1 microseconds.
precision of your system timer.
Each test below will take on the order of 12874 microseconds.
-------------------------------------------------------------
   (= 12874 clock ticks)
Function    Best Rate MB/s  Avg time     Min time     Max time
Increase the size of the arrays if this shows that
Copy:            8235.0     0.023689     0.019429     0.026073
you are not getting at least 20 clock ticks per test.
Scale:           4542.8     0.043297     0.035221     0.048674
-------------------------------------------------------------
Add:             5443.1     0.056588     0.044093     0.065358
WARNING -- The above is only a rough guideline.
Triad:           6269.3     0.057132     0.038282     0.071089
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7538.0     0.024660     0.021226     0.026257
Scale:           3895.1     0.046094     0.041077     0.047792
Add:             4277.5     0.063138     0.056107     0.066387
Triad:           4547.1     0.067250     0.052781     0.074072
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 10704 microseconds.
   (= 10704 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7267.7     0.023993     0.022015     0.025964
Scale:           4815.2     0.044658     0.033228     0.049363
Add:             5488.5     0.063725     0.043728     0.072210
Triad:           4792.6     0.062178     0.050077     0.066227
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 17121 microseconds.
   (= 17121 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8187.0     0.023740     0.019543     0.026950
Scale:           4769.4     0.043698     0.033547     0.048974
Add:             5573.5     0.059836     0.043061     0.066151
Triad:           5695.6     0.061952     0.042138     0.070705
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Each kernel will be executed 10 times.
STREAM version $Revision: 5.10 $
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Array size = 10000000 (elements), Offset = 0 (elements)
Each test below will take on the order of 20045 microseconds.
Memory per array = 76.3 MiB (= 0.1 GiB).
   (= 20045 clock ticks)
Total memory required = 228.9 MiB (= 0.2 GiB).
Increase the size of the arrays if this shows that
Each kernel will be executed 10 times.
you are not getting at least 20 clock ticks per test.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
STREAM version $Revision: 5.10 $
Your clock granularity/precision appears to be 1 microseconds.
precision of your system timer.
-------------------------------------------------------------
Each test below will take on the order of 24882 microseconds.
-------------------------------------------------------------
This system uses 8 bytes per array element.
   (= 24882 clock ticks)
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Copy:            7038.5     0.026085     0.022732     0.028131
Array size = 10000000 (elements), Offset = 0 (elements)
you are not getting at least 20 clock ticks per test.
Scale:           4085.4     0.043451     0.039164     0.046026
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Add:             4422.7     0.061295     0.054265     0.065221
Total memory required = 228.9 MiB (= 0.2 GiB).
WARNING -- The above is only a rough guideline.
Triad:           4745.4     0.065655     0.050575     0.072124
Each kernel will be executed 10 times.
For best results, please be sure you know the
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
precision of your system timer.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Your clock granularity/precision appears to be 1 microseconds.
Copy:            6891.5     0.026621     0.023217     0.028511
Each test below will take on the order of 15987 microseconds.
Scale:           4106.4     0.043521     0.038964     0.046371
   (= 15987 clock ticks)
Add:             4414.5     0.061275     0.054366     0.065229
Increase the size of the arrays if this shows that
Triad:           4654.7     0.065503     0.051561     0.071801
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7697.8     0.024644     0.020785     0.026156
Scale:           4115.4     0.043472     0.038878     0.045995
Add:             4344.2     0.065011     0.055246     0.068977
Triad:           5367.6     0.066885     0.044713     0.072550
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 9113 microseconds.
   (= 9113 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6981.1     0.026063     0.022919     0.027231
Scale:           3789.6     0.047512     0.042221     0.049761
Add:             4103.7     0.066308     0.058484     0.070068
Triad:           4336.5     0.063049     0.055344     0.066866
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 28849 microseconds.
   (= 28849 clock ticks)
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
This system uses 8 bytes per array element.
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Function    Best Rate MB/s  Avg time     Min time     Max time
Total memory required = 228.9 MiB (= 0.2 GiB).
Copy:            8507.1     0.023699     0.018808     0.026693
Each kernel will be executed 10 times.
Scale:           4574.2     0.043128     0.034979     0.046948
 The *best* time for each kernel (excluding the first iteration)
Add:             5686.5     0.058139     0.042205     0.068231
 will be used to compute the reported bandwidth.
Triad:           8238.4     0.057731     0.029132     0.072362
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
Your clock granularity/precision appears to be 1 microseconds.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Each test below will take on the order of 10269 microseconds.
-------------------------------------------------------------
This system uses 8 bytes per array element.
   (= 10269 clock ticks)
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Array size = 10000000 (elements), Offset = 0 (elements)
you are not getting at least 20 clock ticks per test.
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
WARNING -- The above is only a rough guideline.
Each kernel will be executed 10 times.
For best results, please be sure you know the
 The *best* time for each kernel (excluding the first iteration)
precision of your system timer.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Your clock granularity/precision appears to be 1 microseconds.
Copy:            6971.7     0.026562     0.022950     0.027917
Each test below will take on the order of 20422 microseconds.
Scale:           3830.9     0.047080     0.041766     0.049343
   (= 20422 clock ticks)
Add:             4142.8     0.065544     0.057932     0.069509
Increase the size of the arrays if this shows that
Triad:           4375.6     0.063763     0.054850     0.068095
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
Function    Best Rate MB/s  Avg time     Min time     Max time
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
Copy:            8594.7     0.023177     0.018616     0.026095
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Scale:           4125.6     0.043504     0.038782     0.046658
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
Add:             5590.6     0.060590     0.042929     0.066946
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Triad:           6265.7     0.062210     0.038304     0.073036
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
STREAM version $Revision: 5.10 $
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
STREAM version $Revision: 5.10 $
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
This system uses 8 bytes per array element.
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
This system uses 8 bytes per array element.
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
This system uses 8 bytes per array element.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
This system uses 8 bytes per array element.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
This system uses 8 bytes per array element.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
-------------------------------------------------------------
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
-------------------------------------------------------------
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Array size = 10000000 (elements), Offset = 0 (elements)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Array size = 10000000 (elements), Offset = 0 (elements)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
 The *best* time for each kernel (excluding the first iteration)
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Memory per array = 76.3 MiB (= 0.1 GiB).
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Memory per array = 76.3 MiB (= 0.1 GiB).
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
 will be used to compute the reported bandwidth.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
-------------------------------------------------------------
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Your clock granularity/precision appears to be 1 microseconds.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Your clock granularity/precision appears to be 1 microseconds.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Your clock granularity/precision appears to be 1 microseconds.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Each test below will take on the order of 14164 microseconds.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
Each test below will take on the order of 26120 microseconds.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each test below will take on the order of 23449 microseconds.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Each test below will take on the order of 23394 microseconds.
Each test below will take on the order of 15268 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 16054 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 30081 microseconds.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Each test below will take on the order of 23481 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 14034 microseconds.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Each test below will take on the order of 30066 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
   (= 14164 clock ticks)
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
   (= 26120 clock ticks)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
   (= 23449 clock ticks)
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
   (= 23394 clock ticks)
   (= 15268 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 16054 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 30081 clock ticks)
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
   (= 23481 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 14034 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
   (= 30066 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Increase the size of the arrays if this shows that
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Each test below will take on the order of 32424 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Each test below will take on the order of 32804 microseconds.
Increase the size of the arrays if this shows that
Each test below will take on the order of 29695 microseconds.
Increase the size of the arrays if this shows that
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 26355 microseconds.
Increase the size of the arrays if this shows that
Each test below will take on the order of 31605 microseconds.
Increase the size of the arrays if this shows that
Each test below will take on the order of 30452 microseconds.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Each test below will take on the order of 23736 microseconds.
Each test below will take on the order of 25673 microseconds.
you are not getting at least 20 clock ticks per test.
Each test below will take on the order of 33576 microseconds.
Each test below will take on the order of 28623 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
you are not getting at least 20 clock ticks per test.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
you are not getting at least 20 clock ticks per test.
Your clock granularity/precision appears to be 1 microseconds.
   (= 32424 clock ticks)
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
   (= 32804 clock ticks)
you are not getting at least 20 clock ticks per test.
   (= 29695 clock ticks)
you are not getting at least 20 clock ticks per test.
Each test below will take on the order of 32637 microseconds.
   (= 26355 clock ticks)
you are not getting at least 20 clock ticks per test.
   (= 31605 clock ticks)
you are not getting at least 20 clock ticks per test.
   (= 30452 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
you are not getting at least 20 clock ticks per test.
   (= 23736 clock ticks)
   (= 25673 clock ticks)
-------------------------------------------------------------
   (= 33576 clock ticks)
   (= 28623 clock ticks)
Each test below will take on the order of 34865 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 28758 microseconds.
Each test below will take on the order of 32613 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 28375 microseconds.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
   (= 32637 clock ticks)
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Each test below will take on the order of 27581 microseconds.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
WARNING -- The above is only a rough guideline.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
   (= 34865 clock ticks)
WARNING -- The above is only a rough guideline.
   (= 28758 clock ticks)
   (= 32613 clock ticks)
WARNING -- The above is only a rough guideline.
   (= 28375 clock ticks)
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
   (= 27581 clock ticks)
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
For best results, please be sure you know the
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
For best results, please be sure you know the
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
For best results, please be sure you know the
Increase the size of the arrays if this shows that
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
Increase the size of the arrays if this shows that
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
precision of your system timer.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
precision of your system timer.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
precision of your system timer.
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
precision of your system timer.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
Function    Best Rate MB/s  Avg time     Min time     Max time
WARNING -- The above is only a rough guideline.
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
For best results, please be sure you know the
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
For best results, please be sure you know the
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
WARNING -- The above is only a rough guideline.
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
Copy:            8647.7     0.025678     0.018502     0.030442
Copy:            8684.8     0.025495     0.018423     0.029703
For best results, please be sure you know the
For best results, please be sure you know the
Copy:            7907.5     0.026867     0.020234     0.032035
For best results, please be sure you know the
-------------------------------------------------------------
Copy:            8408.7     0.026133     0.019028     0.030121
Copy:            7837.0     0.025065     0.020416     0.026682
-------------------------------------------------------------
Copy:            7320.3     0.025172     0.021857     0.026543
-------------------------------------------------------------
Copy:            8504.4     0.025111     0.018814     0.030713
precision of your system timer.
-------------------------------------------------------------
Copy:            7565.1     0.025435     0.021150     0.028438
-------------------------------------------------------------
precision of your system timer.
Copy:            7806.4     0.023479     0.020496     0.026270
-------------------------------------------------------------
For best results, please be sure you know the
Copy:            8641.6     0.025363     0.018515     0.030291
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
Scale:           4592.6     0.044237     0.034839     0.050378
Scale:           5265.1     0.043512     0.030389     0.047193
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
Scale:           5216.1     0.041645     0.030674     0.047547
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           5249.2     0.043937     0.030481     0.048032
Scale:           3896.0     0.046221     0.041068     0.048842
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4112.8     0.043149     0.038903     0.045861
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4670.3     0.041234     0.034259     0.049117
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4671.3     0.044693     0.034252     0.051075
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Scale:           3844.6     0.048211     0.041617     0.053023
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Scale:           5881.7     0.041273     0.027203     0.046581
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Add:             5443.3     0.059721     0.044091     0.067454
-------------------------------------------------------------
Add:             5392.4     0.059216     0.044507     0.066680
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
Add:             5395.3     0.057203     0.044483     0.068056
-------------------------------------------------------------
Copy:            9113.6     0.028213     0.017556     0.031695
Add:             5421.2     0.059809     0.044271     0.066225
Add:             4244.4     0.063152     0.056545     0.067042
Copy:            8669.7     0.028209     0.018455     0.032026
Add:             4355.7     0.063508     0.055100     0.067254
Copy:            8919.2     0.029739     0.017939     0.033393
Add:             5420.5     0.057175     0.044276     0.067876
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7771.5     0.028356     0.020588     0.031572
Add:             5210.4     0.057226     0.046062     0.063577
Copy:            6876.1     0.028334     0.023269     0.030962
Function    Best Rate MB/s  Avg time     Min time     Max time
Add:             5670.4     0.061545     0.042325     0.068121
Copy:            6678.6     0.027881     0.023957     0.030077
-------------------------------------------------------------
Add:             5744.9     0.056234     0.041776     0.064743
Copy:            6616.5     0.027611     0.024182     0.030270
Copy:            8113.7     0.027849     0.019720     0.032208
Triad:           7361.3     0.061113     0.032603     0.081805
Function    Best Rate MB/s  Avg time     Min time     Max time
Triad:           6615.8     0.058431     0.036277     0.071453
Copy:           10965.0     0.029026     0.014592     0.033413
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Triad:           5431.5     0.057326     0.044187     0.066776
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           9597.5     0.041402     0.016671     0.046995
Triad:           5733.9     0.058543     0.041856     0.070353
Triad:           4646.8     0.067057     0.051649     0.071922
Scale:           7398.5     0.042550     0.021626     0.050997
Triad:           5365.0     0.069038     0.044734     0.075002
Scale:           6757.6     0.042242     0.023677     0.047623
Triad:           5803.6     0.058224     0.041354     0.069431
Copy:           11621.2     0.026151     0.013768     0.029821
Scale:           6627.2     0.044242     0.024143     0.049216
Triad:           5619.2     0.055649     0.042711     0.065488
Scale:           5299.6     0.043171     0.030191     0.047599
Copy:           12074.7     0.027972     0.013251     0.032446
Triad:           5664.9     0.057288     0.042366     0.066369
Scale:           5258.5     0.044320     0.030427     0.048942
Function    Best Rate MB/s  Avg time     Min time     Max time
Triad:           5527.4     0.057955     0.043420     0.067514
Scale:           6497.7     0.044486     0.024624     0.050679
Scale:           7724.2     0.041894     0.020714     0.047520
-------------------------------------------------------------
Copy:           15355.0     0.025280     0.010420     0.029463
-------------------------------------------------------------
Scale:           7561.4     0.043538     0.021160     0.049763
Copy:           15173.0     0.028060     0.010545     0.032664
Copy:           12481.4     0.026695     0.012819     0.030633
-------------------------------------------------------------
Copy:           12016.6     0.026701     0.013315     0.030421
Add:             6229.2     0.058732     0.038528     0.065282
-------------------------------------------------------------
-------------------------------------------------------------
Add:            10195.8     0.057021     0.023539     0.065453
-------------------------------------------------------------
Add:             9838.9     0.057146     0.024393     0.065274
-------------------------------------------------------------
Scale:           7582.6     0.042235     0.021101     0.048954
Add:             9887.1     0.057540     0.024274     0.065597
-------------------------------------------------------------
Add:             9118.9     0.057395     0.026319     0.065093
Scale:           7579.7     0.042684     0.021109     0.048604
-------------------------------------------------------------
Add:             9111.6     0.057539     0.026340     0.065407
Copy:           11691.6     0.026707     0.013685     0.030253
-------------------------------------------------------------
Add:             9384.9     0.057945     0.025573     0.065859
Add:             7914.8     0.058249     0.030323     0.065650
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Scale:          10406.6     0.041033     0.015375     0.047011
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Add:             9358.6     0.057504     0.025645     0.066096
Scale:           7310.3     0.043787     0.021887     0.049902
Scale:           6792.9     0.042975     0.023554     0.048280
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Scale:           9783.5     0.044137     0.016354     0.050703
Triad:           6686.9     0.059126     0.035891     0.067456
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9968.0     0.057337     0.024077     0.066505
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:          10188.1     0.057163     0.023557     0.066854
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Add:             9310.2     0.057396     0.025778     0.065766
Triad:          10049.0     0.056748     0.023883     0.065871
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           8378.8     0.058332     0.028644     0.067703
Add:             9168.4     0.057543     0.026177     0.066004
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9968.4     0.057291     0.024076     0.066133
Scale:           6676.1     0.045221     0.023966     0.051411
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9261.4     0.056885     0.025914     0.065650
Triad:           8747.3     0.060110     0.027437     0.070931
-------------------------------------------------------------
Add:             9417.6     0.058043     0.025484     0.066659
-------------------------------------------------------------
Triad:           9034.1     0.055923     0.026566     0.065340
Add:             8507.9     0.059729     0.028209     0.066979
Add:             9565.9     0.057938     0.025089     0.066269
-------------------------------------------------------------
Add:             6898.7     0.059176     0.034789     0.066469
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           9093.7     0.058001     0.026392     0.069785
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           9053.2     0.057225     0.026510     0.067051
-------------------------------------------------------------
-------------------------------------------------------------
Add:             9973.0     0.057899     0.024065     0.066295
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           8850.5     0.060013     0.027117     0.072603
-------------------------------------------------------------
Triad:           9637.4     0.055563     0.024903     0.065485
Triad:           9124.4     0.057371     0.026303     0.068782
Triad:           9073.0     0.056115     0.026452     0.065951
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           8954.5     0.056033     0.026802     0.065552
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
START OF JOBSPEC
{"resources": [{"type": "node", "count": 1, "with": [{"type": "slot", "count": 56, "with": [{"type": "core", "count": 1}], "label": "task"}]}], "tasks": [{"command": ["stream_c.exe"], "slot": "task", "count": {"per_slot": 1}}], "attributes": {"system": {"duration": 0, "cwd": "/opt/stream", "shell": {"options": {"rlimit": {"cpu": -1, "fsize": -1, "data": -1, "stack": 8388608, "core": -1, "nofile": 1048576, "as": -1, "rss": -1, "nproc": -1}, "cpu-affinity": "per-task"}}, "constraints": {"hostlist": ["flux-sample-52"]}}, "user": {"study_id": "stream-1-iter-1-node-52"}}, "version": 1}
START OF EVENTLOG
{"timestamp":1724393249.3177283,"name":"init"}
{"timestamp":1724393249.3185363,"name":"starting"}
{"timestamp":1724393249.3356724,"name":"shell.init","context":{"service":"0-shell-fQvdvnUf","leader-rank":52,"size":1}}
{"timestamp":1724393249.6237657,"name":"shell.start","context":{"taskmap":{"version":1,"map":[[0,1,56,1]]}}}
{"timestamp":1724393250.8638189,"name":"shell.task-exit","context":{"localid":55,"rank":55,"state":"Exited","pid":123,"wait_status":0,"signaled":0,"exitcode":0}}
{"timestamp":1724393251.8265316,"name":"complete","context":{"status":0}}
{"timestamp":1724393251.8265493,"name":"done"}

