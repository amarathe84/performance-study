-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 9922 microseconds.
   (= 9922 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14512.5     0.013085     0.011025     0.019191
Scale:           9241.6     0.023838     0.017313     0.039158
Add:            11069.7     0.042624     0.021681     0.054971
Triad:          11183.6     0.034354     0.021460     0.051682
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15158 microseconds.
   (= 15158 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14931.0     0.011832     0.010716     0.015908
Scale:           9184.3     0.020449     0.017421     0.029120
Add:            11027.4     0.024677     0.021764     0.042662
Triad:          11068.6     0.027260     0.021683     0.053235
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15992 microseconds.
   (= 15992 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14429.8     0.017886     0.011088     0.022450
Scale:           9301.3     0.033295     0.017202     0.042671
Add:            10919.0     0.043490     0.021980     0.054054
Triad:          10043.9     0.043906     0.023895     0.053448
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 13151 microseconds.
   (= 13151 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           13959.2     0.018270     0.011462     0.021021
Scale:           8971.1     0.033689     0.017835     0.037951
Add:            10551.8     0.043884     0.022745     0.051644
Triad:           8687.2     0.045685     0.027627     0.053027
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 8167 microseconds.
   (= 8167 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10236.1     0.019327     0.015631     0.022165
Scale:           6704.4     0.033122     0.023865     0.039041
Add:             8674.6     0.045641     0.027667     0.051203
Triad:           9562.1     0.048056     0.025099     0.058644
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 22480 microseconds.
   (= 22480 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14572.1     0.016802     0.010980     0.021764
Scale:           9379.8     0.026342     0.017058     0.036225
Add:            11033.4     0.039353     0.021752     0.052747
Triad:          11176.9     0.037492     0.021473     0.050298
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19021 microseconds.
   (= 19021 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14442.9     0.017173     0.011078     0.021825
Scale:           9387.4     0.029550     0.017044     0.036652
Add:            10897.7     0.039904     0.022023     0.052995
Triad:          10928.0     0.037628     0.021962     0.050009
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 14127 microseconds.
   (= 14127 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10736.9     0.017901     0.014902     0.020016
Scale:           6642.5     0.031206     0.024087     0.035714
Add:             8091.4     0.043606     0.029661     0.054377
Triad:           8832.0     0.042049     0.027174     0.050882
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7209 microseconds.
   (= 7209 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7595.5     0.023367     0.021065     0.025039
Scale:           3961.6     0.044672     0.040388     0.046679
Add:             4273.8     0.063982     0.056156     0.068380
Triad:           4079.3     0.065504     0.058833     0.069887
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7397 microseconds.
   (= 7397 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7497.6     0.023797     0.021340     0.025270
Scale:           4184.2     0.042953     0.038239     0.045228
Add:             4108.3     0.065879     0.058418     0.070252
Triad:           4221.3     0.064631     0.056854     0.069373
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7247 microseconds.
   (= 7247 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7841.2     0.026252     0.020405     0.028249
Scale:           4155.8     0.043546     0.038500     0.045961
Add:             4159.9     0.065150     0.057694     0.069645
Triad:           4125.8     0.065740     0.058170     0.069223
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7453 microseconds.
   (= 7453 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7923.2     0.026013     0.020194     0.027932
Scale:           4268.5     0.044081     0.037484     0.047709
Add:             4123.4     0.065533     0.058204     0.069652
Triad:           4088.6     0.066183     0.058699     0.069797
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 18244 microseconds.
   (= 18244 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7726.5     0.023230     0.020708     0.024748
Scale:           3957.4     0.045196     0.040431     0.048462
Add:             4306.3     0.065431     0.055732     0.070874
Triad:           6180.3     0.060009     0.038833     0.067020
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 25650 microseconds.
   (= 25650 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7419.8     0.024110     0.021564     0.026113
Scale:           4078.3     0.043499     0.039232     0.046461
Add:             4903.9     0.063805     0.048941     0.068927
Triad:           7741.4     0.060469     0.031002     0.068799
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11000 microseconds.
   (= 11000 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7475.6     0.023715     0.021403     0.025739
Scale:           4756.4     0.045041     0.033639     0.050130
Add:             5236.1     0.063568     0.045836     0.070759
Triad:           5185.8     0.058996     0.046280     0.066448
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11450 microseconds.
   (= 11450 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7088.1     0.025873     0.022573     0.027957
Scale:           4073.4     0.044793     0.039279     0.048223
Add:             4030.6     0.065795     0.059545     0.069995
Triad:           4434.4     0.060637     0.054122     0.064367
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 22426 microseconds.
   (= 22426 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7785.9     0.025551     0.020550     0.029115
Scale:           5248.2     0.042429     0.030487     0.049423
Add:             5244.1     0.057277     0.045766     0.064659
Triad:           5392.3     0.053960     0.044508     0.062054
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 12018 microseconds.
   (= 12018 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
STREAM version $Revision: 5.10 $
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            7121.2     0.025980     0.022468     0.028093
Array size = 10000000 (elements), Offset = 0 (elements)
Scale:           3956.6     0.045327     0.040439     0.048542
Memory per array = 76.3 MiB (= 0.1 GiB).
Add:             4078.9     0.064993     0.058839     0.069536
Total memory required = 228.9 MiB (= 0.2 GiB).
Triad:           4393.2     0.061137     0.054630     0.064919
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Solution Validates: avg error less than 1.000000e-13 on all three arrays
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21437 microseconds.
   (= 21437 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7769.6     0.024727     0.020593     0.028181
Scale:           4401.3     0.044690     0.036353     0.050769
Add:             5395.3     0.056495     0.044483     0.064661
Triad:           5421.9     0.053799     0.044265     0.061539
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11512 microseconds.
   (= 11512 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7651.5     0.023867     0.020911     0.025753
Scale:           4811.6     0.045387     0.033253     0.050447
Add:             5205.1     0.061177     0.046109     0.068331
Triad:           5261.8     0.059677     0.045612     0.068433
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 14411 microseconds.
   (= 14411 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7501.9     0.023890     0.021328     0.025399
Scale:           4058.5     0.043924     0.039423     0.045750
Add:             4150.1     0.065963     0.057830     0.069361
Triad:           4656.3     0.066848     0.051543     0.072195
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32310 microseconds.
   (= 32310 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8630.9     0.024760     0.018538     0.029346
Scale:           4929.3     0.041183     0.032459     0.045970
Add:             5255.6     0.056270     0.045666     0.065814
Triad:           5586.4     0.056370     0.042962     0.065641
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31446 microseconds.
   (= 31446 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9505.1     0.024845     0.016833     0.030158
Scale:           4960.0     0.041549     0.032258     0.046604
Add:             5261.1     0.056495     0.045618     0.065462
Triad:           5217.1     0.057028     0.046003     0.064921
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 8846 microseconds.
   (= 8846 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7415.7     0.024732     0.021576     0.026318
Scale:           4038.2     0.045410     0.039622     0.048927
Add:             3967.5     0.068637     0.060491     0.072313
Triad:           4338.4     0.063253     0.055320     0.066408
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23176 microseconds.
   (= 23176 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7046.9     0.025740     0.022705     0.028017
Scale:           4066.6     0.043796     0.039345     0.046797
Add:             4433.8     0.060868     0.054130     0.064185
Triad:           4904.4     0.065135     0.048936     0.072211
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
STREAM version $Revision: 5.10 $
Each test below will take on the order of 16491 microseconds.
-------------------------------------------------------------
   (= 16491 clock ticks)
This system uses 8 bytes per array element.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
WARNING -- The above is only a rough guideline.
Total memory required = 228.9 MiB (= 0.2 GiB).
For best results, please be sure you know the
Each kernel will be executed 10 times.
precision of your system timer.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            8006.4     0.024516     0.019984     0.026446
Your clock granularity/precision appears to be 1 microseconds.
Scale:           4645.2     0.045163     0.034444     0.047890
Each test below will take on the order of 25735 microseconds.
-------------------------------------------------------------
Add:             5181.0     0.059452     0.046323     0.066940
-------------------------------------------------------------
-------------------------------------------------------------
   (= 25735 clock ticks)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
Triad:           5724.0     0.061362     0.041929     0.071444
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
Increase the size of the arrays if this shows that
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
This system uses 8 bytes per array element.
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
precision of your system timer.
This system uses 8 bytes per array element.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Function    Best Rate MB/s  Avg time     Min time     Max time
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Copy:            7056.2     0.025692     0.022675     0.028213
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Scale:           4176.2     0.042343     0.038312     0.045384
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Add:             4474.8     0.061009     0.053634     0.065076
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Triad:           5311.7     0.065971     0.045183     0.073966
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Each test below will take on the order of 33211 microseconds.
Each test below will take on the order of 32164 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 27549 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 26402 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23294 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 9455 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20114 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
   (= 33211 clock ticks)
   (= 32164 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 14879 microseconds.
   (= 27549 clock ticks)
-------------------------------------------------------------
Each test below will take on the order of 26213 microseconds.
   (= 26402 clock ticks)
-------------------------------------------------------------
Each test below will take on the order of 16565 microseconds.
Each test below will take on the order of 16252 microseconds.
   (= 23294 clock ticks)
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Each test below will take on the order of 24535 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 14918 microseconds.
Each test below will take on the order of 33020 microseconds.
Each test below will take on the order of 34751 microseconds.
Each test below will take on the order of 27574 microseconds.
   (= 9455 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24863 microseconds.
Each test below will take on the order of 31800 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 29267 microseconds.
Each test below will take on the order of 26378 microseconds.
   (= 20114 clock ticks)
Each test below will take on the order of 24997 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Each test below will take on the order of 27621 microseconds.
   (= 14879 clock ticks)
Increase the size of the arrays if this shows that
Your clock granularity/precision appears to be 1 microseconds.
   (= 26213 clock ticks)
Increase the size of the arrays if this shows that
Your clock granularity/precision appears to be 1 microseconds.
   (= 16565 clock ticks)
   (= 16252 clock ticks)
Increase the size of the arrays if this shows that
-------------------------------------------------------------
   (= 24535 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 27446 microseconds.
   (= 14918 clock ticks)
   (= 33020 clock ticks)
   (= 34751 clock ticks)
   (= 27574 clock ticks)
Increase the size of the arrays if this shows that
Each test below will take on the order of 33492 microseconds.
   (= 24863 clock ticks)
   (= 31800 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 29267 clock ticks)
   (= 26378 clock ticks)
Increase the size of the arrays if this shows that
   (= 24997 clock ticks)
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
   (= 27621 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Each test below will take on the order of 31263 microseconds.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Each test below will take on the order of 32299 microseconds.
Each test below will take on the order of 31778 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
Each test below will take on the order of 28335 microseconds.
   (= 27446 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
   (= 33492 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Each test below will take on the order of 29064 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
   (= 31263 clock ticks)
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
   (= 32299 clock ticks)
   (= 31778 clock ticks)
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
   (= 28335 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
   (= 29064 clock ticks)
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
precision of your system timer.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
For best results, please be sure you know the
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            8150.8     0.027420     0.019630     0.033188
precision of your system timer.
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8400.8     0.023947     0.019046     0.026035
Copy:            7760.9     0.025542     0.020616     0.030342
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7744.0     0.025959     0.020661     0.031286
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8020.9     0.027739     0.019948     0.033044
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7279.3     0.025032     0.021980     0.026656
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7366.2     0.024592     0.021721     0.026273
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           5489.4     0.041478     0.029147     0.047483
-------------------------------------------------------------
-------------------------------------------------------------
Copy:            7204.9     0.025109     0.022207     0.026411
Copy:            7922.0     0.024835     0.020197     0.027175
Scale:           4816.2     0.042455     0.033221     0.046339
Scale:           5362.4     0.039686     0.029837     0.046452
Copy:            8309.5     0.025172     0.019255     0.028221
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7064.3     0.025534     0.022649     0.027300
Scale:           5386.7     0.041407     0.029703     0.046471
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7143.5     0.026083     0.022398     0.028024
Copy:           11061.3     0.024465     0.014465     0.029949
Copy:            7708.6     0.025380     0.020756     0.027348
Scale:           4385.6     0.042697     0.036483     0.046934
Copy:            6739.4     0.027605     0.023741     0.029961
Scale:           3906.9     0.046645     0.040953     0.049041
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6690.3     0.026481     0.023915     0.028753
Copy:            6370.4     0.028795     0.025116     0.032214
-------------------------------------------------------------
Copy:            6478.8     0.028856     0.024696     0.032600
-------------------------------------------------------------
Copy:            8440.6     0.025244     0.018956     0.028454
Copy:            6066.3     0.029305     0.026375     0.031384
Scale:           4142.3     0.043306     0.038626     0.045188
Copy:            6584.1     0.029028     0.024301     0.033435
Add:             5339.4     0.056049     0.044949     0.065416
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4071.7     0.043738     0.039295     0.045620
Scale:           5202.4     0.046326     0.030755     0.052221
Add:             5268.1     0.059498     0.045557     0.067867
Add:             5616.0     0.054858     0.042735     0.064320
Scale:           5252.1     0.043177     0.030464     0.047974
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10926.0     0.028284     0.014644     0.033023
Scale:           3968.5     0.045577     0.040317     0.048168
Add:             5310.0     0.055299     0.045198     0.064273
Copy:           10711.0     0.028878     0.014938     0.033335
Scale:           6955.3     0.042992     0.023004     0.048743
Scale:           9675.3     0.040059     0.016537     0.047199
Scale:           4656.7     0.047435     0.034359     0.052520
Add:             5517.1     0.055443     0.043501     0.065345
Scale:           5435.7     0.044346     0.029435     0.049859
Add:             4092.2     0.065863     0.058648     0.069055
Copy:           12933.4     0.027408     0.012371     0.031145
Scale:           5961.7     0.044949     0.026838     0.051458
Scale:           5634.4     0.042594     0.028397     0.046660
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           5169.1     0.043428     0.030953     0.047477
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4628.8     0.044152     0.034566     0.047125
Scale:           5090.8     0.044415     0.031429     0.049236
Add:             4557.4     0.067986     0.052662     0.073165
Scale:           6016.1     0.042289     0.026595     0.047950
Triad:           5793.7     0.055197     0.041424     0.062511
Copy:           12644.2     0.028673     0.012654     0.033021
Copy:           11644.8     0.028313     0.013740     0.032639
Add:             4378.4     0.064637     0.054815     0.068849
Add:             5339.4     0.058890     0.044949     0.067648
Triad:           6358.1     0.062499     0.037747     0.073949
Triad:           5094.9     0.057373     0.047106     0.065735
Add:             5305.2     0.058200     0.045239     0.066043
Copy:           11801.2     0.030824     0.013558     0.035702
Scale:           7668.0     0.043639     0.020866     0.048856
Add:             4316.6     0.063609     0.055600     0.066794
Triad:           5603.3     0.055398     0.042832     0.064019
Scale:           7711.9     0.043300     0.020747     0.048368
Add:             6688.8     0.057779     0.035881     0.063406
Add:            11034.5     0.057217     0.021750     0.066546
Add:             5626.3     0.058594     0.042657     0.067519
Triad:           6103.4     0.055129     0.039322     0.062418
Add:             6713.7     0.058030     0.035748     0.064111
Triad:           4437.2     0.064728     0.054088     0.069125
Scale:           7771.9     0.042672     0.020587     0.047824
Add:            10228.9     0.057340     0.023463     0.064529
Add:             8658.6     0.057002     0.027718     0.064058
Copy:           11713.9     0.030697     0.013659     0.035274
Add:             8484.7     0.057291     0.028286     0.064291
Copy:           14266.6     0.026995     0.011215     0.032712
Add:             5334.7     0.058403     0.044988     0.066010
Add:             8630.6     0.057280     0.027808     0.064521
Triad:           8257.9     0.061362     0.029063     0.068723
Add:             8891.8     0.057358     0.026991     0.065824
-------------------------------------------------------------
Scale:           8854.0     0.042743     0.018071     0.048307
Scale:           8709.4     0.042754     0.018371     0.048324
Triad:           5189.4     0.066642     0.046248     0.072715
Triad:           4985.6     0.060689     0.048139     0.068421
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           5670.0     0.061304     0.042328     0.071925
Scale:           6014.1     0.043153     0.026604     0.048427
Add:             8949.8     0.058215     0.026816     0.066528
Triad:           4687.6     0.066592     0.051199     0.072316
-------------------------------------------------------------
Add:             9859.6     0.057772     0.024342     0.066303
Triad:           9098.8     0.058514     0.026377     0.068703
Triad:          10310.7     0.061765     0.023277     0.077752
Triad:           5524.5     0.058875     0.043443     0.067157
-------------------------------------------------------------
Triad:           9448.8     0.057364     0.025400     0.066438
-------------------------------------------------------------
Add:             8971.3     0.057633     0.026752     0.066194
Triad:          11048.7     0.056174     0.021722     0.065143
Triad:           9255.4     0.057575     0.025931     0.066098
Scale:           9049.7     0.042023     0.017680     0.048467
Triad:           8517.9     0.057086     0.028176     0.065576
Scale:           8192.1     0.042869     0.019531     0.051976
Triad:           7027.4     0.060618     0.034152     0.072526
Triad:           8558.3     0.056605     0.028043     0.063881
-------------------------------------------------------------
Triad:           9566.0     0.059274     0.025089     0.068631
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Add:             9215.6     0.057483     0.026043     0.066183
Add:             9461.8     0.057562     0.025365     0.066473
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Add:             8888.6     0.057415     0.027001     0.066874
Triad:           8736.5     0.055899     0.027471     0.064627
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9027.7     0.055457     0.026585     0.064929
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9323.7     0.057077     0.025741     0.067441
-------------------------------------------------------------
-------------------------------------------------------------
Add:             9161.4     0.057385     0.026197     0.066337
-------------------------------------------------------------
Add:             7913.5     0.058331     0.030328     0.068401
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           9026.6     0.055841     0.026588     0.066659
Triad:           8918.0     0.055825     0.026912     0.066107
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9995.4     0.055398     0.024011     0.065670
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9153.0     0.055731     0.026221     0.065729
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9287.6     0.057951     0.025841     0.070978
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
START OF JOBSPEC
{"resources": [{"type": "node", "count": 1, "with": [{"type": "slot", "count": 56, "with": [{"type": "core", "count": 1}], "label": "task"}]}], "tasks": [{"command": ["stream_c.exe"], "slot": "task", "count": {"per_slot": 1}}], "attributes": {"system": {"duration": 0, "cwd": "/opt/stream", "shell": {"options": {"rlimit": {"cpu": -1, "fsize": -1, "data": -1, "stack": 8388608, "core": -1, "nofile": 1048576, "as": -1, "rss": -1, "nproc": -1}, "cpu-affinity": "per-task"}}, "constraints": {"hostlist": ["flux-sample-11"]}}, "user": {"study_id": "stream-1-iter-5-node-11"}}, "version": 1}
START OF EVENTLOG
{"timestamp":1724287355.1501341,"name":"init"}
{"timestamp":1724287355.1509347,"name":"starting"}
{"timestamp":1724287355.1639471,"name":"shell.init","context":{"service":"0-shell-foQgw4Sj","leader-rank":11,"size":1}}
{"timestamp":1724287355.4532359,"name":"shell.start","context":{"taskmap":{"version":1,"map":[[0,1,56,1]]}}}
{"timestamp":1724287356.5953124,"name":"shell.task-exit","context":{"localid":25,"rank":25,"state":"Exited","pid":321,"wait_status":0,"signaled":0,"exitcode":0}}
{"timestamp":1724287357.6537137,"name":"complete","context":{"status":0}}
{"timestamp":1724287357.6537323,"name":"done"}

