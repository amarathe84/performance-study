-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24184 microseconds.
   (= 24184 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14852.0     0.012329     0.010773     0.020939
Scale:           8796.1     0.025320     0.018190     0.037721
Add:            11183.6     0.033252     0.021460     0.054726
Triad:          11058.4     0.031690     0.021703     0.051517
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 28829 microseconds.
   (= 28829 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14531.1     0.016417     0.011011     0.021151
Scale:           7058.4     0.032523     0.022668     0.037869
Add:            10730.1     0.037225     0.022367     0.049484
Triad:          10714.2     0.041307     0.022400     0.056962
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20423 microseconds.
   (= 20423 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10352.0     0.019549     0.015456     0.022589
Scale:           6085.5     0.033377     0.026292     0.038916
Add:             7365.5     0.044853     0.032584     0.055975
Triad:           8916.3     0.043686     0.026917     0.049971
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20964 microseconds.
   (= 20964 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10202.2     0.019512     0.015683     0.022329
Scale:           7047.2     0.032863     0.022704     0.038128
Add:             7472.9     0.045546     0.032116     0.052258
Triad:           7140.7     0.044306     0.033610     0.050163
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 14368 microseconds.
   (= 14368 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14394.9     0.016862     0.011115     0.020443
Scale:           7124.8     0.031517     0.022457     0.038044
Add:            11032.0     0.041921     0.021755     0.052166
Triad:          11010.1     0.046217     0.021798     0.054411
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 22215 microseconds.
   (= 22215 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14217.4     0.017383     0.011254     0.021773
Scale:           7189.7     0.033693     0.022254     0.045526
Add:            10747.4     0.041988     0.022331     0.056434
Triad:           8206.2     0.042249     0.029246     0.051059
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 17034 microseconds.
   (= 17034 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14556.3     0.018214     0.010992     0.021384
Scale:           7828.1     0.033622     0.020439     0.040119
Add:            10555.5     0.046441     0.022737     0.054588
Triad:          11060.3     0.042264     0.021699     0.052768
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24410 microseconds.
   (= 24410 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14499.4     0.019194     0.011035     0.021239
Scale:          10094.0     0.033078     0.015851     0.039787
Add:             9361.5     0.047327     0.025637     0.056041
Triad:          13314.7     0.046150     0.018025     0.059785
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7205 microseconds.
   (= 7205 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8275.5     0.023371     0.019334     0.024938
Scale:           3893.5     0.046909     0.041094     0.051148
Add:             4053.9     0.067307     0.059203     0.071684
Triad:           4280.1     0.063028     0.056074     0.066113
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 13550 microseconds.
   (= 13550 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7578.6     0.024620     0.021112     0.027762
Scale:           4003.1     0.046441     0.039969     0.049585
Add:             4125.6     0.064677     0.058174     0.066883
Triad:           4339.3     0.064572     0.055309     0.067713
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 9083 microseconds.
   (= 9083 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7423.9     0.024009     0.021552     0.025022
Scale:           3874.2     0.048110     0.041299     0.051188
Add:             4227.2     0.065151     0.056775     0.069127
Triad:           4233.7     0.064089     0.056688     0.066552
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19655 microseconds.
   (= 19655 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8526.1     0.024218     0.018766     0.026471
Scale:           4981.0     0.044754     0.032122     0.049371
Add:             5078.5     0.059007     0.047258     0.064957
Triad:           6335.8     0.059080     0.037880     0.067644
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 18614 microseconds.
   (= 18614 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7245.1     0.025330     0.022084     0.027640
Scale:           3996.3     0.043614     0.040037     0.045376
Add:             4314.3     0.063736     0.055629     0.066720
Triad:           4789.4     0.066311     0.050111     0.072613
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11388 microseconds.
   (= 11388 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            7864.0     0.025372     0.020346     0.028100
This system uses 8 bytes per array element.
Scale:           4441.9     0.047139     0.036021     0.063128
-------------------------------------------------------------
Add:             5605.2     0.059416     0.042817     0.066791
Array size = 10000000 (elements), Offset = 0 (elements)
Triad:           4729.3     0.060916     0.050748     0.065129
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 8992 microseconds.
   (= 8992 clock ticks)
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
This system uses 8 bytes per array element.
For best results, please be sure you know the
This system uses 8 bytes per array element.
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Function    Best Rate MB/s  Avg time     Min time     Max time
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Copy:            6971.7     0.026296     0.022950     0.028746
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
Each kernel will be executed 10 times.
Scale:           4025.6     0.045450     0.039746     0.047445
-------------------------------------------------------------
Each kernel will be executed 10 times.
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Add:             4160.6     0.065749     0.057684     0.069687
STREAM version $Revision: 5.10 $
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
 will be used to compute the reported bandwidth.
Triad:           4458.3     0.064331     0.053832     0.068052
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Your clock granularity/precision appears to be 1 microseconds.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Each test below will take on the order of 15428 microseconds.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Each test below will take on the order of 7660 microseconds.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
   (= 15428 clock ticks)
Memory per array = 76.3 MiB (= 0.1 GiB).
   (= 7660 clock ticks)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Increase the size of the arrays if this shows that
Total memory required = 228.9 MiB (= 0.2 GiB).
Increase the size of the arrays if this shows that
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
you are not getting at least 20 clock ticks per test.
Each kernel will be executed 10 times.
you are not getting at least 20 clock ticks per test.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
 will be used to compute the reported bandwidth.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7167 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32032 microseconds.
Each test below will take on the order of 31914 microseconds.
Each test below will take on the order of 29407 microseconds.
Each test below will take on the order of 30097 microseconds.
Each test below will take on the order of 31822 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31890 microseconds.
Each test below will take on the order of 28192 microseconds.
Each test below will take on the order of 30540 microseconds.
Each test below will take on the order of 24694 microseconds.
Each test below will take on the order of 24158 microseconds.
Each test below will take on the order of 18498 microseconds.
Each test below will take on the order of 18053 microseconds.
Each test below will take on the order of 26072 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11545 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20508 microseconds.
precision of your system timer.
Your clock granularity/precision appears to be 1 microseconds.
precision of your system timer.
Each test below will take on the order of 17081 microseconds.
Each test below will take on the order of 15007 microseconds.
Each test below will take on the order of 15806 microseconds.
   (= 7167 clock ticks)
Each test below will take on the order of 7784 microseconds.
   (= 32032 clock ticks)
   (= 31914 clock ticks)
   (= 29407 clock ticks)
   (= 30097 clock ticks)
   (= 31822 clock ticks)
Each test below will take on the order of 9912 microseconds.
   (= 31890 clock ticks)
   (= 28192 clock ticks)
   (= 30540 clock ticks)
   (= 24694 clock ticks)
   (= 24158 clock ticks)
   (= 18498 clock ticks)
   (= 18053 clock ticks)
-------------------------------------------------------------
   (= 26072 clock ticks)
Each test below will take on the order of 12326 microseconds.
   (= 11545 clock ticks)
Each test below will take on the order of 11179 microseconds.
   (= 20508 clock ticks)
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 20041 microseconds.
-------------------------------------------------------------
   (= 17081 clock ticks)
   (= 15007 clock ticks)
   (= 15806 clock ticks)
Increase the size of the arrays if this shows that
   (= 7784 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
   (= 9912 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
STREAM version $Revision: 5.10 $
Increase the size of the arrays if this shows that
   (= 12326 clock ticks)
Increase the size of the arrays if this shows that
   (= 11179 clock ticks)
Increase the size of the arrays if this shows that
Function    Best Rate MB/s  Avg time     Min time     Max time
STREAM version $Revision: 5.10 $
   (= 20041 clock ticks)
Function    Best Rate MB/s  Avg time     Min time     Max time
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Copy:            7117.1     0.025783     0.022481     0.027165
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Copy:            6901.4     0.027399     0.023184     0.030089
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
Scale:           4081.9     0.044363     0.039197     0.046715
This system uses 8 bytes per array element.
you are not getting at least 20 clock ticks per test.
Scale:           3999.3     0.046362     0.040007     0.054365
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
STREAM version $Revision: 5.10 $
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Add:             4169.2     0.065386     0.057565     0.070113
-------------------------------------------------------------
-------------------------------------------------------------
Add:             4228.5     0.065100     0.056758     0.069333
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
Array size = 10000000 (elements), Offset = 0 (elements)
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
Triad:           4568.6     0.064838     0.052532     0.069167
Array size = 10000000 (elements), Offset = 0 (elements)
WARNING -- The above is only a rough guideline.
Triad:           5025.0     0.067862     0.047761     0.078512
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
This system uses 8 bytes per array element.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
Memory per array = 76.3 MiB (= 0.1 GiB).
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Total memory required = 228.9 MiB (= 0.2 GiB).
STREAM version $Revision: 5.10 $
precision of your system timer.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Array size = 10000000 (elements), Offset = 0 (elements)
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Each kernel will be executed 10 times.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7516.0     0.025524     0.021288     0.028369
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12600.5     0.028080     0.012698     0.032480
Memory per array = 76.3 MiB (= 0.1 GiB).
Copy:           12189.6     0.027491     0.013126     0.032308
Copy:           11971.5     0.030165     0.013365     0.034987
Copy:           12695.3     0.029277     0.012603     0.035585
Copy:           12941.9     0.028183     0.012363     0.032547
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12859.8     0.028096     0.012442     0.032427
Copy:           15882.6     0.029256     0.010074     0.033585
Copy:           16085.5     0.028002     0.009947     0.034422
Copy:            8057.6     0.026664     0.019857     0.030487
Copy:            8667.4     0.027538     0.018460     0.031370
Copy:            6979.2     0.027799     0.022925     0.031049
Copy:            7236.5     0.028304     0.022110     0.031414
 The *best* time for each kernel (excluding the first iteration)
Copy:            9640.3     0.024559     0.016597     0.029995
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7964.5     0.024763     0.020089     0.027070
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7079.4     0.024807     0.022601     0.026902
 The *best* time for each kernel (excluding the first iteration)
This system uses 8 bytes per array element.
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6951.1     0.025433     0.023018     0.026522
Copy:            7116.5     0.025002     0.022483     0.026241
Copy:            8784.5     0.023971     0.018214     0.026319
Scale:           3960.6     0.044207     0.040398     0.047580
Copy:            7162.3     0.026284     0.022339     0.031900
Scale:           8586.4     0.042539     0.018634     0.047808
Total memory required = 228.9 MiB (= 0.2 GiB).
Scale:           7865.1     0.043823     0.020343     0.048901
Scale:           7880.6     0.042399     0.020303     0.048057
Scale:           7848.9     0.041834     0.020385     0.048377
Scale:           6918.3     0.043721     0.023127     0.048333
Copy:            7774.2     0.023865     0.020581     0.025314
Scale:           6913.8     0.043938     0.023142     0.048749
Scale:           8100.4     0.042847     0.019752     0.048552
Scale:           6384.9     0.042160     0.025059     0.047306
Scale:           5036.5     0.042533     0.031768     0.048752
Scale:           4796.0     0.043087     0.033361     0.047490
Scale:           5029.9     0.045492     0.031810     0.050588
Scale:           4543.5     0.045238     0.035215     0.050922
 will be used to compute the reported bandwidth.
Scale:           4874.8     0.042269     0.032822     0.048328
Copy:            7851.3     0.024120     0.020379     0.026439
Scale:           5199.7     0.045304     0.030771     0.050855
Copy:            7831.7     0.024454     0.020430     0.026600
Scale:           4039.7     0.044923     0.039607     0.047023
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Copy:           10070.5     0.023375     0.015888     0.025968
Scale:           4091.1     0.043659     0.039109     0.045005
Scale:           4590.8     0.044477     0.034852     0.047552
Add:             4096.1     0.066766     0.058593     0.070479
Scale:           4114.5     0.043640     0.038887     0.045897
Add:            10259.5     0.057204     0.023393     0.065344
Each kernel will be executed 10 times.
Add:             9199.6     0.057472     0.026088     0.065388
Add:             6499.3     0.058335     0.036927     0.065475
Add:            10274.9     0.056770     0.023358     0.065506
Add:             9999.1     0.056574     0.024002     0.064580
Scale:           3948.9     0.046799     0.040518     0.049016
Add:            10109.9     0.056337     0.023739     0.064451
Add:             7099.8     0.058861     0.033804     0.064979
Add:             9575.0     0.057978     0.025065     0.067430
Add:             5477.4     0.058784     0.043816     0.065330
Add:             5405.3     0.059119     0.044401     0.065132
Add:             4849.7     0.060407     0.049488     0.065400
Add:             5345.1     0.058917     0.044901     0.066392
-------------------------------------------------------------
Add:             6544.4     0.059455     0.036673     0.069259
Scale:           4157.0     0.044828     0.038489     0.048266
Add:             4690.3     0.062115     0.051170     0.067190
Scale:           3849.3     0.044864     0.041566     0.048305
Add:             5035.0     0.067506     0.047666     0.074093
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Scale:           4192.3     0.042774     0.038165     0.045517
Scale:           3990.2     0.044886     0.040098     0.047338
Add:             4416.1     0.067183     0.054347     0.071121
Add:             4665.2     0.061842     0.051445     0.066014
Triad:           4242.3     0.063900     0.056573     0.066426
Add:             3885.8     0.068641     0.061763     0.071679
Triad:          10824.9     0.056837     0.022171     0.068107
 The *best* time for each kernel (excluding the first iteration)
Triad:           7317.1     0.057238     0.032800     0.065478
Triad:          10343.0     0.056095     0.023204     0.065519
Triad:          10725.7     0.057157     0.022376     0.067739
Triad:           9700.1     0.055884     0.024742     0.065504
Add:             3946.9     0.068412     0.060808     0.071418
Triad:           9683.3     0.055887     0.024785     0.065572
Triad:           9624.2     0.057155     0.024937     0.065298
Triad:          11355.0     0.058112     0.021136     0.068577
Triad:           6022.4     0.060051     0.039851     0.069093
Triad:           5656.9     0.060103     0.042426     0.066877
Triad:           5468.8     0.059489     0.043885     0.064338
Triad:           6144.2     0.058074     0.039061     0.064736
Your clock granularity/precision appears to be 1 microseconds.
Triad:           6533.5     0.064056     0.036734     0.072685
Add:             5413.3     0.063105     0.044335     0.068588
Triad:           5474.7     0.060057     0.043838     0.064458
Add:             5471.8     0.063247     0.043861     0.068944
Triad:          13423.6     0.063488     0.017879     0.074638
Your clock granularity/precision appears to be 1 microseconds.
Memory per array = 76.3 MiB (= 0.1 GiB).
Add:             5725.5     0.058569     0.041918     0.066798
Add:             4312.7     0.067179     0.055649     0.071570
Triad:           5658.8     0.065227     0.042412     0.092363
Triad:           5647.6     0.060642     0.042496     0.069770
-------------------------------------------------------------
Triad:           4274.6     0.065610     0.056146     0.068899
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           4265.9     0.063688     0.056260     0.066421
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 8706 microseconds.
-------------------------------------------------------------
Triad:           6059.9     0.060136     0.039605     0.065776
-------------------------------------------------------------
Triad:           5246.9     0.059629     0.045741     0.065784
-------------------------------------------------------------
Each test below will take on the order of 15177 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
Triad:           5941.9     0.061734     0.040391     0.072652
Triad:           5245.2     0.062020     0.045756     0.067348
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
   (= 8706 clock ticks)
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
   (= 15177 clock ticks)
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
 The *best* time for each kernel (excluding the first iteration)
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 15782 microseconds.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
you are not getting at least 20 clock ticks per test.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
   (= 15782 clock ticks)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
WARNING -- The above is only a rough guideline.
This system uses 8 bytes per array element.
WARNING -- The above is only a rough guideline.
Your clock granularity/precision appears to be 1 microseconds.
you are not getting at least 20 clock ticks per test.
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
Each test below will take on the order of 18236 microseconds.
-------------------------------------------------------------
precision of your system timer.
Array size = 10000000 (elements), Offset = 0 (elements)
precision of your system timer.
   (= 18236 clock ticks)
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Increase the size of the arrays if this shows that
For best results, please be sure you know the
Function    Best Rate MB/s  Avg time     Min time     Max time
Total memory required = 228.9 MiB (= 0.2 GiB).
Function    Best Rate MB/s  Avg time     Min time     Max time
you are not getting at least 20 clock ticks per test.
precision of your system timer.
Copy:            7692.0     0.026333     0.020801     0.029942
Each kernel will be executed 10 times.
Copy:            8419.7     0.025147     0.019003     0.027937
-------------------------------------------------------------
-------------------------------------------------------------
Scale:           3809.6     0.047317     0.041999     0.049405
 The *best* time for each kernel (excluding the first iteration)
Scale:           4254.4     0.048017     0.037608     0.056466
WARNING -- The above is only a rough guideline.
Function    Best Rate MB/s  Avg time     Min time     Max time
Add:             4249.4     0.064160     0.056479     0.066804
 will be used to compute the reported bandwidth.
Add:             6384.8     0.057448     0.037589     0.065439
For best results, please be sure you know the
Copy:            6957.1     0.026154     0.022998     0.028094
Triad:           4139.6     0.065518     0.057976     0.069844
-------------------------------------------------------------
Triad:           5974.3     0.058070     0.040172     0.065048
precision of your system timer.
Scale:           3843.3     0.046727     0.041631     0.048684
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Add:             4304.9     0.063978     0.055751     0.066904
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Each test below will take on the order of 26907 microseconds.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Function    Best Rate MB/s  Avg time     Min time     Max time
Triad:           4252.2     0.065673     0.056442     0.069126
-------------------------------------------------------------
   (= 26907 clock ticks)
-------------------------------------------------------------
Copy:            7354.3     0.025081     0.021756     0.026280
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Scale:           4059.8     0.044081     0.039411     0.046002
Solution Validates: avg error less than 1.000000e-13 on all three arrays
you are not getting at least 20 clock ticks per test.
Add:             4460.2     0.064590     0.053809     0.067854
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           5683.6     0.066522     0.042227     0.072768
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
Solution Validates: avg error less than 1.000000e-13 on all three arrays
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10226.3     0.024838     0.015646     0.028379
Scale:           4296.6     0.043481     0.037239     0.046493
Add:             5999.3     0.057384     0.040005     0.063930
Triad:           6194.0     0.061344     0.038747     0.070744
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
STREAM version $Revision: 5.10 $
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Each kernel will be executed 10 times.
This system uses 8 bytes per array element.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Your clock granularity/precision appears to be 1 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each test below will take on the order of 23850 microseconds.
Each kernel will be executed 10 times.
   (= 23850 clock ticks)
 The *best* time for each kernel (excluding the first iteration)
Increase the size of the arrays if this shows that
 will be used to compute the reported bandwidth.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
WARNING -- The above is only a rough guideline.
Each test below will take on the order of 16960 microseconds.
For best results, please be sure you know the
   (= 16960 clock ticks)
precision of your system timer.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:           10224.4     0.025624     0.015649     0.028409
WARNING -- The above is only a rough guideline.
Scale:           4151.2     0.044363     0.038543     0.048108
For best results, please be sure you know the
Add:             6010.5     0.057803     0.039930     0.064396
precision of your system timer.
Triad:           7188.4     0.061521     0.033387     0.069020
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Copy:            8291.0     0.025779     0.019298     0.028489
-------------------------------------------------------------
Scale:           4317.3     0.045979     0.037060     0.050182
Add:             5397.4     0.060426     0.044466     0.068058
Triad:           5545.9     0.059337     0.043275     0.066081
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 33687 microseconds.
   (= 33687 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12358.9     0.027480     0.012946     0.031926
Scale:           9843.8     0.042588     0.016254     0.047859
Add:            11806.3     0.057766     0.020328     0.065955
Triad:          12373.6     0.056870     0.019396     0.066216
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 27998 microseconds.
   (= 27998 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           13456.8     0.027223     0.011890     0.031894
Scale:           8146.2     0.044546     0.019641     0.050141
Add:             7112.8     0.058539     0.033742     0.065823
Triad:           8071.9     0.055575     0.029733     0.063806
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 35093 microseconds.
   (= 35093 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           17232.1     0.025277     0.009285     0.029059
Scale:           7939.3     0.041283     0.020153     0.046401
Add:            10936.9     0.056514     0.021944     0.064790
Triad:          11171.0     0.058847     0.021484     0.070534
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31022 microseconds.
   (= 31022 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           13143.9     0.026931     0.012173     0.031381
Scale:           7503.6     0.044723     0.021323     0.049817
Add:             7551.7     0.059077     0.031781     0.065677
Triad:           7985.1     0.057225     0.030056     0.063815
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20036 microseconds.
   (= 20036 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11563.3     0.023976     0.013837     0.026173
Scale:           7469.3     0.047734     0.021421     0.053618
Add:             9398.5     0.058665     0.025536     0.067002
Triad:           6842.5     0.056617     0.035075     0.064258
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 26615 microseconds.
   (= 26615 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           16592.2     0.026332     0.009643     0.034152
Scale:           9828.0     0.041965     0.016280     0.050935
Add:             7804.9     0.058097     0.030750     0.064339
Triad:           8899.4     0.060869     0.026968     0.072187
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31332 microseconds.
   (= 31332 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14751.8     0.025975     0.010846     0.030135
Scale:          10162.6     0.041537     0.015744     0.047722
Add:            11139.5     0.058399     0.021545     0.067821
Triad:          11647.6     0.058897     0.020605     0.070097
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 25279 microseconds.
   (= 25279 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           13648.3     0.024321     0.011723     0.028068
Scale:           7818.3     0.046258     0.020465     0.051828
Add:             6675.7     0.058732     0.035951     0.065421
Triad:           7178.1     0.057497     0.033435     0.065887
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
START OF JOBSPEC
{"resources": [{"type": "node", "count": 1, "with": [{"type": "slot", "count": 56, "with": [{"type": "core", "count": 1}], "label": "task"}]}], "tasks": [{"command": ["stream_c.exe"], "slot": "task", "count": {"per_slot": 1}}], "attributes": {"system": {"duration": 0, "cwd": "/opt/stream", "shell": {"options": {"rlimit": {"cpu": -1, "fsize": -1, "data": -1, "stack": 8388608, "core": -1, "nofile": 1048576, "as": -1, "rss": -1, "nproc": -1}, "cpu-affinity": "per-task"}}, "constraints": {"hostlist": ["flux-sample-59"]}}, "user": {"study_id": "stream-1-iter-1-node-59"}}, "version": 1}
START OF EVENTLOG
{"timestamp":1724465602.5672448,"name":"init"}
{"timestamp":1724465602.5683599,"name":"starting"}
{"timestamp":1724465602.6061108,"name":"shell.init","context":{"service":"0-shell-fWMqC6Sj","leader-rank":59,"size":1}}
{"timestamp":1724465603.037828,"name":"shell.start","context":{"taskmap":{"version":1,"map":[[0,1,56,1]]}}}
{"timestamp":1724465604.113997,"name":"shell.task-exit","context":{"localid":27,"rank":27,"state":"Exited","pid":95,"wait_status":0,"signaled":0,"exitcode":0}}
{"timestamp":1724465605.2129612,"name":"complete","context":{"status":0}}
{"timestamp":1724465605.2129734,"name":"done"}

