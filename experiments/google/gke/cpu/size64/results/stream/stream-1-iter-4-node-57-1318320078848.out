-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 12933 microseconds.
   (= 12933 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           15213.6     0.013133     0.010517     0.021678
Scale:           9189.1     0.024604     0.017412     0.037260
Add:             9274.3     0.040397     0.025878     0.056438
Triad:          11271.9     0.037441     0.021292     0.057930
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21339 microseconds.
   (= 21339 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14736.9     0.013034     0.010857     0.020152
Scale:           9721.1     0.021802     0.016459     0.037482
Add:            11223.3     0.029232     0.021384     0.054625
Triad:          11182.0     0.028471     0.021463     0.051521
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 10210 microseconds.
   (= 10210 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14428.6     0.018524     0.011089     0.022774
Scale:           9327.3     0.031443     0.017154     0.039928
Add:            10356.5     0.045989     0.023174     0.058869
Triad:          10806.5     0.042069     0.022209     0.054384
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 14575 microseconds.
   (= 14575 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10624.9     0.019529     0.015059     0.022683
Scale:           6785.7     0.034875     0.023579     0.039644
Add:             8807.6     0.047272     0.027249     0.057921
Triad:           8821.0     0.043844     0.027208     0.052194
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 17735 microseconds.
   (= 17735 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10437.0     0.020160     0.015330     0.022171
Scale:           7379.4     0.032704     0.021682     0.036167
Add:             8785.8     0.045865     0.027317     0.052617
Triad:           8951.5     0.045107     0.026811     0.052503
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21974 microseconds.
   (= 21974 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14688.5     0.015403     0.010893     0.022139
Scale:           9492.2     0.026212     0.016856     0.036931
Add:            10948.0     0.038061     0.021922     0.051043
Triad:          11119.9     0.038166     0.021583     0.050123
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21049 microseconds.
   (= 21049 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           13320.0     0.018147     0.012012     0.021438
Scale:           7499.5     0.032948     0.021335     0.039052
Add:             9091.9     0.042785     0.026397     0.050941
Triad:           9230.0     0.042439     0.026002     0.052137
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 26474 microseconds.
   (= 26474 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12764.4     0.018709     0.012535     0.022116
Scale:           7655.1     0.030379     0.020901     0.035000
Add:             8767.1     0.042558     0.027375     0.052424
Triad:          10304.5     0.043765     0.023291     0.055454
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7429 microseconds.
   (= 7429 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7187.2     0.025308     0.022262     0.027059
Scale:           4040.2     0.044307     0.039602     0.046387
Add:             3993.0     0.067509     0.060105     0.071235
Triad:           4389.2     0.061366     0.054679     0.065448
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7313 microseconds.
   (= 7313 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7156.6     0.025725     0.022357     0.027680
Scale:           4074.8     0.043747     0.039266     0.045830
Add:             3990.6     0.067904     0.060141     0.071972
Triad:           4344.6     0.062096     0.055241     0.066072
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7079 microseconds.
   (= 7079 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8407.3     0.024704     0.019031     0.026828
Scale:           4513.0     0.044522     0.035453     0.047212
Add:             4142.1     0.065952     0.057942     0.070457
Triad:           4097.3     0.065447     0.058575     0.069588
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7673 microseconds.
   (= 7673 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7786.2     0.024867     0.020549     0.026622
Scale:           4302.3     0.043428     0.037189     0.045646
Add:             4041.4     0.066927     0.059385     0.070604
Triad:           4148.4     0.067398     0.057854     0.071616
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
STREAM version $Revision: 5.10 $
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Each kernel will be executed 10 times.
This system uses 8 bytes per array element.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Your clock granularity/precision appears to be 1 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each test below will take on the order of 17485 microseconds.
Each kernel will be executed 10 times.
   (= 17485 clock ticks)
 The *best* time for each kernel (excluding the first iteration)
Increase the size of the arrays if this shows that
 will be used to compute the reported bandwidth.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
WARNING -- The above is only a rough guideline.
Each test below will take on the order of 17560 microseconds.
For best results, please be sure you know the
   (= 17560 clock ticks)
precision of your system timer.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            6754.7     0.026434     0.023687     0.027999
WARNING -- The above is only a rough guideline.
Scale:           4138.1     0.043043     0.038665     0.045469
For best results, please be sure you know the
Add:             4411.7     0.062932     0.054401     0.067699
precision of your system timer.
Triad:           4891.6     0.064069     0.049064     0.068758
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Copy:            6743.1     0.026649     0.023728     0.028106
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
Scale:           4175.3     0.042703     0.038321     0.045095
-------------------------------------------------------------
Add:             4418.6     0.063060     0.054316     0.067686
This system uses 8 bytes per array element.
Triad:           4904.9     0.063938     0.048931     0.068657
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 8892 microseconds.
   (= 8892 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7154.0     0.025849     0.022365     0.027829
Scale:           3793.3     0.046992     0.042180     0.052644
Add:             4137.0     0.065503     0.058013     0.069320
Triad:           4321.9     0.061070     0.055531     0.064710
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 9602 microseconds.
   (= 9602 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6969.2     0.026091     0.022958     0.027453
Scale:           3918.7     0.046038     0.040830     0.049225
Add:             4141.1     0.064984     0.057955     0.069384
Triad:           4359.9     0.061958     0.055047     0.066377
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15928 microseconds.
   (= 15928 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7240.5     0.024690     0.022098     0.026271
Scale:           3989.4     0.044897     0.040106     0.047385
Add:             4345.5     0.061511     0.055229     0.065490
Triad:           4459.7     0.065894     0.053816     0.071090
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20612 microseconds.
Each test below will take on the order of 14627 microseconds.
   (= 20612 clock ticks)
   (= 14627 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7450.5     0.023919     0.021475     0.025307
Copy:            7431.1     0.024715     0.021531     0.025982
Scale:           4240.4     0.042349     0.037732     0.045237
Scale:           4116.1     0.043792     0.038872     0.046375
Add:             4365.6     0.062895     0.054975     0.067424
Add:             4140.8     0.067154     0.057960     0.071069
Triad:           5059.9     0.066897     0.047432     0.073879
Triad:           4952.6     0.064643     0.048459     0.069028
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11712 microseconds.
   (= 11712 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7802.6     0.023156     0.020506     0.024969
Scale:           4613.5     0.046083     0.034681     0.051311
Add:             4976.1     0.062825     0.048230     0.069529
Triad:           4827.1     0.060241     0.049719     0.065233
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11332 microseconds.
   (= 11332 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7092.5     0.024624     0.022559     0.026962
Scale:           4678.8     0.045437     0.034197     0.050322
Add:             4994.2     0.060883     0.048056     0.066491
Triad:           5336.4     0.059875     0.044974     0.067126
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21706 microseconds.
   (= 21706 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7314.2     0.024555     0.021875     0.026049
Scale:           4175.7     0.044285     0.038317     0.046776
Add:             4816.3     0.065735     0.049831     0.070264
Triad:           8255.7     0.062640     0.029071     0.069503
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 18767 microseconds.
   (= 18767 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7562.5     0.025203     0.021157     0.027443
Scale:           4738.4     0.043873     0.033767     0.049106
Add:             5137.2     0.059953     0.046718     0.065714
Triad:           5505.4     0.061117     0.043594     0.069858
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
Total memory required = 228.9 MiB (= 0.2 GiB).
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
 The *best* time for each kernel (excluding the first iteration)
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Each test below will take on the order of 9473 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
   (= 9473 clock ticks)
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Increase the size of the arrays if this shows that
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
STREAM version $Revision: 5.10 $
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
STREAM version $Revision: 5.10 $
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
STREAM version $Revision: 5.10 $
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 22621 microseconds.
This system uses 8 bytes per array element.
Your clock granularity/precision appears to be 1 microseconds.
This system uses 8 bytes per array element.
Your clock granularity/precision appears to be 1 microseconds.
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15277 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 26547 microseconds.
Each test below will take on the order of 9237 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
This system uses 8 bytes per array element.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
This system uses 8 bytes per array element.
For best results, please be sure you know the
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23970 microseconds.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each test below will take on the order of 30589 microseconds.
This system uses 8 bytes per array element.
Each test below will take on the order of 29951 microseconds.
Each test below will take on the order of 26497 microseconds.
Each test below will take on the order of 26634 microseconds.
   (= 15277 clock ticks)
Each test below will take on the order of 27690 microseconds.
   (= 22621 clock ticks)
Each test below will take on the order of 31459 microseconds.
Each test below will take on the order of 20560 microseconds.
Array size = 10000000 (elements), Offset = 0 (elements)
   (= 26547 clock ticks)
   (= 9237 clock ticks)
Each test below will take on the order of 23068 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 19798 microseconds.
Each test below will take on the order of 15519 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 38368 microseconds.
Each test below will take on the order of 34908 microseconds.
Each test below will take on the order of 17099 microseconds.
Each test below will take on the order of 26439 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 24538 microseconds.
Each test below will take on the order of 33303 microseconds.
Each test below will take on the order of 31500 microseconds.
-------------------------------------------------------------
precision of your system timer.
Each test below will take on the order of 16804 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 18115 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
   (= 30589 clock ticks)
-------------------------------------------------------------
   (= 29951 clock ticks)
   (= 26497 clock ticks)
   (= 26634 clock ticks)
Increase the size of the arrays if this shows that
   (= 27690 clock ticks)
Increase the size of the arrays if this shows that
   (= 31459 clock ticks)
   (= 20560 clock ticks)
Memory per array = 76.3 MiB (= 0.1 GiB).
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
   (= 23068 clock ticks)
Array size = 10000000 (elements), Offset = 0 (elements)
   (= 19798 clock ticks)
   (= 15519 clock ticks)
Array size = 10000000 (elements), Offset = 0 (elements)
   (= 38368 clock ticks)
   (= 23970 clock ticks)
   (= 34908 clock ticks)
   (= 17099 clock ticks)
   (= 26439 clock ticks)
Array size = 10000000 (elements), Offset = 0 (elements)
   (= 24538 clock ticks)
   (= 33303 clock ticks)
   (= 31500 clock ticks)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
   (= 16804 clock ticks)
Array size = 10000000 (elements), Offset = 0 (elements)
   (= 18115 clock ticks)
Each kernel will be executed 10 times.
Increase the size of the arrays if this shows that
Array size = 10000000 (elements), Offset = 0 (elements)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Total memory required = 228.9 MiB (= 0.2 GiB).
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
Memory per array = 76.3 MiB (= 0.1 GiB).
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Memory per array = 76.3 MiB (= 0.1 GiB).
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Memory per array = 76.3 MiB (= 0.1 GiB).
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Memory per array = 76.3 MiB (= 0.1 GiB).
Function    Best Rate MB/s  Avg time     Min time     Max time
Increase the size of the arrays if this shows that
Memory per array = 76.3 MiB (= 0.1 GiB).
Increase the size of the arrays if this shows that
 The *best* time for each kernel (excluding the first iteration)
you are not getting at least 20 clock ticks per test.
Memory per array = 76.3 MiB (= 0.1 GiB).
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Total memory required = 228.9 MiB (= 0.2 GiB).
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Total memory required = 228.9 MiB (= 0.2 GiB).
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Total memory required = 228.9 MiB (= 0.2 GiB).
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Total memory required = 228.9 MiB (= 0.2 GiB).
Copy:            6855.5     0.026539     0.023339     0.027578
you are not getting at least 20 clock ticks per test.
Total memory required = 228.9 MiB (= 0.2 GiB).
you are not getting at least 20 clock ticks per test.
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Each kernel will be executed 10 times.
Scale:           3905.0     0.046377     0.040973     0.049362
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
 will be used to compute the reported bandwidth.
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
 The *best* time for each kernel (excluding the first iteration)
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
 The *best* time for each kernel (excluding the first iteration)
WARNING -- The above is only a rough guideline.
Each kernel will be executed 10 times.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
 The *best* time for each kernel (excluding the first iteration)
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
 The *best* time for each kernel (excluding the first iteration)
Add:             4052.5     0.066456     0.059223     0.070085
WARNING -- The above is only a rough guideline.
 The *best* time for each kernel (excluding the first iteration)
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
 will be used to compute the reported bandwidth.
For best results, please be sure you know the
For best results, please be sure you know the
 will be used to compute the reported bandwidth.
For best results, please be sure you know the
 The *best* time for each kernel (excluding the first iteration)
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
 will be used to compute the reported bandwidth.
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
Your clock granularity/precision appears to be 1 microseconds.
For best results, please be sure you know the
 will be used to compute the reported bandwidth.
Triad:           4330.6     0.063250     0.055419     0.066902
For best results, please be sure you know the
 will be used to compute the reported bandwidth.
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
 will be used to compute the reported bandwidth.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
Each test below will take on the order of 32435 microseconds.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 28576 microseconds.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
   (= 32435 clock ticks)
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7732.4     0.024696     0.020692     0.026922
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
   (= 28576 clock ticks)
Copy:            7559.3     0.024297     0.021166     0.029550
Copy:            6677.8     0.027107     0.023960     0.028337
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Each test below will take on the order of 29169 microseconds.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Each test below will take on the order of 27590 microseconds.
Function    Best Rate MB/s  Avg time     Min time     Max time
Your clock granularity/precision appears to be 1 microseconds.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Each test below will take on the order of 32170 microseconds.
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7045.3     0.025469     0.022710     0.027045
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Increase the size of the arrays if this shows that
Function    Best Rate MB/s  Avg time     Min time     Max time
Each test below will take on the order of 28915 microseconds.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Each test below will take on the order of 32858 microseconds.
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7253.6     0.025822     0.022058     0.033181
Copy:            7390.0     0.025845     0.021651     0.033654
Scale:           4575.0     0.042481     0.034973     0.045812
Copy:            7767.0     0.024126     0.020600     0.027714
Copy:            7322.0     0.024674     0.021852     0.026176
Increase the size of the arrays if this shows that
Scale:           4868.3     0.042225     0.032866     0.049933
Scale:           3923.5     0.046492     0.040780     0.049456
Copy:            7674.9     0.025792     0.020847     0.028537
Copy:            7177.8     0.026454     0.022291     0.042020
   (= 29169 clock ticks)
Copy:            7228.8     0.025010     0.022134     0.028880
Copy:            7106.4     0.026478     0.022515     0.028850
   (= 27590 clock ticks)
Copy:            6454.5     0.027549     0.024789     0.029540
Each test below will take on the order of 33635 microseconds.
Copy:            7711.9     0.025814     0.020747     0.028853
Copy:            6205.6     0.028618     0.025783     0.030712
Copy:            7069.9     0.026567     0.022631     0.029384
Copy:            6246.8     0.028477     0.025613     0.031357
   (= 32170 clock ticks)
Copy:            6479.6     0.027533     0.024693     0.029587
Scale:           3875.3     0.045996     0.041287     0.048612
Copy:            7676.4     0.025984     0.020843     0.034644
Copy:            6803.9     0.026855     0.023516     0.029220
Copy:            7653.0     0.028239     0.020907     0.051716
you are not getting at least 20 clock ticks per test.
Copy:            6899.5     0.026649     0.023190     0.029231
   (= 28915 clock ticks)
Copy:            7548.6     0.023740     0.021196     0.025526
   (= 32858 clock ticks)
Copy:            7166.2     0.027975     0.022327     0.041826
Add:             4939.5     0.059910     0.048588     0.065426
Scale:           4800.5     0.040900     0.033330     0.048400
Scale:           4155.4     0.042972     0.038504     0.045199
you are not getting at least 20 clock ticks per test.
Add:             5291.2     0.056843     0.045358     0.066395
Add:             4010.0     0.066595     0.059851     0.069893
Scale:           4772.3     0.041996     0.033527     0.046102
Scale:           4748.6     0.044145     0.033694     0.060926
Increase the size of the arrays if this shows that
Scale:           4808.1     0.044163     0.033277     0.058584
Scale:           4694.8     0.046085     0.034080     0.051358
Increase the size of the arrays if this shows that
Scale:           4324.9     0.043059     0.036995     0.046304
   (= 33635 clock ticks)
Scale:           4747.6     0.043100     0.033701     0.046927
Scale:           5190.1     0.043085     0.030828     0.047475
Scale:           4665.0     0.045941     0.034298     0.051192
Scale:           4705.2     0.041968     0.034005     0.048265
Scale:           4787.8     0.045739     0.033418     0.053455
Increase the size of the arrays if this shows that
Scale:           4512.9     0.046765     0.035454     0.051143
Add:             4250.4     0.063558     0.056465     0.066489
Scale:           4835.6     0.042589     0.033088     0.059815
Scale:           4150.1     0.044758     0.038553     0.048604
Scale:           4862.3     0.040301     0.032906     0.048210
-------------------------------------------------------------
Scale:           4121.4     0.044895     0.038822     0.048776
Increase the size of the arrays if this shows that
Scale:           4747.2     0.041916     0.033704     0.048630
Scale:           3853.8     0.047842     0.041517     0.051282
Increase the size of the arrays if this shows that
Scale:           5166.1     0.043188     0.030971     0.053042
-------------------------------------------------------------
Triad:           5706.8     0.054003     0.042055     0.061873
Triad:           4336.9     0.063254     0.055339     0.066553
Add:             5041.9     0.059445     0.047601     0.066381
Add:             5219.9     0.056100     0.045978     0.065300
you are not getting at least 20 clock ticks per test.
Triad:           5804.4     0.062441     0.041348     0.072911
Add:             5327.9     0.057160     0.045046     0.065483
Add:             5166.9     0.059749     0.046450     0.066101
you are not getting at least 20 clock ticks per test.
Add:             6210.5     0.058984     0.038644     0.065837
Increase the size of the arrays if this shows that
Add:             4902.0     0.059856     0.048960     0.066032
Add:             6737.8     0.058695     0.035620     0.066009
Add:             5460.4     0.059407     0.043953     0.066015
Add:             5507.9     0.056217     0.043574     0.065273
Add:             6554.0     0.059195     0.036619     0.065743
you are not getting at least 20 clock ticks per test.
Add:             5518.4     0.055286     0.043491     0.066194
Add:             6480.9     0.059600     0.037032     0.066294
Triad:           4612.3     0.067351     0.052035     0.071836
Add:             5828.9     0.055483     0.041174     0.064120
Add:             5624.6     0.059843     0.042670     0.065742
Add:             5880.2     0.054072     0.040815     0.064031
WARNING -- The above is only a rough guideline.
Add:             5810.3     0.059681     0.041306     0.065547
you are not getting at least 20 clock ticks per test.
Add:             5193.4     0.056539     0.046213     0.064821
Add:             4857.7     0.062623     0.049406     0.067730
Add:             4336.0     0.064071     0.055351     0.067489
you are not getting at least 20 clock ticks per test.
Add:             6495.6     0.059927     0.036948     0.071234
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           6364.5     0.060965     0.037709     0.072406
Triad:           6555.8     0.054459     0.036609     0.065122
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           6389.9     0.054934     0.037559     0.069616
Triad:           5680.3     0.058390     0.042251     0.066363
-------------------------------------------------------------
Triad:           9473.0     0.060859     0.025335     0.070947
you are not getting at least 20 clock ticks per test.
Triad:           6116.2     0.059976     0.039240     0.070467
Triad:           8191.1     0.060068     0.029300     0.068600
Triad:           5693.0     0.058500     0.042157     0.066602
Triad:           6174.8     0.054022     0.038868     0.064460
Triad:           7737.4     0.058379     0.031018     0.065846
-------------------------------------------------------------
Triad:           6468.3     0.057726     0.037104     0.069939
Triad:           7573.2     0.057845     0.031691     0.065056
-------------------------------------------------------------
Triad:           7021.2     0.055825     0.034182     0.065997
Triad:           7582.7     0.059522     0.031651     0.067752
Triad:           6945.5     0.057045     0.034555     0.071488
For best results, please be sure you know the
Triad:           6420.7     0.059952     0.037379     0.067664
-------------------------------------------------------------
Triad:           6323.3     0.054583     0.037955     0.065141
Triad:           6912.5     0.057881     0.034720     0.065014
Triad:           5392.4     0.068887     0.044507     0.075203
-------------------------------------------------------------
Triad:          10096.3     0.064169     0.023771     0.074496
For best results, please be sure you know the
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
For best results, please be sure you know the
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
For best results, please be sure you know the
Solution Validates: avg error less than 1.000000e-13 on all three arrays
WARNING -- The above is only a rough guideline.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
For best results, please be sure you know the
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
For best results, please be sure you know the
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
For best results, please be sure you know the
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
Copy:           11768.9     0.028230     0.013595     0.032058
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10447.9     0.028707     0.015314     0.032121
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           8149.1     0.042279     0.019634     0.047941
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Add:             8896.8     0.058009     0.026976     0.066019
Scale:           8088.5     0.043147     0.019781     0.048960
Copy:           11956.4     0.029756     0.013382     0.033664
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10840.3     0.029203     0.014760     0.032912
Copy:           11905.7     0.027467     0.013439     0.031375
Copy:           12124.0     0.027697     0.013197     0.031901
Copy:           11655.1     0.028494     0.013728     0.031433
Triad:           9154.7     0.056933     0.026216     0.066756
Add:             8902.1     0.057924     0.026960     0.065706
Scale:           8398.5     0.041917     0.019051     0.047665
Copy:           12211.8     0.027748     0.013102     0.031600
Scale:           8192.1     0.042321     0.019531     0.047639
Scale:           8727.0     0.042900     0.018334     0.048419
Scale:           8117.3     0.041888     0.019711     0.047391
Scale:           8399.8     0.043634     0.019048     0.050514
-------------------------------------------------------------
Triad:           9156.8     0.056402     0.026210     0.065874
Add:             9014.8     0.058322     0.026623     0.067138
Scale:           8332.5     0.041879     0.019202     0.047393
Add:             8888.2     0.057925     0.027002     0.065809
Add:             9072.4     0.058170     0.026454     0.066225
Add:             8879.7     0.058322     0.027028     0.068649
Add:             8303.0     0.058621     0.028905     0.066996
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Triad:           9199.3     0.055905     0.026089     0.066825
Add:             8998.2     0.058225     0.026672     0.066705
Triad:           9264.7     0.056449     0.025905     0.066207
Triad:           9021.9     0.056016     0.026602     0.066280
Triad:           8375.5     0.057874     0.028655     0.068005
Triad:           9108.5     0.055628     0.026349     0.065672
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Triad:           9230.0     0.057333     0.026002     0.068288
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
START OF JOBSPEC
{"resources": [{"type": "node", "count": 1, "with": [{"type": "slot", "count": 56, "with": [{"type": "core", "count": 1}], "label": "task"}]}], "tasks": [{"command": ["stream_c.exe"], "slot": "task", "count": {"per_slot": 1}}], "attributes": {"system": {"duration": 0, "cwd": "/opt/stream", "shell": {"options": {"rlimit": {"cpu": -1, "fsize": -1, "data": -1, "stack": 8388608, "core": -1, "nofile": 1048576, "as": -1, "rss": -1, "nproc": -1}, "cpu-affinity": "per-task"}}, "constraints": {"hostlist": ["flux-sample-57"]}}, "user": {"study_id": "stream-1-iter-4-node-57"}}, "version": 1}
START OF EVENTLOG
{"timestamp":1724393273.6131365,"name":"init"}
{"timestamp":1724393273.6149457,"name":"starting"}
{"timestamp":1724393273.6314869,"name":"shell.init","context":{"service":"0-shell-fbdYRzrs","leader-rank":57,"size":1}}
{"timestamp":1724393273.9257252,"name":"shell.start","context":{"taskmap":{"version":1,"map":[[0,1,56,1]]}}}
{"timestamp":1724393275.1138885,"name":"shell.task-exit","context":{"localid":52,"rank":52,"state":"Exited","pid":291,"wait_status":0,"signaled":0,"exitcode":0}}
{"timestamp":1724393276.1148899,"name":"complete","context":{"status":0}}
{"timestamp":1724393276.1149087,"name":"done"}

