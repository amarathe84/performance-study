FROM ghcr.io/converged-computing/azurehpc:flux-slim-nogpu

# Build command
#  docker build -f Dockerfile.azurehpc -t ghcr.io/converged-computing/metric-lammps-cpu:azure-hpc-vanilla .
#  docker push ghcr.io/converged-computing/metric-lammps-cpu:azure-hpc-vanilla

ENV DEBIAN_FRONTEND=noninteractive
ENV UCX_NET_DEVICES=mlx5_0:1
ENV UCX_TLS=ib
ENV OMPI_MCA_btl_openib_warn_no_device_params_found=0

# This is for hpc-x - faster but HUGE startup delay with warnings that make it irrelevant
ENV LD_LIBRARY_PATH=/opt/hpcx-v2.19-gcc-mlnx_ofed-ubuntu22.04-cuda12-x86_64/hpcx-rebuild/lib:/opt/hpcx-v2.19-gcc-mlnx_ofed-ubuntu22.04-cuda12-x86_64/hcoll/lib
ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hpcx-v2.19-gcc-mlnx_ofed-ubuntu22.04-cuda12-x86_64/hpcx-rebuild/bin

# This was openmpi - 120x slower, no startup delay
# ENV LD_LIBRARY_PATH=/opt/openmpi-5.0.5/lib:/opt/hpcx-v2.19-gcc-mlnx_ofed-ubuntu22.04-cuda12-x86_64/hcoll/lib
# ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/openmpi-5.0.5/bin:$PATH

# mpich
# ENV LD_LIBRARY_PATH=/opt/mvapich2-2.3.7-1/lib
# ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/mvapich2-2.3.7-1/bin:$PATH

WORKDIR /opt
RUN python3 -m pip install clang-format && \
   mkdir lammps && \
   cd lammps && \
   git init && \
   git remote add origin https://github.com/lammps/lammps.git && \
   git fetch --depth 1 origin a8687b53724b630fb5f454c8d7be9f9370f8bb3b && \
   git checkout FETCH_HEAD && \
   mkdir build && \
   cd build && \
   cmake \
  -D CMAKE_INSTALL_PREFIX=/usr \
  -D CMAKE_BUILD_TYPE=Release \
  -D MPI_CXX_COMPILER=mpicxx \
  -D BUILD_MPI=yes \
  -D PKG_ML-SNAP=yes \
  -D PKG_GPU=no \
  -D PKG_REAXFF=on \
  -D PKG_KOKKOS=yes \
  ../cmake && make -j4 && make install
  
WORKDIR /code
COPY ./common .

# Make a copy for uid 1000, assuming ubuntu user
RUN cp -R /code /lammps && \
    cp -R /code/* /lammps/ && \
    chown -R 1000 /lammps
