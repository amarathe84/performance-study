-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 14317 microseconds.
   (= 14317 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           15125.9     0.012204     0.010578     0.020980
Scale:           9509.0     0.020967     0.016826     0.042867
Add:            11078.2     0.025673     0.021664     0.049643
Triad:          11412.3     0.025556     0.021030     0.055292
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21491 microseconds.
   (= 21491 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14782.0     0.017201     0.010824     0.022689
Scale:           8763.7     0.031351     0.018257     0.039456
Add:            10505.1     0.043032     0.022846     0.054074
Triad:          10998.1     0.039906     0.021822     0.050392
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19903 microseconds.
   (= 19903 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14787.2     0.018735     0.010820     0.023221
Scale:           8889.9     0.032152     0.017998     0.039138
Add:             7671.4     0.042781     0.031285     0.050844
Triad:           8936.9     0.041488     0.026855     0.051687
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23066 microseconds.
   (= 23066 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11348.2     0.018743     0.014099     0.022278
Scale:           6490.3     0.031578     0.024652     0.038542
Add:             7644.8     0.043435     0.031394     0.050619
Triad:           9607.3     0.043297     0.024981     0.053069
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 26917 microseconds.
   (= 26917 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14741.1     0.018680     0.010854     0.023510
Scale:           9229.3     0.031030     0.017336     0.037676
Add:            10888.3     0.041501     0.022042     0.054927
Triad:          10900.7     0.043157     0.022017     0.059426
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7261 microseconds.
   (= 7261 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7621.6     0.024627     0.020993     0.026568
Scale:           3961.2     0.045598     0.040392     0.047586
Add:             3972.1     0.068416     0.060422     0.072279
Triad:           4255.1     0.063391     0.056403     0.067639
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21178 microseconds.
   (= 21178 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14629.3     0.020280     0.010937     0.023389
Scale:           9244.3     0.033176     0.017308     0.038674
Add:             7624.3     0.046008     0.031478     0.052793
Triad:          10130.5     0.048496     0.023691     0.055387
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7443 microseconds.
   (= 7443 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7193.0     0.025282     0.022244     0.026989
Scale:           3876.9     0.046349     0.041270     0.048753
Add:             4062.0     0.067407     0.059084     0.071041
Triad:           4283.3     0.065065     0.056032     0.069034
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11646 microseconds.
   (= 11646 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7196.5     0.025505     0.022233     0.027247
Scale:           4620.5     0.045630     0.034628     0.050689
Add:             4945.3     0.061495     0.048531     0.068527
Triad:           5132.0     0.059370     0.046766     0.065222
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 12557 microseconds.
   (= 12557 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7134.9     0.025405     0.022425     0.027199
Scale:           4675.2     0.045609     0.034223     0.050600
Add:             4971.0     0.061333     0.048280     0.068285
Triad:           5049.6     0.059831     0.047529     0.065087
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 10173 microseconds.
   (= 10173 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
STREAM version $Revision: 5.10 $
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            6607.5     0.026829     0.024215     0.027928
Array size = 10000000 (elements), Offset = 0 (elements)
Scale:           3958.8     0.045721     0.040416     0.048731
Memory per array = 76.3 MiB (= 0.1 GiB).
Add:             4130.2     0.065806     0.058109     0.068995
Total memory required = 228.9 MiB (= 0.2 GiB).
Triad:           4226.1     0.063766     0.056790     0.067094
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Solution Validates: avg error less than 1.000000e-13 on all three arrays
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
STREAM version $Revision: 5.10 $
Each test below will take on the order of 8594 microseconds.
-------------------------------------------------------------
   (= 8594 clock ticks)
This system uses 8 bytes per array element.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
WARNING -- The above is only a rough guideline.
Total memory required = 228.9 MiB (= 0.2 GiB).
For best results, please be sure you know the
Each kernel will be executed 10 times.
precision of your system timer.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            6780.2     0.026891     0.023598     0.028028
Your clock granularity/precision appears to be 1 microseconds.
Scale:           3945.1     0.045696     0.040557     0.048603
Each test below will take on the order of 17052 microseconds.
Add:             4112.8     0.066104     0.058354     0.069628
   (= 17052 clock ticks)
Triad:           4246.6     0.064030     0.056516     0.067593
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7547.5     0.024845     0.021199     0.026795
Scale:           4644.5     0.043956     0.034449     0.049138
Add:             5140.6     0.059942     0.046687     0.065978
Triad:           5336.2     0.061389     0.044976     0.069404
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15522 microseconds.
   (= 15522 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7270.8     0.025117     0.022006     0.026738
Scale:           3915.3     0.045916     0.040865     0.048454
Add:             4229.7     0.063420     0.056741     0.066003
Triad:           4548.3     0.067068     0.052767     0.071632
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23937 microseconds.
   (= 23937 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7873.6     0.024574     0.020321     0.027067
Scale:           4655.4     0.041334     0.034369     0.045255
Add:             5277.5     0.059253     0.045476     0.065433
Triad:           5832.7     0.063159     0.041147     0.073713
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
Each test below will take on the order of 20105 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
   (= 20105 clock ticks)
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
Increase the size of the arrays if this shows that
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
This system uses 8 bytes per array element.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
For best results, please be sure you know the
Array size = 10000000 (elements), Offset = 0 (elements)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
precision of your system timer.
Memory per array = 76.3 MiB (= 0.1 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
Function    Best Rate MB/s  Avg time     Min time     Max time
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Copy:            7148.0     0.025017     0.022384     0.026580
 The *best* time for each kernel (excluding the first iteration)
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Scale:           4149.0     0.043329     0.038564     0.045267
 will be used to compute the reported bandwidth.
Each test below will take on the order of 21569 microseconds.
Each test below will take on the order of 25913 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24324 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 23669 microseconds.
Each test below will take on the order of 17117 microseconds.
Each test below will take on the order of 20147 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 21605 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 15192 microseconds.
Add:             4328.4     0.065002     0.055448     0.069678
-------------------------------------------------------------
   (= 21569 clock ticks)
   (= 25913 clock ticks)
Each test below will take on the order of 32516 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32146 microseconds.
Each test below will take on the order of 30519 microseconds.
Each test below will take on the order of 30302 microseconds.
Each test below will take on the order of 32946 microseconds.
Each test below will take on the order of 7938 microseconds.
Each test below will take on the order of 32070 microseconds.
Each test below will take on the order of 31189 microseconds.
Each test below will take on the order of 29125 microseconds.
   (= 24324 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 23669 clock ticks)
   (= 17117 clock ticks)
   (= 20147 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
   (= 21605 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 15192 clock ticks)
Triad:           5064.0     0.066888     0.047393     0.071522
Your clock granularity/precision appears to be 1 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
   (= 32516 clock ticks)
Each test below will take on the order of 17912 microseconds.
Each test below will take on the order of 8668 microseconds.
   (= 32146 clock ticks)
   (= 30519 clock ticks)
   (= 30302 clock ticks)
   (= 32946 clock ticks)
   (= 7938 clock ticks)
   (= 32070 clock ticks)
   (= 31189 clock ticks)
   (= 29125 clock ticks)
Increase the size of the arrays if this shows that
Each test below will take on the order of 22321 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Each test below will take on the order of 20447 microseconds.
Each test below will take on the order of 12300 microseconds.
Increase the size of the arrays if this shows that
Each test below will take on the order of 11890 microseconds.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Each test below will take on the order of 25708 microseconds.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
   (= 17912 clock ticks)
   (= 8668 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
   (= 22321 clock ticks)
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
   (= 20447 clock ticks)
   (= 12300 clock ticks)
you are not getting at least 20 clock ticks per test.
   (= 11890 clock ticks)
you are not getting at least 20 clock ticks per test.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
   (= 25708 clock ticks)
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
precision of your system timer.
precision of your system timer.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Copy:            9292.5     0.022393     0.017218     0.025678
Copy:            9390.7     0.022283     0.017038     0.024878
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7929.9     0.026414     0.020177     0.031333
-------------------------------------------------------------
Copy:            7968.5     0.026311     0.020079     0.030959
Copy:            8134.6     0.024096     0.019669     0.028148
Copy:            8313.0     0.026061     0.019247     0.032034
-------------------------------------------------------------
-------------------------------------------------------------
Copy:            7538.0     0.024282     0.021226     0.025729
-------------------------------------------------------------
Copy:            7116.5     0.025357     0.022483     0.027141
-------------------------------------------------------------
Scale:           5706.3     0.035208     0.028039     0.039035
Scale:           5757.7     0.035335     0.027789     0.038546
Copy:           12101.9     0.028515     0.013221     0.032401
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12120.3     0.028775     0.013201     0.033107
Copy:           11907.4     0.030465     0.013437     0.034647
Copy:           11632.1     0.030479     0.013755     0.034295
Copy:           11743.0     0.028444     0.013625     0.032385
Copy:            6879.0     0.024593     0.023259     0.026597
Copy:           11444.8     0.027111     0.013980     0.031899
Copy:           11176.2     0.028657     0.014316     0.034474
Copy:           11221.1     0.029112     0.014259     0.033671
Scale:           5009.8     0.043056     0.031937     0.049574
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           5038.6     0.042904     0.031755     0.047444
Scale:           4840.3     0.045831     0.033056     0.052930
Scale:           5194.6     0.043225     0.030801     0.049389
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4180.3     0.043026     0.038275     0.045430
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4131.5     0.043474     0.038727     0.045747
Function    Best Rate MB/s  Avg time     Min time     Max time
Add:             6724.4     0.050539     0.035691     0.053637
Add:             6703.2     0.049459     0.035804     0.052672
Scale:           8830.0     0.041955     0.018120     0.047461
Copy:            7109.9     0.024332     0.022504     0.026455
Copy:            6784.8     0.025221     0.023582     0.027647
Scale:           8340.8     0.042118     0.019183     0.047749
Scale:           8281.2     0.041587     0.019321     0.047938
Scale:           8241.9     0.041860     0.019413     0.047780
Scale:           8248.3     0.042212     0.019398     0.047441
Scale:           4095.4     0.045496     0.039068     0.050116
Scale:           8294.5     0.043165     0.019290     0.049170
Scale:           8209.3     0.041413     0.019490     0.046999
Scale:           8153.3     0.042390     0.019624     0.048043
Add:             5816.8     0.058368     0.041260     0.065015
Copy:            8628.6     0.022308     0.018543     0.023698
Add:             5287.5     0.059035     0.045390     0.065116
Add:             5092.1     0.062490     0.047132     0.066811
Add:             6102.8     0.058724     0.039326     0.066312
Copy:            6720.4     0.024815     0.023808     0.027105
Copy:            6865.2     0.026232     0.023306     0.029201
Add:             4631.4     0.067353     0.051820     0.071797
Copy:            7153.4     0.025195     0.022367     0.027758
Add:             4135.1     0.065459     0.058039     0.069333
Copy:            7501.5     0.023926     0.021329     0.026571
Triad:           9479.5     0.046354     0.025318     0.052961
Triad:          11382.0     0.046463     0.021086     0.052728
Add:             8937.8     0.057893     0.026852     0.065775
Scale:           4277.3     0.043557     0.037407     0.047943
Scale:           3960.3     0.044842     0.040401     0.048983
Add:             8925.6     0.058035     0.026889     0.065540
Add:             8869.2     0.057538     0.027060     0.065397
Add:             8862.6     0.057527     0.027080     0.065103
Add:             8893.1     0.057387     0.026987     0.065319
Add:             4633.8     0.062732     0.051793     0.069315
Add:             8962.6     0.058261     0.026778     0.065018
Add:             8980.0     0.057686     0.026726     0.070178
Add:             8997.5     0.057359     0.026674     0.065095
Triad:           6433.1     0.059085     0.037307     0.069189
Scale:           5012.5     0.040766     0.031920     0.045312
Triad:           5707.8     0.060271     0.042048     0.068566
Triad:           5107.1     0.059355     0.046993     0.065520
Triad:           6104.1     0.062620     0.039318     0.071535
Scale:           4582.4     0.041833     0.034916     0.046069
Scale:           4217.6     0.043552     0.037936     0.047860
Triad:           8543.3     0.063026     0.028092     0.070867
Scale:           3870.1     0.045599     0.041343     0.049614
Triad:           4649.1     0.067066     0.051623     0.071433
Scale:           4660.7     0.040629     0.034330     0.044501
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           8224.0     0.056575     0.029183     0.066906
Add:             5182.0     0.059202     0.046314     0.064077
Add:             4859.7     0.062046     0.049386     0.068691
Triad:           8653.3     0.056790     0.027735     0.066417
Triad:          10428.8     0.056334     0.023013     0.066608
Triad:           9002.6     0.056405     0.026659     0.066136
Triad:           8553.8     0.057259     0.028058     0.067006
Triad:           5098.8     0.058865     0.047070     0.062802
Triad:           9119.0     0.056613     0.026319     0.065730
Triad:           9756.1     0.057785     0.024600     0.070403
Triad:           8680.0     0.057624     0.027650     0.066256
-------------------------------------------------------------
Add:             5695.8     0.065899     0.042136     0.075319
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Add:             5153.2     0.060696     0.046573     0.065206
Add:             5686.3     0.060417     0.042207     0.066262
-------------------------------------------------------------
Add:             3940.2     0.062771     0.060910     0.067091
-------------------------------------------------------------
Add:             5618.6     0.061322     0.042715     0.069362
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Triad:           4921.4     0.064200     0.048767     0.071881
Triad:           4774.4     0.060254     0.050268     0.065120
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           7508.5     0.058210     0.031964     0.067743
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           4725.2     0.064015     0.050792     0.070982
Triad:           4836.9     0.061525     0.049619     0.067921
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           5514.0     0.059917     0.043526     0.067812
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           6493.9     0.064271     0.036958     0.072855
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 10086 microseconds.
   (= 10086 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6953.2     0.025705     0.023011     0.027439
Scale:           3904.5     0.046693     0.040978     0.049362
Add:             4182.3     0.066003     0.057385     0.068910
Triad:           4905.5     0.061996     0.048924     0.065749
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 9109 microseconds.
   (= 9109 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6914.1     0.026206     0.023141     0.028081
Scale:           3903.7     0.046578     0.040987     0.048967
Add:             4235.6     0.065853     0.056663     0.069136
Triad:           5268.3     0.061945     0.045556     0.066585
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 12840 microseconds.
   (= 12840 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7346.5     0.024226     0.021779     0.025952
Scale:           4165.3     0.043108     0.038413     0.045366
Add:             4221.2     0.065776     0.056856     0.068274
Triad:           4779.0     0.067777     0.050220     0.072469
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 16520 microseconds.
   (= 16520 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7212.7     0.025401     0.022183     0.026804
Scale:           4007.8     0.045354     0.039922     0.046873
Add:             4176.2     0.063904     0.057468     0.066815
Triad:           5850.5     0.065369     0.041022     0.072164
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 25974 microseconds.
   (= 25974 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7560.4     0.023949     0.021163     0.024714
Scale:           4285.0     0.043036     0.037340     0.045169
Add:             5084.3     0.062774     0.047204     0.066867
Triad:           7277.4     0.066369     0.032979     0.074878
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15707 microseconds.
   (= 15707 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7484.6     0.024497     0.021377     0.025804
Scale:           4190.2     0.047346     0.038184     0.050188
Add:             6255.8     0.064266     0.038364     0.070814
Triad:           7148.4     0.060019     0.033574     0.066053
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24028 microseconds.
   (= 24028 clock ticks)
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
This system uses 8 bytes per array element.
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Function    Best Rate MB/s  Avg time     Min time     Max time
Total memory required = 228.9 MiB (= 0.2 GiB).
Copy:            7059.6     0.025779     0.022664     0.026785
Each kernel will be executed 10 times.
Scale:           4019.2     0.045141     0.039809     0.047717
 The *best* time for each kernel (excluding the first iteration)
Add:             7019.6     0.062921     0.034190     0.070497
 will be used to compute the reported bandwidth.
Triad:          10212.8     0.060537     0.023500     0.068167
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Each test below will take on the order of 25580 microseconds.
-------------------------------------------------------------
   (= 25580 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6972.3     0.026315     0.022948     0.027764
Scale:           5922.4     0.043093     0.027016     0.047349
Add:             7013.8     0.061559     0.034218     0.067976
Triad:          10386.0     0.062073     0.023108     0.070247
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 26788 microseconds.
   (= 26788 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9601.0     0.027234     0.016665     0.031013
Scale:           6832.0     0.043847     0.023419     0.048402
Add:             8448.3     0.058717     0.028408     0.068375
Triad:           9212.7     0.055452     0.026051     0.065964
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 30909 microseconds.
   (= 30909 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9719.3     0.027237     0.016462     0.030186
Scale:           7095.7     0.043178     0.022549     0.048274
Add:             8461.7     0.058541     0.028363     0.067266
Triad:           9367.3     0.056106     0.025621     0.066649
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 26988 microseconds.
   (= 26988 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9782.9     0.027496     0.016355     0.031159
Scale:           7237.5     0.043441     0.022107     0.048627
Add:             8748.9     0.058496     0.027432     0.066567
Triad:           8236.7     0.057244     0.029138     0.067453
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31655 microseconds.
   (= 31655 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10241.4     0.026713     0.015623     0.030449
Scale:           7402.9     0.044280     0.021613     0.050645
Add:             8854.8     0.058253     0.027104     0.067008
Triad:           9311.0     0.056094     0.025776     0.065904
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32274 microseconds.
   (= 32274 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10837.3     0.027946     0.014764     0.031393
Scale:           7350.2     0.043478     0.021768     0.050256
Add:             8932.2     0.057536     0.026869     0.066436
Triad:           9350.9     0.056468     0.025666     0.066844
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 28669 microseconds.
   (= 28669 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9972.6     0.027992     0.016044     0.034174
Scale:           7384.9     0.042085     0.021666     0.046795
Add:             9012.7     0.057557     0.026629     0.069470
Triad:           9482.0     0.057929     0.025311     0.070060
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 33663 microseconds.
   (= 33663 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11249.5     0.024816     0.014223     0.028348
Scale:           7805.3     0.043180     0.020499     0.065628
Add:             9216.6     0.056963     0.026040     0.070051
Triad:          10705.7     0.061051     0.022418     0.075086
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 30663 microseconds.
   (= 30663 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10309.4     0.029173     0.015520     0.033354
Scale:           7393.4     0.042738     0.021641     0.048017
Add:             8155.5     0.057544     0.029428     0.066556
Triad:           8493.8     0.057192     0.028256     0.067271
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
START OF JOBSPEC
{"resources": [{"type": "node", "count": 1, "with": [{"type": "slot", "count": 56, "with": [{"type": "core", "count": 1}], "label": "task"}]}], "tasks": [{"command": ["stream_c.exe"], "slot": "task", "count": {"per_slot": 1}}], "attributes": {"system": {"duration": 0, "cwd": "/opt/stream", "shell": {"options": {"rlimit": {"cpu": -1, "fsize": -1, "data": -1, "stack": 8388608, "core": -1, "nofile": 1048576, "as": -1, "rss": -1, "nproc": -1}, "cpu-affinity": "per-task"}}, "constraints": {"hostlist": ["flux-sample-224"]}}, "user": {"study_id": "stream-1-iter-2-node-224"}}, "version": 1}
START OF EVENTLOG
{"timestamp":1724465657.186177,"name":"init"}
{"timestamp":1724465657.1887326,"name":"starting"}
{"timestamp":1724465657.2248626,"name":"shell.init","context":{"service":"0-shell-fvRssodq","leader-rank":224,"size":1}}
{"timestamp":1724465657.6607928,"name":"shell.start","context":{"taskmap":{"version":1,"map":[[0,1,56,1]]}}}
{"timestamp":1724465658.5488305,"name":"shell.task-exit","context":{"localid":26,"rank":26,"state":"Exited","pid":152,"wait_status":0,"signaled":0,"exitcode":0}}
{"timestamp":1724465659.8623378,"name":"complete","context":{"status":0}}
{"timestamp":1724465659.8623543,"name":"done"}

