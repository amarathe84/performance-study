-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20965 microseconds.
   (= 20965 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14882.3     0.017004     0.010751     0.023078
Scale:           9336.0     0.029076     0.017138     0.037170
Add:            10702.4     0.039854     0.022425     0.056513
Triad:          10747.9     0.038525     0.022330     0.053706
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 18990 microseconds.
   (= 18990 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14746.6     0.016365     0.010850     0.020373
Scale:           9306.6     0.027938     0.017192     0.038520
Add:            10794.8     0.043148     0.022233     0.055574
Triad:          11117.2     0.040077     0.021588     0.053988
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19082 microseconds.
   (= 19082 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14017.8     0.019670     0.011414     0.022725
Scale:           8465.2     0.030345     0.018901     0.037223
Add:            10358.2     0.042165     0.023170     0.053866
Triad:          10305.7     0.045888     0.023288     0.055242
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32353 microseconds.
   (= 32353 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14473.1     0.015291     0.011055     0.021061
Scale:           9410.7     0.022653     0.017002     0.034248
Add:            10511.2     0.035633     0.022833     0.057823
Triad:          10797.2     0.038738     0.022228     0.054794
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19719 microseconds.
   (= 19719 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           15326.9     0.019894     0.010439     0.022848
Scale:           9543.2     0.032208     0.016766     0.039067
Add:            10008.3     0.045052     0.023980     0.053118
Triad:          11590.9     0.044811     0.020706     0.053004
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23480 microseconds.
   (= 23480 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14625.1     0.016432     0.010940     0.020672
Scale:           9187.0     0.029488     0.017416     0.037966
Add:            10813.3     0.042919     0.022195     0.055883
Triad:           9278.2     0.040914     0.025867     0.049787
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24363 microseconds.
   (= 24363 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14240.0     0.018810     0.011236     0.022403
Scale:           9349.1     0.033020     0.017114     0.039447
Add:            10186.8     0.041702     0.023560     0.051327
Triad:          10240.6     0.042582     0.023436     0.054267
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21067 microseconds.
   (= 21067 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           13036.7     0.019772     0.012273     0.022105
Scale:           9381.4     0.032984     0.017055     0.038300
Add:             9516.6     0.043999     0.025219     0.050524
Triad:          13288.4     0.044054     0.018061     0.054861
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7277 microseconds.
   (= 7277 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8282.1     0.023620     0.019319     0.025201
Scale:           4356.0     0.043765     0.036731     0.047032
Add:             4179.2     0.066109     0.057427     0.070052
Triad:           4085.8     0.066909     0.058740     0.069689
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11502 microseconds.
   (= 11502 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8261.9     0.024310     0.019366     0.026805
Scale:           4899.1     0.046148     0.032659     0.051454
Add:             4902.4     0.062722     0.048955     0.068560
Triad:           6193.4     0.056590     0.038751     0.064019
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7429 microseconds.
   (= 7429 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8114.0     0.024783     0.019719     0.026374
Scale:           3866.4     0.046068     0.041382     0.048301
Add:             4079.5     0.067884     0.058831     0.071757
Triad:           4451.0     0.066220     0.053921     0.069415
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19641 microseconds.
   (= 19641 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7755.3     0.024798     0.020631     0.027307
Scale:           4309.5     0.044671     0.037127     0.048764
Add:             6001.1     0.058380     0.039993     0.065770
Triad:           6048.6     0.060734     0.039679     0.069741
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15177 microseconds.
   (= 15177 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7462.7     0.024425     0.021440     0.026198
Scale:           3882.2     0.046330     0.041214     0.048532
Add:             4313.8     0.065522     0.055636     0.069511
Triad:           5132.4     0.064074     0.046762     0.068577
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
STREAM version $Revision: 5.10 $
Each test below will take on the order of 19942 microseconds.
-------------------------------------------------------------
   (= 19942 clock ticks)
This system uses 8 bytes per array element.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
WARNING -- The above is only a rough guideline.
Total memory required = 228.9 MiB (= 0.2 GiB).
For best results, please be sure you know the
Each kernel will be executed 10 times.
precision of your system timer.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
Copy:            8170.4     0.025000     0.019583     0.027929
STREAM version $Revision: 5.10 $
Your clock granularity/precision appears to be 1 microseconds.
Scale:           4978.7     0.043130     0.032137     0.047014
-------------------------------------------------------------
Each test below will take on the order of 8607 microseconds.
Add:             5321.9     0.059588     0.045097     0.064675
This system uses 8 bytes per array element.
   (= 8607 clock ticks)
Triad:           6384.3     0.061890     0.037592     0.071345
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
you are not getting at least 20 clock ticks per test.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
WARNING -- The above is only a rough guideline.
Each kernel will be executed 10 times.
For best results, please be sure you know the
 The *best* time for each kernel (excluding the first iteration)
precision of your system timer.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Your clock granularity/precision appears to be 1 microseconds.
Copy:            6778.2     0.026587     0.023605     0.027848
Each test below will take on the order of 9535 microseconds.
Scale:           3926.5     0.046161     0.040749     0.048377
   (= 9535 clock ticks)
Add:             4081.4     0.067374     0.058804     0.070528
Increase the size of the arrays if this shows that
Triad:           4330.0     0.062954     0.055427     0.066185
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6736.6     0.026507     0.023751     0.027691
Scale:           3917.2     0.046151     0.040846     0.048424
Add:             4111.9     0.066762     0.058367     0.069847
Triad:           4338.7     0.063190     0.055316     0.066605
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
STREAM version $Revision: 5.10 $
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
This system uses 8 bytes per array element.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Your clock granularity/precision appears to be 1 microseconds.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each test below will take on the order of 12454 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
   (= 12454 clock ticks)
Each kernel will be executed 10 times.
Increase the size of the arrays if this shows that
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
WARNING -- The above is only a rough guideline.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
For best results, please be sure you know the
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
Each test below will take on the order of 18435 microseconds.
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
precision of your system timer.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
   (= 18435 clock ticks)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Increase the size of the arrays if this shows that
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Copy:            7278.4     0.024896     0.021983     0.026848
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Scale:           5058.0     0.045929     0.031633     0.051209
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
WARNING -- The above is only a rough guideline.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Add:             4806.0     0.063467     0.049938     0.068016
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
For best results, please be sure you know the
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Triad:           4792.8     0.060821     0.050075     0.065601
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
precision of your system timer.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Function    Best Rate MB/s  Avg time     Min time     Max time
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 25508 microseconds.
Each test below will take on the order of 23644 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 17145 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 17945 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 21788 microseconds.
Each test below will take on the order of 15609 microseconds.
Each test below will take on the order of 6640 microseconds.
Copy:            7383.5     0.025421     0.021670     0.026993
-------------------------------------------------------------
Each test below will take on the order of 32305 microseconds.
Each test below will take on the order of 32057 microseconds.
Each test below will take on the order of 30351 microseconds.
Each test below will take on the order of 31170 microseconds.
Each test below will take on the order of 32220 microseconds.
Each test below will take on the order of 33575 microseconds.
Each test below will take on the order of 27599 microseconds.
Each test below will take on the order of 30467 microseconds.
Each test below will take on the order of 12491 microseconds.
   (= 25508 clock ticks)
   (= 23644 clock ticks)
Each test below will take on the order of 11903 microseconds.
   (= 17145 clock ticks)
Each test below will take on the order of 26252 microseconds.
   (= 17945 clock ticks)
Each test below will take on the order of 20283 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 9816 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
   (= 21788 clock ticks)
   (= 15609 clock ticks)
   (= 6640 clock ticks)
Scale:           4041.6     0.043525     0.039588     0.045435
Your clock granularity/precision appears to be 1 microseconds.
   (= 32305 clock ticks)
   (= 32057 clock ticks)
   (= 30351 clock ticks)
   (= 31170 clock ticks)
   (= 32220 clock ticks)
   (= 33575 clock ticks)
   (= 27599 clock ticks)
   (= 30467 clock ticks)
   (= 12491 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
   (= 11903 clock ticks)
Increase the size of the arrays if this shows that
   (= 26252 clock ticks)
Increase the size of the arrays if this shows that
   (= 20283 clock ticks)
Each test below will take on the order of 9011 microseconds.
   (= 9816 clock ticks)
Each test below will take on the order of 24419 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Add:             4601.0     0.066111     0.052163     0.070874
Each test below will take on the order of 19520 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
   (= 9011 clock ticks)
Increase the size of the arrays if this shows that
   (= 24419 clock ticks)
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Triad:           6190.5     0.064188     0.038769     0.070132
   (= 19520 clock ticks)
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
precision of your system timer.
precision of your system timer.
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6972.9     0.025196     0.022946     0.028496
Copy:            7604.6     0.025832     0.021040     0.028799
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7197.2     0.026257     0.022231     0.029077
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7091.6     0.026683     0.022562     0.029628
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            7372.6     0.024880     0.021702     0.026307
Copy:            7094.1     0.025744     0.022554     0.027065
Copy:            8243.2     0.025818     0.019410     0.029042
-------------------------------------------------------------
Copy:           12724.5     0.028407     0.012574     0.032398
Copy:           12418.4     0.027376     0.012884     0.031527
Copy:           11975.2     0.030363     0.013361     0.035201
Copy:           11886.9     0.030319     0.013460     0.034542
Copy:           13219.0     0.028138     0.012104     0.032090
Copy:           12794.8     0.028195     0.012505     0.032383
Copy:           12623.2     0.030297     0.012675     0.034294
Copy:           13845.4     0.030022     0.011556     0.034281
Copy:            9501.2     0.025881     0.016840     0.028613
Scale:           4493.1     0.043487     0.035610     0.048840
Scale:           4820.0     0.043455     0.033195     0.047901
Copy:            8415.7     0.026669     0.019012     0.029303
Scale:           4770.6     0.045826     0.033539     0.050824
Copy:            8545.2     0.025365     0.018724     0.029324
Scale:           4648.7     0.045561     0.034418     0.050510
Copy:            7750.8     0.023628     0.020643     0.025249
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8296.2     0.023908     0.019286     0.025973
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4209.2     0.043326     0.038012     0.045314
Scale:           4012.0     0.045869     0.039880     0.047935
Scale:           5025.6     0.041184     0.031837     0.045691
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           8350.3     0.042515     0.019161     0.047456
Scale:           8230.1     0.043491     0.019441     0.048813
Scale:           8292.7     0.041465     0.019294     0.046657
Scale:           8169.2     0.041402     0.019586     0.046485
Scale:           8959.1     0.042639     0.017859     0.048162
Scale:           9164.4     0.041691     0.017459     0.046660
Scale:           9121.0     0.041956     0.017542     0.048055
Scale:           8708.9     0.041432     0.018372     0.046503
Scale:           5093.8     0.042328     0.031411     0.047203
Add:             6559.7     0.059408     0.036587     0.067190
Add:             5411.0     0.057948     0.044354     0.063596
Scale:           4657.9     0.042277     0.034350     0.046397
Add:             5360.7     0.058848     0.044770     0.066197
Scale:           5238.5     0.041290     0.030543     0.045892
Add:             5340.6     0.059230     0.044939     0.065849
Scale:           6275.3     0.045133     0.025497     0.050755
Copy:            7422.9     0.026179     0.021555     0.027385
Scale:           5091.5     0.041184     0.031425     0.045525
Copy:            9091.4     0.023847     0.017599     0.027168
Add:             4461.0     0.066184     0.053800     0.070141
Add:             4289.4     0.063435     0.055952     0.066281
Add:             5770.6     0.060955     0.041590     0.068021
Copy:            8613.3     0.023464     0.018576     0.026229
Add:             8880.7     0.057960     0.027025     0.065288
Add:             8894.5     0.058076     0.026983     0.065393
Add:             8869.2     0.058002     0.027060     0.065023
Add:             8885.2     0.057901     0.027011     0.065197
Add:             9981.7     0.057343     0.024044     0.065327
Add:             8258.2     0.059147     0.029062     0.065054
Add:            10685.7     0.057284     0.022460     0.064945
Add:             6340.3     0.058380     0.037853     0.064944
Add:             5791.5     0.061850     0.041440     0.068320
Triad:          17151.7     0.062783     0.013993     0.079380
Triad:           5995.0     0.060474     0.040033     0.069953
Add:             4880.3     0.063896     0.049177     0.068489
Triad:           5955.5     0.058844     0.040299     0.065106
Add:             5660.8     0.060723     0.042397     0.068387
Triad:           5922.1     0.058079     0.040526     0.065625
Add:             7861.1     0.058721     0.030530     0.066467
Scale:           4216.7     0.043685     0.037944     0.046364
Add:             5707.9     0.067153     0.042047     0.073705
Scale:           5728.0     0.044161     0.027933     0.050441
Triad:           6238.8     0.065554     0.038469     0.071337
Triad:           4421.8     0.067039     0.054277     0.070782
Triad:           5538.6     0.062619     0.043332     0.068769
Scale:           5549.2     0.039840     0.028833     0.044980
Triad:           8897.5     0.057214     0.026974     0.067062
Triad:           9257.8     0.058114     0.025924     0.066319
Triad:           9047.4     0.056957     0.026527     0.067269
Triad:           9058.3     0.056988     0.026495     0.067313
Triad:          10833.3     0.056170     0.022154     0.066375
Triad:          11129.7     0.057813     0.021564     0.067351
Triad:          10504.1     0.057689     0.022848     0.065901
Triad:           6890.0     0.057840     0.034833     0.066318
Triad:           5569.1     0.059471     0.043095     0.067794
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           4436.6     0.062863     0.054096     0.069325
-------------------------------------------------------------
Triad:           8639.4     0.059286     0.027780     0.069406
-------------------------------------------------------------
Triad:           8357.1     0.062222     0.028718     0.069258
Add:             4124.3     0.067069     0.058191     0.070746
Triad:           6398.3     0.058813     0.037510     0.066758
Add:             6762.6     0.058787     0.035489     0.067365
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Add:             6163.6     0.066641     0.038938     0.075310
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Triad:           4518.2     0.063045     0.053118     0.067409
-------------------------------------------------------------
Triad:          10475.3     0.056965     0.022911     0.068445
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           8156.9     0.060264     0.029423     0.066445
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 8539 microseconds.
   (= 8539 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7131.4     0.026876     0.022436     0.028241
Scale:           4143.7     0.043686     0.038613     0.046091
Add:             4081.2     0.067480     0.058807     0.070878
Triad:           4703.3     0.063394     0.051028     0.067592
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 12123 microseconds.
   (= 12123 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7491.7     0.024364     0.021357     0.025817
Scale:           4042.3     0.045311     0.039581     0.047770
Add:             4351.1     0.065672     0.055159     0.070828
Triad:           5458.9     0.063897     0.043965     0.069565
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 18584 microseconds.
   (= 18584 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7638.7     0.024326     0.020946     0.025797
Scale:           4144.3     0.044727     0.038607     0.047414
Add:             4763.3     0.063934     0.050385     0.068169
Triad:           6397.4     0.064353     0.037515     0.070859
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 16209 microseconds.
   (= 16209 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7562.8     0.024233     0.021156     0.025582
Scale:           4175.5     0.042771     0.038319     0.045058
Add:             4558.5     0.067202     0.052649     0.072963
Triad:           5713.2     0.064059     0.042008     0.069545
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 25918 microseconds.
   (= 25918 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7602.1     0.024242     0.021047     0.025582
Scale:           4249.3     0.043664     0.037653     0.046524
Add:             5497.8     0.065696     0.043654     0.071346
Triad:           8674.6     0.062413     0.027667     0.069825
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20243 microseconds.
   (= 20243 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7500.9     0.025924     0.021331     0.029930
Scale:           3932.6     0.045040     0.040685     0.047137
Add:             8132.0     0.064663     0.029513     0.073621
Triad:          12564.1     0.059537     0.019102     0.072017
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 26201 microseconds.
   (= 26201 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8319.5     0.025401     0.019232     0.028341
Scale:           5695.2     0.042996     0.028094     0.048137
Add:             7004.0     0.065163     0.034266     0.075649
Triad:          15163.8     0.060045     0.015827     0.071420
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32359 microseconds.
   (= 32359 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10417.9     0.027766     0.015358     0.031738
Scale:           7275.1     0.042917     0.021993     0.048621
Add:             9638.6     0.057010     0.024900     0.065342
Triad:          10055.7     0.056091     0.023867     0.065961
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Each kernel will be executed 10 times.
STREAM version $Revision: 5.10 $
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Array size = 10000000 (elements), Offset = 0 (elements)
Each test below will take on the order of 29693 microseconds.
Memory per array = 76.3 MiB (= 0.1 GiB).
   (= 29693 clock ticks)
Total memory required = 228.9 MiB (= 0.2 GiB).
Increase the size of the arrays if this shows that
Each kernel will be executed 10 times.
you are not getting at least 20 clock ticks per test.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
Your clock granularity/precision appears to be 1 microseconds.
precision of your system timer.
Each test below will take on the order of 28363 microseconds.
-------------------------------------------------------------
   (= 28363 clock ticks)
Function    Best Rate MB/s  Avg time     Min time     Max time
Increase the size of the arrays if this shows that
Copy:            9788.3     0.030602     0.016346     0.034053
you are not getting at least 20 clock ticks per test.
Scale:           7687.9     0.042247     0.020812     0.048671
-------------------------------------------------------------
Add:             9837.7     0.056475     0.024396     0.065234
WARNING -- The above is only a rough guideline.
Triad:          11495.3     0.055355     0.020878     0.065581
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10272.9     0.030250     0.015575     0.034084
Scale:           7660.7     0.042545     0.020886     0.048660
Add:            10030.5     0.056377     0.023927     0.065268
Triad:          10198.4     0.056067     0.023533     0.066404
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32021 microseconds.
   (= 32021 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11015.5     0.028332     0.014525     0.032166
Scale:           7629.2     0.042752     0.020972     0.048702
Add:             9791.9     0.057482     0.024510     0.065595
Triad:          10250.7     0.055824     0.023413     0.066108
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32503 microseconds.
   (= 32503 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10800.7     0.028199     0.014814     0.031843
Scale:           6396.9     0.043096     0.025012     0.048455
Add:             9837.6     0.057500     0.024396     0.065705
Triad:           9299.5     0.056985     0.025808     0.067245
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 27724 microseconds.
   (= 27724 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9936.6     0.030084     0.016102     0.033841
Scale:           7429.5     0.042385     0.021536     0.048623
Add:             6655.9     0.057967     0.036058     0.065488
Triad:           8530.1     0.056252     0.028136     0.066032
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31738 microseconds.
   (= 31738 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10813.0     0.028775     0.014797     0.032348
Scale:           7562.2     0.042717     0.021158     0.048356
Add:             8773.2     0.057136     0.027356     0.065893
Triad:           7613.7     0.057011     0.031522     0.066579
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 29300 microseconds.
   (= 29300 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9857.6     0.030207     0.016231     0.034767
Scale:           7689.0     0.042534     0.020809     0.048873
Add:             6638.4     0.058118     0.036153     0.065669
Triad:           8121.3     0.056290     0.029552     0.066565
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
START OF JOBSPEC
{"resources": [{"type": "node", "count": 1, "with": [{"type": "slot", "count": 56, "with": [{"type": "core", "count": 1}], "label": "task"}]}], "tasks": [{"command": ["stream_c.exe"], "slot": "task", "count": {"per_slot": 1}}], "attributes": {"system": {"duration": 0, "cwd": "/opt/stream", "shell": {"options": {"rlimit": {"cpu": -1, "fsize": -1, "data": -1, "stack": 8388608, "core": -1, "nofile": 1048576, "as": -1, "rss": -1, "nproc": -1}, "cpu-affinity": "per-task"}}, "constraints": {"hostlist": ["flux-sample-47"]}}, "user": {"study_id": "stream-1-iter-3-node-47"}}, "version": 1}
START OF EVENTLOG
{"timestamp":1724448215.7114055,"name":"init"}
{"timestamp":1724448215.7127414,"name":"starting"}
{"timestamp":1724448215.7316873,"name":"shell.init","context":{"service":"0-shell-fbSomCW3","leader-rank":47,"size":1}}
{"timestamp":1724448216.1570289,"name":"shell.start","context":{"taskmap":{"version":1,"map":[[0,1,56,1]]}}}
{"timestamp":1724448217.526593,"name":"shell.task-exit","context":{"localid":27,"rank":27,"state":"Exited","pid":209,"wait_status":0,"signaled":0,"exitcode":0}}
{"timestamp":1724448218.3552837,"name":"complete","context":{"status":0}}
{"timestamp":1724448218.3552995,"name":"done"}

