-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 12006 microseconds.
   (= 12006 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           15360.9     0.013475     0.010416     0.020369
Scale:           9415.6     0.025131     0.016993     0.040148
Add:            10921.5     0.032176     0.021975     0.060427
Triad:          11084.4     0.033389     0.021652     0.054286
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19406 microseconds.
   (= 19406 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           15080.3     0.012263     0.010610     0.018522
Scale:           9555.0     0.020980     0.016745     0.040349
Add:            11126.6     0.025754     0.021570     0.035373
Triad:          11301.5     0.026254     0.021236     0.058391
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 10474 microseconds.
   (= 10474 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14090.8     0.018059     0.011355     0.020355
Scale:           9165.9     0.032361     0.017456     0.037353
Add:            10773.4     0.045068     0.022277     0.056365
Triad:          10555.5     0.042020     0.022737     0.053170
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 8439 microseconds.
   (= 8439 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9418.4     0.019527     0.016988     0.020681
Scale:           6086.6     0.033728     0.026287     0.037897
Add:             9523.9     0.045667     0.025200     0.054000
Triad:          11298.8     0.047105     0.021241     0.054478
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19448 microseconds.
   (= 19448 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9477.0     0.019261     0.016883     0.020570
Scale:           6005.5     0.031787     0.026642     0.036306
Add:             7080.9     0.045178     0.033894     0.052701
Triad:           7158.8     0.046500     0.033525     0.055764
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24326 microseconds.
   (= 24326 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14516.3     0.019240     0.011022     0.023592
Scale:           6997.6     0.031355     0.022865     0.037543
Add:            10411.7     0.037181     0.023051     0.050484
Triad:          10577.8     0.041586     0.022689     0.050931
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23802 microseconds.
   (= 23802 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11212.3     0.019528     0.014270     0.024030
Scale:           5800.4     0.033202     0.027584     0.037896
Add:             7708.4     0.044143     0.031135     0.050959
Triad:          10595.5     0.040455     0.022651     0.050134
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23691 microseconds.
   (= 23691 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10310.6     0.020435     0.015518     0.024536
Scale:           6109.0     0.032888     0.026191     0.038028
Add:             6722.1     0.044337     0.035703     0.050765
Triad:           7530.1     0.043201     0.031872     0.049657
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7133 microseconds.
   (= 7133 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7604.9     0.023431     0.021039     0.025681
Scale:           4082.1     0.044228     0.039195     0.046855
Add:             4087.4     0.065891     0.058717     0.069762
Triad:           4142.9     0.063937     0.057930     0.068662
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7360 microseconds.
   (= 7360 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7407.8     0.024055     0.021599     0.025955
Scale:           4200.4     0.042815     0.038091     0.045641
Add:             4034.2     0.066879     0.059492     0.071546
Triad:           4267.4     0.063351     0.056241     0.067187
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7013 microseconds.
   (= 7013 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7987.6     0.024369     0.020031     0.025832
Scale:           4290.8     0.044798     0.037289     0.048208
Add:             4213.0     0.066480     0.056966     0.069899
Triad:           4126.0     0.065133     0.058168     0.068705
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21013 microseconds.
   (= 21013 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7601.4     0.023766     0.021049     0.025163
Scale:           3976.0     0.044995     0.040241     0.048867
Add:             4234.4     0.064257     0.056678     0.068751
Triad:           5346.4     0.062157     0.044890     0.067982
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 26246 microseconds.
   (= 26246 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7496.3     0.023918     0.021344     0.025967
Scale:           4136.7     0.042793     0.038678     0.046147
Add:             4588.9     0.064847     0.052300     0.070174
Triad:           6551.3     0.061538     0.036634     0.068868
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 10678 microseconds.
   (= 10678 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7149.8     0.025633     0.022378     0.027422
Scale:           3768.5     0.048159     0.042457     0.051283
Add:             4199.0     0.063201     0.057157     0.067663
Triad:           4423.3     0.060759     0.054258     0.064807
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 10921 microseconds.
   (= 10921 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7796.5     0.023116     0.020522     0.025363
Scale:           5150.0     0.042923     0.031068     0.047882
Add:             4606.1     0.066021     0.052105     0.071020
Triad:           5109.1     0.059310     0.046975     0.065367
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11021 microseconds.
   (= 11021 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6997.0     0.025939     0.022867     0.027590
Scale:           3781.3     0.047867     0.042313     0.051012
Add:             4236.1     0.062405     0.056656     0.066332
Triad:           4317.5     0.061728     0.055588     0.066217
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 17920 microseconds.
   (= 17920 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8323.4     0.024408     0.019223     0.027871
Scale:           4796.4     0.042210     0.033358     0.049689
Add:             5614.1     0.059732     0.042749     0.066849
Triad:           5650.3     0.054210     0.042476     0.063696
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7721 microseconds.
   (= 7721 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7633.6     0.024681     0.020960     0.026710
Scale:           3997.2     0.045904     0.040028     0.048114
Add:             4035.7     0.068098     0.059469     0.071729
Triad:           4345.2     0.066559     0.055233     0.070500
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11922 microseconds.
   (= 11922 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8372.6     0.023160     0.019110     0.025730
Scale:           4623.3     0.045508     0.034607     0.051223
Add:             5178.8     0.062430     0.046343     0.073288
Triad:           5450.7     0.060014     0.044031     0.067660
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20656 microseconds.
   (= 20656 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7018.8     0.026028     0.022796     0.028010
Scale:           3989.1     0.044161     0.040109     0.047204
Add:             4345.6     0.060721     0.055228     0.064760
Triad:           4261.7     0.065333     0.056315     0.071105
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 25563 microseconds.
   (= 25563 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6930.6     0.026719     0.023086     0.029185
Scale:           4119.8     0.043553     0.038837     0.047009
Add:             4375.7     0.060891     0.054849     0.064858
Triad:           4819.1     0.065691     0.049802     0.072246
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 17973 microseconds.
   (= 17973 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8208.1     0.025026     0.019493     0.028094
Scale:           4958.5     0.042405     0.032268     0.049468
Add:             5653.0     0.058505     0.042455     0.066502
Triad:           5547.1     0.056416     0.043266     0.065467
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
STREAM version $Revision: 5.10 $
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Each kernel will be executed 10 times.
This system uses 8 bytes per array element.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Your clock granularity/precision appears to be 1 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each test below will take on the order of 8945 microseconds.
Each kernel will be executed 10 times.
   (= 8945 clock ticks)
 The *best* time for each kernel (excluding the first iteration)
Increase the size of the arrays if this shows that
 will be used to compute the reported bandwidth.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
Each test below will take on the order of 34994 microseconds.
STREAM version $Revision: 5.10 $
For best results, please be sure you know the
STREAM version $Revision: 5.10 $
   (= 34994 clock ticks)
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Copy:            7015.6     0.025996     0.022806     0.027326
Array size = 10000000 (elements), Offset = 0 (elements)
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Scale:           3991.1     0.045379     0.040089     0.048049
Memory per array = 76.3 MiB (= 0.1 GiB).
For best results, please be sure you know the
STREAM version $Revision: 5.10 $
Total memory required = 228.9 MiB (= 0.2 GiB).
Add:             4032.0     0.067030     0.059524     0.070854
Total memory required = 228.9 MiB (= 0.2 GiB).
precision of your system timer.
-------------------------------------------------------------
Each kernel will be executed 10 times.
Triad:           4266.3     0.064299     0.056255     0.067124
Each kernel will be executed 10 times.
-------------------------------------------------------------
This system uses 8 bytes per array element.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
 will be used to compute the reported bandwidth.
Copy:            8154.1     0.024529     0.019622     0.028153
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Scale:           5390.3     0.039332     0.029683     0.046434
Memory per array = 76.3 MiB (= 0.1 GiB).
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Add:             5751.0     0.055371     0.041732     0.066499
Total memory required = 228.9 MiB (= 0.2 GiB).
Each test below will take on the order of 9618 microseconds.
Each test below will take on the order of 14246 microseconds.
Triad:           5506.9     0.058828     0.043582     0.074289
Each kernel will be executed 10 times.
   (= 9618 clock ticks)
   (= 14246 clock ticks)
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Solution Validates: avg error less than 1.000000e-13 on all three arrays
 will be used to compute the reported bandwidth.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
Each test below will take on the order of 25919 microseconds.
For best results, please be sure you know the
For best results, please be sure you know the
   (= 25919 clock ticks)
precision of your system timer.
precision of your system timer.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
Copy:            6809.6     0.026093     0.023496     0.027165
Copy:            7509.2     0.024500     0.021307     0.026314
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Scale:           4011.6     0.045448     0.039884     0.048094
Scale:           3980.8     0.045338     0.040193     0.047715
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
For best results, please be sure you know the
Add:             4072.2     0.066056     0.058936     0.069854
Add:             4271.6     0.065392     0.056185     0.069574
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
Triad:           4314.4     0.064613     0.055628     0.067884
Triad:           4573.7     0.065158     0.052474     0.069066
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Function    Best Rate MB/s  Avg time     Min time     Max time
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Copy:            8303.9     0.023959     0.019268     0.027326
-------------------------------------------------------------
-------------------------------------------------------------
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Scale:           5056.4     0.041556     0.031643     0.048699
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Add:             5714.3     0.058563     0.042000     0.065516
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Triad:           5719.3     0.057787     0.041963     0.066396
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Each test below will take on the order of 30991 microseconds.
Each test below will take on the order of 30848 microseconds.
-------------------------------------------------------------
   (= 30991 clock ticks)
   (= 30848 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8365.1     0.026276     0.019127     0.031088
Copy:            7672.0     0.026658     0.020855     0.031307
Scale:           4926.6     0.041188     0.032477     0.047790
Scale:           4953.7     0.040893     0.032299     0.047551
Add:             5898.5     0.056501     0.040688     0.065155
Add:             6099.1     0.054337     0.039350     0.065327
Triad:           6502.7     0.054097     0.036908     0.065959
Triad:           6590.2     0.056081     0.036418     0.065974
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
Each test below will take on the order of 21266 microseconds.
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
   (= 21266 clock ticks)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
Increase the size of the arrays if this shows that
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
For best results, please be sure you know the
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
Total memory required = 228.9 MiB (= 0.2 GiB).
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
Total memory required = 228.9 MiB (= 0.2 GiB).
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
This system uses 8 bytes per array element.
-------------------------------------------------------------
Each kernel will be executed 10 times.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
precision of your system timer.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Each kernel will be executed 10 times.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
 The *best* time for each kernel (excluding the first iteration)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
 The *best* time for each kernel (excluding the first iteration)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
 The *best* time for each kernel (excluding the first iteration)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
 will be used to compute the reported bandwidth.
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Function    Best Rate MB/s  Avg time     Min time     Max time
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
 will be used to compute the reported bandwidth.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
 will be used to compute the reported bandwidth.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
 will be used to compute the reported bandwidth.
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Copy:            7400.6     0.024577     0.021620     0.025626
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Your clock granularity/precision appears to be 1 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Scale:           4160.3     0.042857     0.038459     0.045641
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Your clock granularity/precision appears to be 1 microseconds.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Your clock granularity/precision appears to be 1 microseconds.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each test below will take on the order of 25202 microseconds.
Each test below will take on the order of 24128 microseconds.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Your clock granularity/precision appears to be 1 microseconds.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each test below will take on the order of 15428 microseconds.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Add:             4382.3     0.066878     0.054766     0.071576
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each test below will take on the order of 20626 microseconds.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each test below will take on the order of 24462 microseconds.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
   (= 25202 clock ticks)
   (= 24128 clock ticks)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Each test below will take on the order of 14524 microseconds.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
   (= 15428 clock ticks)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Triad:           6219.9     0.064455     0.038586     0.070144
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
   (= 20626 clock ticks)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
   (= 24462 clock ticks)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
   (= 14524 clock ticks)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
you are not getting at least 20 clock ticks per test.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
you are not getting at least 20 clock ticks per test.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 14868 microseconds.
Each test below will take on the order of 21327 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 33074 microseconds.
you are not getting at least 20 clock ticks per test.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 33397 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 29198 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 26199 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31164 microseconds.
Each test below will take on the order of 27427 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 30676 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 24209 microseconds.
Each test below will take on the order of 23565 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 27245 microseconds.
Each test below will take on the order of 26666 microseconds.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
   (= 14868 clock ticks)
   (= 21327 clock ticks)
Each test below will take on the order of 26873 microseconds.
   (= 33074 clock ticks)
-------------------------------------------------------------
Each test below will take on the order of 29038 microseconds.
   (= 33397 clock ticks)
WARNING -- The above is only a rough guideline.
Each test below will take on the order of 33571 microseconds.
   (= 29198 clock ticks)
Each test below will take on the order of 33675 microseconds.
Each test below will take on the order of 29139 microseconds.
   (= 26199 clock ticks)
Each test below will take on the order of 32294 microseconds.
   (= 31164 clock ticks)
   (= 27427 clock ticks)
Each test below will take on the order of 31702 microseconds.
   (= 30676 clock ticks)
WARNING -- The above is only a rough guideline.
   (= 24209 clock ticks)
   (= 23565 clock ticks)
WARNING -- The above is only a rough guideline.
   (= 27245 clock ticks)
   (= 26666 clock ticks)
For best results, please be sure you know the
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
   (= 26873 clock ticks)
Increase the size of the arrays if this shows that
WARNING -- The above is only a rough guideline.
   (= 29038 clock ticks)
Increase the size of the arrays if this shows that
For best results, please be sure you know the
   (= 33571 clock ticks)
Increase the size of the arrays if this shows that
   (= 33675 clock ticks)
   (= 29139 clock ticks)
Increase the size of the arrays if this shows that
For best results, please be sure you know the
   (= 32294 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
   (= 31702 clock ticks)
Increase the size of the arrays if this shows that
For best results, please be sure you know the
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
For best results, please be sure you know the
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
precision of your system timer.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
For best results, please be sure you know the
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
precision of your system timer.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
precision of your system timer.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
precision of your system timer.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
precision of your system timer.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
precision of your system timer.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Function    Best Rate MB/s  Avg time     Min time     Max time
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
Function    Best Rate MB/s  Avg time     Min time     Max time
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
Copy:            8293.2     0.026821     0.019293     0.031558
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
Function    Best Rate MB/s  Avg time     Min time     Max time
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
Copy:            7230.9     0.025002     0.022127     0.026549
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
Copy:            7948.7     0.028054     0.020129     0.033383
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
Copy:            8864.8     0.024448     0.018049     0.028272
For best results, please be sure you know the
For best results, please be sure you know the
Copy:            8939.5     0.024699     0.017898     0.028093
For best results, please be sure you know the
For best results, please be sure you know the
Scale:           5173.4     0.042012     0.030927     0.049116
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
Copy:            8205.5     0.023439     0.019499     0.025475
For best results, please be sure you know the
precision of your system timer.
Scale:           4008.5     0.044627     0.039915     0.047371
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
Scale:           4777.7     0.041509     0.033489     0.048282
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
Scale:           4974.0     0.043128     0.032167     0.047394
precision of your system timer.
precision of your system timer.
Scale:           4995.0     0.043104     0.032032     0.047229
precision of your system timer.
precision of your system timer.
Add:             4353.0     0.060714     0.055135     0.066129
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
Scale:           4932.5     0.046276     0.032438     0.051413
precision of your system timer.
-------------------------------------------------------------
Add:             4230.9     0.064847     0.056726     0.067925
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
Add:             6053.9     0.057293     0.039644     0.066888
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
Add:             5032.9     0.060353     0.047686     0.066295
-------------------------------------------------------------
-------------------------------------------------------------
Add:             5199.3     0.060921     0.046160     0.067871
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           8010.7     0.054379     0.029960     0.064538
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Add:             4918.4     0.062733     0.048796     0.070228
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Triad:           4939.9     0.066885     0.048584     0.071886
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Triad:           5399.6     0.054518     0.044448     0.064360
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Triad:           4980.7     0.063534     0.048186     0.070625
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Triad:           5841.1     0.061548     0.041088     0.075939
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            7365.5     0.028129     0.021723     0.040989
Copy:            7470.1     0.023901     0.021419     0.025712
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8661.8     0.027963     0.018472     0.031414
Triad:           5579.7     0.058848     0.043013     0.065763
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8719.3     0.027892     0.018350     0.031232
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8946.5     0.029358     0.017884     0.032608
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7948.7     0.028574     0.020129     0.031262
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7395.7     0.026782     0.021634     0.030928
Copy:           11284.3     0.030151     0.014179     0.033858
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7163.3     0.026616     0.022336     0.030824
-------------------------------------------------------------
Copy:            8417.1     0.024841     0.019009     0.027410
Copy:            6802.2     0.027838     0.023522     0.031843
-------------------------------------------------------------
Copy:            7966.2     0.026463     0.020085     0.029158
Copy:           12858.6     0.025736     0.012443     0.033637
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Scale:           4929.6     0.041706     0.032457     0.048221
Scale:           4159.2     0.043340     0.038469     0.045317
Copy:           15937.7     0.027061     0.010039     0.031118
Scale:           7217.2     0.042007     0.022169     0.048225
-------------------------------------------------------------
Copy:           11103.4     0.030238     0.014410     0.034078
Scale:           7476.6     0.041799     0.021400     0.047958
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Copy:           14145.5     0.026469     0.011311     0.030542
Scale:           7648.5     0.042364     0.020919     0.049817
Copy:           11638.7     0.028089     0.013747     0.031824
Copy:           13840.6     0.028202     0.011560     0.031813
Scale:           6942.6     0.043540     0.023046     0.050789
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Copy:           12089.1     0.027912     0.013235     0.031947
Scale:           5913.0     0.043294     0.027059     0.048561
Scale:           8151.2     0.042472     0.019629     0.047898
Copy:           13780.1     0.027439     0.011611     0.030934
Scale:           5565.0     0.044126     0.028751     0.049706
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Scale:           4769.6     0.045531     0.033546     0.051460
Scale:           5958.8     0.044041     0.026851     0.049875
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Scale:           4752.6     0.043381     0.033666     0.055358
Scale:           8284.6     0.041402     0.019313     0.049122
-------------------------------------------------------------
Add:             6071.9     0.057941     0.039526     0.065774
Add:             4051.6     0.068009     0.059236     0.071539
Scale:           8784.0     0.044388     0.018215     0.050038
Add:             9088.2     0.056915     0.026408     0.064826
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Scale:           8080.4     0.042271     0.019801     0.047646
Add:             9219.1     0.056853     0.026033     0.065032
-------------------------------------------------------------
Scale:           9320.8     0.041893     0.017166     0.047821
Add:             6744.1     0.057918     0.035587     0.065121
Scale:           8152.9     0.042395     0.019625     0.047606
Scale:           9272.8     0.043300     0.017255     0.049213
Add:             9032.7     0.057196     0.026570     0.065528
-------------------------------------------------------------
Scale:           8244.8     0.042758     0.019406     0.047899
Add:             6344.2     0.058417     0.037830     0.064613
Add:             9167.3     0.057623     0.026180     0.065343
Scale:           9310.3     0.042611     0.017185     0.048374
Add:             9061.4     0.057469     0.026486     0.064767
-------------------------------------------------------------
Add:             5560.1     0.058665     0.043165     0.066177
Add:             9567.8     0.057368     0.025084     0.065341
-------------------------------------------------------------
Add:             5328.9     0.059671     0.045037     0.065904
Add:             9454.0     0.057674     0.025386     0.066382
Triad:           6767.4     0.061401     0.035464     0.071061
Triad:           6916.2     0.063719     0.034701     0.070655
Add:             6341.0     0.058740     0.037849     0.066143
Triad:           9986.2     0.057256     0.024033     0.067685
-------------------------------------------------------------
Add:             9119.3     0.057901     0.026318     0.065443
Triad:          10147.1     0.057668     0.023652     0.067491
Add:             9830.8     0.058658     0.024413     0.065573
Triad:           8047.8     0.058123     0.029822     0.066342
Add:             8220.9     0.058284     0.029194     0.065514
Add:             9818.7     0.058527     0.024443     0.065508
Triad:           9975.1     0.056332     0.024060     0.066002
Add:             9013.4     0.057958     0.026627     0.065623
Triad:           8658.6     0.058381     0.027718     0.070080
Triad:           8933.9     0.056095     0.026864     0.065240
Add:             9700.9     0.056809     0.024740     0.065788
Triad:           9653.6     0.056440     0.024861     0.065040
Triad:           6019.1     0.059704     0.039873     0.067702
Triad:           9716.2     0.056498     0.024701     0.064484
Triad:           5427.3     0.060904     0.044221     0.070595
Triad:          12577.3     0.063420     0.019082     0.074501
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           7278.9     0.056653     0.032972     0.065644
-------------------------------------------------------------
Triad:           8947.2     0.056026     0.026824     0.065385
-------------------------------------------------------------
Triad:           9979.2     0.057583     0.024050     0.069952
-------------------------------------------------------------
Triad:           8931.2     0.056975     0.026872     0.067236
Triad:          10269.1     0.056371     0.023371     0.066072
-------------------------------------------------------------
Triad:           9354.5     0.057960     0.025656     0.066053
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           9922.3     0.057788     0.024188     0.067842
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
START OF JOBSPEC
{"resources": [{"type": "node", "count": 1, "with": [{"type": "slot", "count": 56, "with": [{"type": "core", "count": 1}], "label": "task"}]}], "tasks": [{"command": ["stream_c.exe"], "slot": "task", "count": {"per_slot": 1}}], "attributes": {"system": {"duration": 0, "cwd": "/opt/stream", "shell": {"options": {"rlimit": {"cpu": -1, "fsize": -1, "data": -1, "stack": 8388608, "core": -1, "nofile": 1048576, "as": -1, "rss": -1, "nproc": -1}, "cpu-affinity": "per-task"}}, "constraints": {"hostlist": ["flux-sample-107"]}}, "user": {"study_id": "stream-1-iter-3-node-107"}}, "version": 1}
START OF EVENTLOG
{"timestamp":1724448223.5026922,"name":"init"}
{"timestamp":1724448223.5045552,"name":"starting"}
{"timestamp":1724448223.5241878,"name":"shell.init","context":{"service":"0-shell-fetD6bt3","leader-rank":107,"size":1}}
{"timestamp":1724448223.8120575,"name":"shell.start","context":{"taskmap":{"version":1,"map":[[0,1,56,1]]}}}
{"timestamp":1724448224.8726006,"name":"shell.task-exit","context":{"localid":26,"rank":26,"state":"Exited","pid":208,"wait_status":0,"signaled":0,"exitcode":0}}
{"timestamp":1724448226.0125659,"name":"complete","context":{"status":0}}
{"timestamp":1724448226.0125897,"name":"done"}

