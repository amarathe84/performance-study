-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 8266 microseconds.
   (= 8266 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           15378.5     0.015060     0.010404     0.023484
Scale:           9583.1     0.021534     0.016696     0.035569
Add:            11342.6     0.026141     0.021159     0.041126
Triad:          11373.4     0.024914     0.021102     0.038365
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 14104 microseconds.
   (= 14104 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           15003.8     0.012138     0.010664     0.021312
Scale:           9651.9     0.021292     0.016577     0.037511
Add:            11201.2     0.029623     0.021426     0.053775
Triad:          11255.3     0.026632     0.021323     0.051809
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 13682 microseconds.
   (= 13682 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14648.1     0.016465     0.010923     0.021917
Scale:           9455.1     0.027625     0.016922     0.039392
Add:            11129.2     0.040839     0.021565     0.054825
Triad:          11112.7     0.038045     0.021597     0.049750
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21745 microseconds.
   (= 21745 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12981.7     0.018824     0.012325     0.023586
Scale:           9468.6     0.029207     0.016898     0.036865
Add:            11472.3     0.039754     0.020920     0.051738
Triad:          11858.9     0.040672     0.020238     0.053015
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 17608 microseconds.
   (= 17608 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14085.8     0.018781     0.011359     0.022792
Scale:           9728.7     0.031815     0.016446     0.039906
Add:            11542.4     0.040569     0.020793     0.051014
Triad:          12209.5     0.040806     0.019657     0.052294
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Each test below will take on the order of 19644 microseconds.
-------------------------------------------------------------
   (= 19644 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
Increase the size of the arrays if this shows that
Each test below will take on the order of 19727 microseconds.
you are not getting at least 20 clock ticks per test.
   (= 19727 clock ticks)
-------------------------------------------------------------
Increase the size of the arrays if this shows that
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Copy:           14139.5     0.019043     0.011316     0.023034
-------------------------------------------------------------
Scale:           9401.2     0.031077     0.017019     0.037959
Function    Best Rate MB/s  Avg time     Min time     Max time
Add:            10527.2     0.039206     0.022798     0.050310
Copy:           14574.6     0.018604     0.010978     0.023162
Triad:          10808.8     0.038795     0.022204     0.051956
Scale:           9412.3     0.028545     0.016999     0.036483
-------------------------------------------------------------
Add:            10786.5     0.041909     0.022250     0.054178
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:          11039.0     0.040366     0.021741     0.051847
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23623 microseconds.
   (= 23623 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14257.6     0.019466     0.011222     0.023556
Scale:           7093.5     0.031101     0.022556     0.037943
Add:            12750.9     0.042390     0.018822     0.054470
Triad:          13489.2     0.041776     0.017792     0.052141
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7190 microseconds.
   (= 7190 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7078.1     0.025341     0.022605     0.027387
Scale:           4133.3     0.042610     0.038710     0.045704
Add:             4180.3     0.064849     0.057412     0.069316
Triad:           4183.6     0.064821     0.057367     0.069475
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7334 microseconds.
   (= 7334 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6892.4     0.025751     0.023214     0.027880
Scale:           4179.2     0.042225     0.038285     0.045328
Add:             4164.6     0.064941     0.057629     0.069236
Triad:           4150.9     0.065307     0.057818     0.069654
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7341 microseconds.
   (= 7341 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
This system uses 8 bytes per array element.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Function    Best Rate MB/s  Avg time     Min time     Max time
Memory per array = 76.3 MiB (= 0.1 GiB).
Copy:            7555.0     0.023988     0.021178     0.025486
Total memory required = 228.9 MiB (= 0.2 GiB).
Scale:           4086.5     0.045320     0.039153     0.047656
Each kernel will be executed 10 times.
Add:             4056.0     0.067703     0.059171     0.071421
 The *best* time for each kernel (excluding the first iteration)
Triad:           4196.0     0.063841     0.057197     0.067032
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 18666 microseconds.
   (= 18666 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7648.2     0.024094     0.020920     0.026098
Scale:           4197.4     0.043014     0.038119     0.045908
Add:             4175.8     0.065416     0.057474     0.070575
Triad:           4804.9     0.062942     0.049949     0.069044
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 12270 microseconds.
   (= 12270 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7573.6     0.023717     0.021126     0.025193
Scale:           3841.7     0.049302     0.041648     0.054507
Add:             4202.2     0.063846     0.057113     0.067865
Triad:           4395.4     0.060233     0.054603     0.065133
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 11652 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
   (= 11652 clock ticks)
Each test below will take on the order of 27850 microseconds.
Increase the size of the arrays if this shows that
   (= 27850 clock ticks)
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
precision of your system timer.
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            9422.4     0.024247     0.016981     0.027330
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           5148.3     0.042992     0.031078     0.047874
Copy:            8331.6     0.024997     0.019204     0.029475
Add:             5146.8     0.063402     0.046631     0.069939
Scale:           4831.8     0.040667     0.033114     0.046665
Triad:           5855.3     0.058804     0.040988     0.065201
Add:             5748.1     0.056224     0.041753     0.066193
-------------------------------------------------------------
Triad:           5839.9     0.055498     0.041097     0.067920
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11087 microseconds.
   (= 11087 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
STREAM version $Revision: 5.10 $
Copy:            9168.0     0.024945     0.017452     0.031687
-------------------------------------------------------------
Scale:           5182.5     0.042834     0.030873     0.048222
This system uses 8 bytes per array element.
Add:             5194.8     0.063461     0.046200     0.070175
-------------------------------------------------------------
Triad:           5957.3     0.058687     0.040287     0.065072
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7271 microseconds.
   (= 7271 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
STREAM version $Revision: 5.10 $
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Array size = 10000000 (elements), Offset = 0 (elements)
Copy:            7279.6     0.025359     0.021979     0.026933
Memory per array = 76.3 MiB (= 0.1 GiB).
Scale:           3973.0     0.045708     0.040272     0.048318
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Add:             4108.2     0.066583     0.058420     0.070858
STREAM version $Revision: 5.10 $
Each kernel will be executed 10 times.
Triad:           4293.4     0.065455     0.055900     0.070230
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
This system uses 8 bytes per array element.
 will be used to compute the reported bandwidth.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Your clock granularity/precision appears to be 1 microseconds.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each test below will take on the order of 19196 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
   (= 19196 clock ticks)
Each kernel will be executed 10 times.
Increase the size of the arrays if this shows that
 The *best* time for each kernel (excluding the first iteration)
you are not getting at least 20 clock ticks per test.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Your clock granularity/precision appears to be 1 microseconds.
For best results, please be sure you know the
Each test below will take on the order of 25915 microseconds.
precision of your system timer.
   (= 25915 clock ticks)
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Function    Best Rate MB/s  Avg time     Min time     Max time
you are not getting at least 20 clock ticks per test.
Copy:            8014.1     0.025161     0.019965     0.028968
-------------------------------------------------------------
Scale:           4882.6     0.042448     0.032769     0.049776
WARNING -- The above is only a rough guideline.
Add:             5429.1     0.056747     0.044206     0.066527
For best results, please be sure you know the
Triad:           5913.6     0.055394     0.040584     0.065689
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            7424.3     0.024440     0.021551     0.026222
Scale:           4198.5     0.043047     0.038109     0.046469
Add:             4772.6     0.063917     0.050287     0.070282
Triad:           8834.0     0.060377     0.027168     0.069327
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20680 microseconds.
   (= 20680 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8118.6     0.025659     0.019708     0.030726
Scale:           4886.4     0.041620     0.032744     0.048812
Add:             5573.7     0.058084     0.043059     0.066556
Triad:           6072.2     0.054846     0.039524     0.065978
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 20881 microseconds.
This system uses 8 bytes per array element.
   (= 20881 clock ticks)
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Array size = 10000000 (elements), Offset = 0 (elements)
you are not getting at least 20 clock ticks per test.
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
WARNING -- The above is only a rough guideline.
Each kernel will be executed 10 times.
For best results, please be sure you know the
 The *best* time for each kernel (excluding the first iteration)
precision of your system timer.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Your clock granularity/precision appears to be 1 microseconds.
Copy:            6291.5     0.029214     0.025431     0.031775
Each test below will take on the order of 12666 microseconds.
Scale:           4060.9     0.044344     0.039400     0.047797
   (= 12666 clock ticks)
Add:             4318.2     0.061161     0.055579     0.065213
Increase the size of the arrays if this shows that
Triad:           4595.5     0.062466     0.052225     0.068159
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6011.5     0.029683     0.026616     0.031595
Scale:           4085.3     0.043964     0.039165     0.046911
Add:             4349.4     0.060962     0.055180     0.065131
Triad:           4609.0     0.062283     0.052072     0.067986
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 22006 microseconds.
   (= 22006 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6489.6     0.028349     0.024655     0.030668
Scale:           4084.8     0.043973     0.039170     0.046737
Add:             4310.6     0.061086     0.055677     0.065234
Triad:           4247.3     0.063523     0.056507     0.068770
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 14073 microseconds.
   (= 14073 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7475.9     0.024489     0.021402     0.026241
Scale:           4098.1     0.044912     0.039043     0.047526
Add:             4183.8     0.064428     0.057364     0.067918
Triad:           4566.0     0.066988     0.052563     0.070940
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 30552 microseconds.
   (= 30552 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8176.2     0.025567     0.019569     0.031094
Scale:           5009.4     0.039973     0.031940     0.047094
Add:             6015.0     0.055595     0.039900     0.065927
Triad:           5957.7     0.056133     0.040284     0.068036
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 16668 microseconds.
   (= 16668 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7953.5     0.024041     0.020117     0.026521
Scale:           4650.0     0.044854     0.034409     0.049060
Add:             5328.9     0.060681     0.045037     0.066402
-------------------------------------------------------------
Triad:           7005.7     0.061759     0.034258     0.069671
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
STREAM version $Revision: 5.10 $
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 23936 microseconds.
Array size = 10000000 (elements), Offset = 0 (elements)
   (= 23936 clock ticks)
Memory per array = 76.3 MiB (= 0.1 GiB).
Increase the size of the arrays if this shows that
Total memory required = 228.9 MiB (= 0.2 GiB).
you are not getting at least 20 clock ticks per test.
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
WARNING -- The above is only a rough guideline.
 will be used to compute the reported bandwidth.
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
STREAM version $Revision: 5.10 $
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 9100 microseconds.
Function    Best Rate MB/s  Avg time     Min time     Max time
This system uses 8 bytes per array element.
   (= 9100 clock ticks)
Copy:            8160.3     0.026666     0.019607     0.031865
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Scale:           5079.8     0.040642     0.031497     0.048132
Array size = 10000000 (elements), Offset = 0 (elements)
you are not getting at least 20 clock ticks per test.
Add:             5539.7     0.057575     0.043324     0.066415
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Triad:           6021.8     0.054770     0.039855     0.065747
Total memory required = 228.9 MiB (= 0.2 GiB).
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
Each kernel will be executed 10 times.
For best results, please be sure you know the
STREAM version $Revision: 5.10 $
Solution Validates: avg error less than 1.000000e-13 on all three arrays
 The *best* time for each kernel (excluding the first iteration)
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Copy:            6832.6     0.026330     0.023417     0.027573
Array size = 10000000 (elements), Offset = 0 (elements)
STREAM version $Revision: 5.10 $
Each test below will take on the order of 10209 microseconds.
Scale:           3928.1     0.046516     0.040732     0.049389
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
   (= 10209 clock ticks)
Add:             4059.5     0.066940     0.059120     0.070761
Total memory required = 228.9 MiB (= 0.2 GiB).
This system uses 8 bytes per array element.
Increase the size of the arrays if this shows that
Triad:           4279.7     0.062883     0.056079     0.065575
Each kernel will be executed 10 times.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
 will be used to compute the reported bandwidth.
Memory per array = 76.3 MiB (= 0.1 GiB).
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
For best results, please be sure you know the
Your clock granularity/precision appears to be 1 microseconds.
Each kernel will be executed 10 times.
precision of your system timer.
Each test below will take on the order of 21261 microseconds.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
   (= 21261 clock ticks)
 will be used to compute the reported bandwidth.
Function    Best Rate MB/s  Avg time     Min time     Max time
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Copy:            6979.0     0.026038     0.022926     0.027371
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
Scale:           3944.8     0.046236     0.040560     0.049231
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
Each test below will take on the order of 30690 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Add:             4076.1     0.066686     0.058880     0.070637
STREAM version $Revision: 5.10 $
WARNING -- The above is only a rough guideline.
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
   (= 30690 clock ticks)
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
For best results, please be sure you know the
Triad:           4374.9     0.063236     0.054858     0.066143
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
you are not getting at least 20 clock ticks per test.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
WARNING -- The above is only a rough guideline.
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Copy:            7467.2     0.024753     0.021427     0.026227
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Scale:           4136.4     0.043143     0.038681     0.045511
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
precision of your system timer.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Add:             4431.7     0.067109     0.054155     0.070904
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Triad:           6571.0     0.063666     0.036524     0.069790
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Function    Best Rate MB/s  Avg time     Min time     Max time
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Copy:            7907.2     0.025046     0.020235     0.029315
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Scale:           5413.1     0.040131     0.029558     0.046053
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Add:             5276.2     0.060629     0.045487     0.067185
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 30252 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15230 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24373 microseconds.
Each test below will take on the order of 26048 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           7159.4     0.057095     0.033522     0.069941
Each test below will take on the order of 15220 microseconds.
Each test below will take on the order of 27112 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 21024 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 34979 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 33393 microseconds.
Each test below will take on the order of 14559 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 29172 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
   (= 30252 clock ticks)
Each test below will take on the order of 24382 microseconds.
Each test below will take on the order of 31286 microseconds.
   (= 15230 clock ticks)
Each test below will take on the order of 29943 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 25594 microseconds.
   (= 24373 clock ticks)
   (= 26048 clock ticks)
Each test below will take on the order of 24910 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
   (= 15220 clock ticks)
   (= 27112 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 21024 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32634 microseconds.
   (= 34979 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 33393 clock ticks)
   (= 14559 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 29172 clock ticks)
Each test below will take on the order of 30233 microseconds.
Increase the size of the arrays if this shows that
   (= 24382 clock ticks)
   (= 31286 clock ticks)
Increase the size of the arrays if this shows that
   (= 29943 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 25594 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
   (= 24910 clock ticks)
Each test below will take on the order of 27012 microseconds.
Each test below will take on the order of 31707 microseconds.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Each test below will take on the order of 29733 microseconds.
Increase the size of the arrays if this shows that
Each test below will take on the order of 27564 microseconds.
   (= 32634 clock ticks)
Increase the size of the arrays if this shows that
Each test below will take on the order of 28939 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Each test below will take on the order of 32425 microseconds.
Increase the size of the arrays if this shows that
   (= 30233 clock ticks)
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
Each test below will take on the order of 31801 microseconds.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
   (= 27012 clock ticks)
   (= 31707 clock ticks)
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
   (= 29733 clock ticks)
you are not getting at least 20 clock ticks per test.
   (= 27564 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
   (= 28939 clock ticks)
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
   (= 32425 clock ticks)
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
   (= 31801 clock ticks)
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
precision of your system timer.
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
precision of your system timer.
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            8182.5     0.025857     0.019554     0.031111
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7276.4     0.025019     0.021989     0.026509
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8265.8     0.026717     0.019357     0.032807
Copy:            8150.4     0.024465     0.019631     0.026698
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
Copy:            7336.8     0.026196     0.021808     0.029130
Copy:            7890.3     0.025739     0.020278     0.028354
-------------------------------------------------------------
Copy:            7344.5     0.024710     0.021785     0.026287
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7896.6     0.027583     0.020262     0.031546
-------------------------------------------------------------
Copy:            7756.0     0.027852     0.020629     0.031968
Copy:            7186.5     0.026355     0.022264     0.029007
-------------------------------------------------------------
Copy:            7518.8     0.028383     0.021280     0.032891
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4822.9     0.042740     0.033175     0.047159
Copy:            7595.5     0.025526     0.021065     0.027484
Copy:            6710.6     0.028710     0.023843     0.032572
Scale:           3962.6     0.046077     0.040377     0.049326
Copy:            6731.4     0.028163     0.023769     0.031771
-------------------------------------------------------------
Copy:            6329.4     0.029129     0.025279     0.031969
Scale:           4880.0     0.041393     0.032787     0.048178
Scale:           4608.4     0.042742     0.034719     0.045256
Copy:            7642.3     0.028550     0.020936     0.033918
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4670.0     0.046870     0.034261     0.052152
Scale:           5550.4     0.041280     0.028827     0.046020
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4148.0     0.043377     0.038573     0.045774
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10615.0     0.026203     0.015073     0.031367
Scale:           7775.7     0.043165     0.020577     0.049833
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           5441.3     0.044480     0.029405     0.050699
Scale:           4913.6     0.046946     0.032563     0.052870
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           7944.4     0.042966     0.020140     0.049111
Copy:           11615.2     0.026242     0.013775     0.035084
Add:             5980.1     0.057151     0.040133     0.065992
Scale:           4703.3     0.043571     0.034019     0.047570
Scale:           5998.8     0.042518     0.026672     0.046932
Add:             4267.1     0.063506     0.056245     0.066194
Scale:           5795.4     0.043130     0.027608     0.047654
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           5489.6     0.043940     0.029146     0.048780
Add:             5920.7     0.057688     0.040536     0.066053
Add:             5593.4     0.060773     0.042908     0.067184
Scale:           5543.0     0.042770     0.028865     0.048381
Add:             5269.8     0.061260     0.045543     0.066296
Add:             6784.1     0.058026     0.035377     0.065402
Copy:           12866.9     0.030318     0.012435     0.034725
Add:             4453.1     0.065215     0.053895     0.069143
Copy:           12534.1     0.029582     0.012765     0.033055
Scale:           8696.1     0.043263     0.018399     0.049904
Add:             9946.6     0.056537     0.024129     0.065341
Copy:           12537.2     0.028361     0.012762     0.036005
Add:             9625.8     0.056641     0.024933     0.065217
Add:             6102.8     0.059594     0.039326     0.066703
Copy:           13368.0     0.028215     0.011969     0.032023
Add:             9989.6     0.056059     0.024025     0.064778
Scale:           5918.0     0.042622     0.027036     0.048896
Triad:           5787.7     0.054675     0.041467     0.068067
Add:             5328.6     0.060044     0.045040     0.065450
Add:             8012.6     0.057485     0.029953     0.065448
Triad:           4667.4     0.067080     0.051420     0.072065
Copy:           13241.7     0.028267     0.012083     0.032445
Add:             8982.4     0.057293     0.026719     0.065701
Copy:           10324.6     0.025884     0.015497     0.031574
Copy:           12823.4     0.025675     0.012477     0.033738
Add:             9235.0     0.057373     0.025988     0.065645
Triad:           6689.0     0.056049     0.035880     0.066540
Triad:           6984.4     0.060609     0.034362     0.072588
Add:             8844.7     0.057439     0.027135     0.066031
Triad:           5435.9     0.057754     0.044151     0.065739
Scale:           8720.3     0.041791     0.018348     0.047013
Triad:           5887.0     0.066613     0.040768     0.073751
Scale:           7994.0     0.043031     0.020015     0.048959
Add:             9210.2     0.058152     0.026058     0.065302
Triad:           9618.4     0.056258     0.024952     0.066273
Triad:           6226.7     0.062214     0.038544     0.073726
Scale:           8972.6     0.042367     0.017832     0.050704
Triad:           9888.0     0.055905     0.024272     0.065862
Triad:           6436.6     0.057353     0.037287     0.065160
Scale:           8969.0     0.041738     0.017839     0.047282
Triad:           9593.9     0.056159     0.025016     0.066269
Add:             7956.0     0.058192     0.030166     0.067535
-------------------------------------------------------------
Triad:           6530.8     0.060146     0.036749     0.072097
Triad:           9125.8     0.056430     0.026299     0.065729
-------------------------------------------------------------
Scale:           8884.0     0.042023     0.018010     0.047383
Triad:           9052.8     0.056316     0.026511     0.065439
Scale:           6081.6     0.045438     0.026309     0.050457
Scale:           8903.2     0.041525     0.017971     0.050732
Triad:           9250.4     0.056279     0.025945     0.065018
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           9978.3     0.058673     0.024052     0.070074
Add:             9014.1     0.057301     0.026625     0.065980
-------------------------------------------------------------
Add:             8135.6     0.059344     0.029500     0.066334
Triad:           8900.8     0.057319     0.026964     0.067167
-------------------------------------------------------------
-------------------------------------------------------------
Add:             8881.7     0.058273     0.027022     0.068071
-------------------------------------------------------------
-------------------------------------------------------------
Add:             9095.7     0.057586     0.026386     0.065990
-------------------------------------------------------------
-------------------------------------------------------------
Triad:          12904.6     0.060164     0.018598     0.074621
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Add:             9015.8     0.058092     0.026620     0.066060
-------------------------------------------------------------
Add:             8862.6     0.058714     0.027080     0.068548
Add:             8857.1     0.058224     0.027097     0.066294
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Triad:           9310.6     0.055864     0.025777     0.067015
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:          10923.0     0.056322     0.021972     0.066185
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9192.9     0.057667     0.026107     0.067792
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9159.3     0.056539     0.026203     0.068519
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Triad:           9247.1     0.056103     0.025954     0.068327
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9130.3     0.056873     0.026286     0.065782
Triad:           9256.4     0.060398     0.025928     0.074045
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
START OF JOBSPEC
{"resources": [{"type": "node", "count": 1, "with": [{"type": "slot", "count": 56, "with": [{"type": "core", "count": 1}], "label": "task"}]}], "tasks": [{"command": ["stream_c.exe"], "slot": "task", "count": {"per_slot": 1}}], "attributes": {"system": {"duration": 0, "cwd": "/opt/stream", "shell": {"options": {"rlimit": {"cpu": -1, "fsize": -1, "data": -1, "stack": 8388608, "core": -1, "nofile": 1048576, "as": -1, "rss": -1, "nproc": -1}, "cpu-affinity": "per-task"}}, "constraints": {"hostlist": ["flux-sample-2"]}}, "user": {"study_id": "stream-1-iter-3-node-2"}}, "version": 1}
START OF EVENTLOG
{"timestamp":1724465661.6348195,"name":"init"}
{"timestamp":1724465661.6374826,"name":"starting"}
{"timestamp":1724465661.6918647,"name":"shell.init","context":{"service":"0-shell-fxPaEj7d","leader-rank":2,"size":1}}
{"timestamp":1724465661.9759438,"name":"shell.start","context":{"taskmap":{"version":1,"map":[[0,1,56,1]]}}}
{"timestamp":1724465662.8847859,"name":"shell.task-exit","context":{"localid":24,"rank":24,"state":"Exited","pid":206,"wait_status":0,"signaled":0,"exitcode":0}}
{"timestamp":1724465664.1722121,"name":"complete","context":{"status":0}}
{"timestamp":1724465664.1722293,"name":"done"}

