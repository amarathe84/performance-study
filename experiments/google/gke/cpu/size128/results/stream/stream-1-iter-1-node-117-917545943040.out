-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23324 microseconds.
   (= 23324 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14357.6     0.018886     0.011144     0.023810
Scale:           9119.4     0.032791     0.017545     0.039768
Add:            10611.6     0.044109     0.022617     0.052357
Triad:          10871.0     0.039867     0.022077     0.054520
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 25976 microseconds.
   (= 25976 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           15036.0     0.016638     0.010641     0.022194
Scale:           9081.5     0.029141     0.017618     0.038415
Add:            10699.1     0.044199     0.022432     0.054351
Triad:          10892.8     0.040348     0.022033     0.053540
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24692 microseconds.
   (= 24692 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9997.6     0.019445     0.016004     0.020844
Scale:           8363.0     0.036739     0.019132     0.043933
Add:             6897.9     0.049582     0.034793     0.054684
Triad:           6125.6     0.049172     0.039180     0.053544
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24288 microseconds.
   (= 24288 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9188.6     0.021568     0.017413     0.023612
Scale:           5576.7     0.035916     0.028691     0.038382
Add:             6729.3     0.048723     0.035665     0.054119
Triad:           6165.2     0.050111     0.038928     0.055584
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23380 microseconds.
   (= 23380 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9473.0     0.022129     0.016890     0.024423
Scale:           5569.7     0.035346     0.028727     0.037493
Add:             6159.1     0.049209     0.038967     0.051688
Triad:           6262.2     0.050340     0.038325     0.054061
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
STREAM version $Revision: 5.10 $
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
This system uses 8 bytes per array element.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Your clock granularity/precision appears to be 1 microseconds.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each test below will take on the order of 21522 microseconds.
Total memory required = 228.9 MiB (= 0.2 GiB).
   (= 21522 clock ticks)
Each kernel will be executed 10 times.
Increase the size of the arrays if this shows that
 The *best* time for each kernel (excluding the first iteration)
you are not getting at least 20 clock ticks per test.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Your clock granularity/precision appears to be 1 microseconds.
For best results, please be sure you know the
Each test below will take on the order of 7380 microseconds.
precision of your system timer.
   (= 7380 clock ticks)
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Function    Best Rate MB/s  Avg time     Min time     Max time
you are not getting at least 20 clock ticks per test.
Copy:           14320.2     0.019515     0.011173     0.022460
-------------------------------------------------------------
Scale:           6008.5     0.034290     0.026629     0.038506
WARNING -- The above is only a rough guideline.
Add:            10544.4     0.043891     0.022761     0.054286
For best results, please be sure you know the
Triad:           8194.7     0.046442     0.029287     0.055096
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            8109.4     0.024185     0.019730     0.024957
Scale:           4226.8     0.044752     0.037854     0.047324
Add:             3975.3     0.067335     0.060373     0.070530
Triad:           3935.9     0.064466     0.060977     0.066566
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11159 microseconds.
   (= 11159 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6825.1     0.024663     0.023443     0.027063
Scale:           3948.0     0.044081     0.040527     0.046548
Add:             4609.4     0.062122     0.052067     0.064957
Triad:           5717.4     0.058150     0.041977     0.064844
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7464 microseconds.
   (= 7464 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7821.7     0.024909     0.020456     0.026239
Scale:           3697.6     0.043893     0.043271     0.045337
Add:             3750.4     0.069232     0.063994     0.072284
Triad:           4348.1     0.066056     0.055197     0.068999
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24878 microseconds.
   (= 24878 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           13895.0     0.019120     0.011515     0.021087
Scale:           9136.5     0.033386     0.017512     0.038617
Add:             9682.5     0.049756     0.024787     0.056537
Triad:           7848.3     0.046082     0.030580     0.053228
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 13083 microseconds.
   (= 13083 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6949.9     0.024700     0.023022     0.027198
Scale:           3969.2     0.043501     0.040310     0.045933
Add:             4651.9     0.061685     0.051592     0.065933
Triad:           4162.6     0.060819     0.057656     0.065146
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 10636 microseconds.
   (= 10636 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6355.8     0.026956     0.025174     0.028388
Scale:           3863.2     0.046589     0.041416     0.048931
Add:             3936.8     0.066274     0.060964     0.068041
Triad:           4334.7     0.063215     0.055367     0.065854
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
STREAM version $Revision: 5.10 $
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 8764 microseconds.
Array size = 10000000 (elements), Offset = 0 (elements)
   (= 8764 clock ticks)
Memory per array = 76.3 MiB (= 0.1 GiB).
Increase the size of the arrays if this shows that
Total memory required = 228.9 MiB (= 0.2 GiB).
you are not getting at least 20 clock ticks per test.
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
STREAM version $Revision: 5.10 $
WARNING -- The above is only a rough guideline.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
This system uses 8 bytes per array element.
precision of your system timer.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 20020 microseconds.
Array size = 10000000 (elements), Offset = 0 (elements)
Function    Best Rate MB/s  Avg time     Min time     Max time
   (= 20020 clock ticks)
Memory per array = 76.3 MiB (= 0.1 GiB).
Copy:            6336.2     0.027108     0.025252     0.028324
Increase the size of the arrays if this shows that
Total memory required = 228.9 MiB (= 0.2 GiB).
Scale:           3832.8     0.046703     0.041745     0.048706
you are not getting at least 20 clock ticks per test.
Each kernel will be executed 10 times.
Add:             3941.5     0.066483     0.060891     0.068441
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Triad:           4364.2     0.063100     0.054993     0.065679
WARNING -- The above is only a rough guideline.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
precision of your system timer.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 14591 microseconds.
Function    Best Rate MB/s  Avg time     Min time     Max time
   (= 14591 clock ticks)
Copy:            6559.6     0.026858     0.024392     0.028731
Increase the size of the arrays if this shows that
Scale:           3918.0     0.043115     0.040837     0.044694
you are not getting at least 20 clock ticks per test.
Add:             4365.0     0.065871     0.054983     0.068083
-------------------------------------------------------------
Triad:           5517.2     0.063654     0.043500     0.068433
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
Solution Validates: avg error less than 1.000000e-13 on all three arrays
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7088.4     0.026231     0.022572     0.028221
Scale:           3911.2     0.045476     0.040908     0.049498
Add:             4306.3     0.066343     0.055732     0.069881
Triad:           5567.2     0.063791     0.043110     0.068216
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15348 microseconds.
   (= 15348 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6982.4     0.024944     0.022915     0.026350
Scale:           3666.5     0.045796     0.043638     0.047336
Add:             4221.0     0.064210     0.056859     0.065889
Triad:           4545.3     0.066887     0.052802     0.070913
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Each test below will take on the order of 17284 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21497 microseconds.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Each test below will take on the order of 7277 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23440 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31093 microseconds.
Each test below will take on the order of 31674 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 25501 microseconds.
Each test below will take on the order of 25262 microseconds.
-------------------------------------------------------------
   (= 17284 clock ticks)
Each test below will take on the order of 17699 microseconds.
Each test below will take on the order of 31692 microseconds.
   (= 21497 clock ticks)
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 22236 microseconds.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
   (= 7277 clock ticks)
Each test below will take on the order of 7451 microseconds.
   (= 23440 clock ticks)
Each test below will take on the order of 31322 microseconds.
Each test below will take on the order of 30714 microseconds.
Each test below will take on the order of 29551 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 29704 microseconds.
   (= 31093 clock ticks)
   (= 31674 clock ticks)
Each test below will take on the order of 28314 microseconds.
Each test below will take on the order of 9843 microseconds.
Each test below will take on the order of 28995 microseconds.
Each test below will take on the order of 8228 microseconds.
   (= 25501 clock ticks)
   (= 25262 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
Increase the size of the arrays if this shows that
   (= 17699 clock ticks)
   (= 31692 clock ticks)
Increase the size of the arrays if this shows that
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 13303 microseconds.
   (= 22236 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19999 microseconds.
Increase the size of the arrays if this shows that
   (= 7451 clock ticks)
Increase the size of the arrays if this shows that
   (= 31322 clock ticks)
   (= 30714 clock ticks)
   (= 29551 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 29704 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
   (= 28314 clock ticks)
   (= 9843 clock ticks)
   (= 28995 clock ticks)
   (= 8228 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Each test below will take on the order of 23690 microseconds.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Each test below will take on the order of 18450 microseconds.
   (= 13303 clock ticks)
Increase the size of the arrays if this shows that
Each test below will take on the order of 12936 microseconds.
Each test below will take on the order of 11183 microseconds.
   (= 19999 clock ticks)
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Each test below will take on the order of 15099 microseconds.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
   (= 23690 clock ticks)
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
   (= 18450 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
   (= 12936 clock ticks)
   (= 11183 clock ticks)
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
   (= 15099 clock ticks)
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Copy:            6579.8     0.025518     0.024317     0.027596
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8219.9     0.023726     0.019465     0.030993
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
Copy:            8314.7     0.027070     0.019243     0.029240
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10151.6     0.020219     0.015761     0.021854
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11584.3     0.028048     0.013812     0.031531
Copy:           12331.4     0.028510     0.012975     0.031345
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7264.5     0.025052     0.022025     0.026393
Copy:            7025.3     0.025221     0.022775     0.026426
-------------------------------------------------------------
Scale:           4200.8     0.045444     0.038088     0.048160
Copy:            6631.6     0.025350     0.024127     0.027726
Copy:            7093.5     0.023933     0.022556     0.024841
Scale:           5019.0     0.043128     0.031879     0.048205
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6901.0     0.024861     0.023185     0.025783
-------------------------------------------------------------
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           5190.1     0.044808     0.030828     0.047252
-------------------------------------------------------------
Copy:            7937.7     0.025641     0.020157     0.027456
Scale:           5732.5     0.034365     0.027911     0.036845
Copy:           12702.3     0.028265     0.012596     0.032164
Copy:           12462.2     0.027203     0.012839     0.031712
Copy:           11469.4     0.030359     0.013950     0.034717
-------------------------------------------------------------
Copy:           11449.9     0.029968     0.013974     0.034670
Scale:           9161.6     0.042826     0.017464     0.047442
Scale:           6529.1     0.042960     0.024506     0.046464
Copy:           13534.1     0.030081     0.011822     0.033432
Copy:            7748.9     0.025333     0.020648     0.026322
Copy:           11932.2     0.030275     0.013409     0.033584
Copy:            8241.1     0.025730     0.019415     0.026962
Scale:           4548.9     0.042249     0.035173     0.045286
Scale:           4852.7     0.041959     0.032971     0.045004
Function    Best Rate MB/s  Avg time     Min time     Max time
Add:             4843.1     0.060268     0.049555     0.066130
Scale:           4232.0     0.045334     0.037807     0.047502
Scale:           4953.3     0.041585     0.032302     0.047162
Add:             4940.8     0.061461     0.048575     0.068881
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7160.1     0.024121     0.022346     0.025052
Scale:           4047.3     0.043431     0.039533     0.044518
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7673.8     0.026529     0.020850     0.028360
Add:             4388.9     0.064483     0.054683     0.066891
STREAM version $Revision: 5.10 $
Scale:           4969.4     0.043371     0.032197     0.045741
Add:             8341.4     0.048673     0.028772     0.054939
Scale:           8368.2     0.042705     0.019120     0.048005
Scale:           8416.7     0.043877     0.019010     0.049471
Scale:           8448.2     0.041916     0.018939     0.046644
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           8429.5     0.042200     0.018981     0.046628
Add:             9458.9     0.058023     0.025373     0.064959
Add:             9327.6     0.057656     0.025730     0.064712
Scale:           9112.6     0.041993     0.017558     0.046714
Scale:           4217.0     0.043457     0.037942     0.044850
Scale:           9191.7     0.041905     0.017407     0.046113
Scale:           4389.7     0.044836     0.036449     0.046493
Add:             5208.3     0.059095     0.046080     0.065402
Add:             5130.9     0.059276     0.046776     0.065748
Copy:            8079.2     0.023486     0.019804     0.025742
Triad:           5318.9     0.059251     0.045122     0.065713
Add:             4837.0     0.060643     0.049617     0.066174
Add:             6272.4     0.061542     0.038263     0.071949
Triad:           6962.6     0.062773     0.034470     0.072164
Copy:            8503.0     0.023854     0.018817     0.025897
Scale:           4134.8     0.042364     0.038696     0.044501
Add:             4436.1     0.065241     0.054101     0.068229
Copy:            7635.4     0.023835     0.020955     0.026321
Copy:            7275.7     0.024031     0.021991     0.026840
Scale:           4335.8     0.045948     0.036902     0.049115
Triad:           4203.5     0.063046     0.057095     0.066545
-------------------------------------------------------------
Add:             4159.2     0.065681     0.057703     0.068068
Triad:          10631.3     0.048360     0.022575     0.054727
Add:             8775.5     0.058526     0.027349     0.065838
-------------------------------------------------------------
Add:             8743.8     0.058335     0.027448     0.065624
Add:             8947.2     0.057780     0.026824     0.065181
Copy:            7462.0     0.024338     0.021442     0.025791
Add:             8919.3     0.057744     0.026908     0.065563
Triad:           9487.7     0.056896     0.025296     0.065144
Triad:          10013.0     0.057380     0.023969     0.067055
Add:             8325.5     0.058004     0.028827     0.064482
Add:             4182.1     0.063404     0.057388     0.066862
Add:             8548.8     0.057871     0.028074     0.064158
Add:             4241.5     0.062394     0.056584     0.065625
Triad:           5655.1     0.063393     0.042440     0.071021
Triad:           5613.3     0.063266     0.042756     0.071039
Scale:           3909.2     0.042061     0.040929     0.043750
-------------------------------------------------------------
Triad:           5360.0     0.059442     0.044776     0.065910
Triad:           7649.4     0.062285     0.031375     0.072452
-------------------------------------------------------------
Scale:           4992.1     0.043041     0.032051     0.046240
Add:             4203.2     0.070709     0.057100     0.074159
Triad:           5422.1     0.067304     0.044263     0.072037
Scale:           5133.1     0.044214     0.031170     0.047879
Scale:           4876.8     0.044032     0.032808     0.048082
Add:             6953.1     0.063351     0.034517     0.073718
-------------------------------------------------------------
This system uses 8 bytes per array element.
Triad:           4158.3     0.066976     0.057716     0.070652
-------------------------------------------------------------
Triad:           8999.5     0.057428     0.026668     0.066557
STREAM version $Revision: 5.10 $
Triad:           8973.3     0.057484     0.026746     0.065859
Triad:           9092.3     0.057118     0.026396     0.066841
Scale:           3998.5     0.046560     0.040015     0.048853
Triad:           9077.1     0.057327     0.026440     0.067714
-------------------------------------------------------------
-------------------------------------------------------------
Triad:          10438.4     0.057771     0.022992     0.066574
Triad:           4047.5     0.069431     0.059295     0.073001
Triad:           7385.1     0.057561     0.032498     0.065570
Triad:           3984.9     0.069259     0.060227     0.072089
-------------------------------------------------------------
-------------------------------------------------------------
Add:             5164.1     0.061357     0.046475     0.066803
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Add:             5191.6     0.060733     0.046228     0.065370
Triad:           5919.4     0.062333     0.040545     0.065960
-------------------------------------------------------------
Add:             5032.0     0.062090     0.047695     0.066010
Add:             5082.4     0.062758     0.047222     0.066938
Triad:           9712.7     0.059220     0.024710     0.066580
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Add:             4206.5     0.068781     0.057054     0.070682
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           8774.8     0.063269     0.027351     0.071553
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Triad:           5698.3     0.062244     0.042118     0.070824
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           5519.8     0.061055     0.043480     0.067628
Triad:           5541.1     0.060324     0.043313     0.065842
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
This system uses 8 bytes per array element.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           9476.8     0.058660     0.025325     0.065346
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 12606 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
   (= 12606 clock ticks)
Each test below will take on the order of 18884 microseconds.
Increase the size of the arrays if this shows that
   (= 18884 clock ticks)
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
precision of your system timer.
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:            8093.9     0.023587     0.019768     0.025566
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4754.8     0.042645     0.033650     0.044919
Copy:            7508.9     0.024891     0.021308     0.026181
Add:             5291.5     0.065878     0.045356     0.072850
Scale:           4233.4     0.047587     0.037795     0.049718
Triad:           5674.6     0.058370     0.042294     0.065767
Add:             5795.7     0.063073     0.041410     0.067592
-------------------------------------------------------------
Triad:          10874.1     0.060741     0.022071     0.068837
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15158 microseconds.
   (= 15158 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8006.4     0.023364     0.019984     0.024509
Scale:           4827.8     0.044130     0.033141     0.047342
Add:             5409.8     0.062687     0.044364     0.069361
Triad:           6213.4     0.060136     0.038626     0.067086
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23786 microseconds.
   (= 23786 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7707.9     0.025053     0.020758     0.027197
Scale:           4757.7     0.043505     0.033630     0.047532
Add:             5115.3     0.059302     0.046918     0.066065
Triad:           7993.3     0.060103     0.030025     0.068453
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 28536 microseconds.
   (= 28536 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7560.7     0.024713     0.021162     0.026668
Scale:           4834.5     0.041747     0.033095     0.046031
Add:             5820.7     0.060415     0.041232     0.066984
Triad:           9783.1     0.059909     0.024532     0.069337
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 27860 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
   (= 27860 clock ticks)
Each test below will take on the order of 28737 microseconds.
Increase the size of the arrays if this shows that
   (= 28737 clock ticks)
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
precision of your system timer.
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Copy:           11451.4     0.030500     0.013972     0.033529
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           7984.0     0.042488     0.020040     0.047655
Copy:           11386.2     0.030927     0.014052     0.034368
Add:             8947.5     0.057850     0.026823     0.064630
Scale:           8068.6     0.042212     0.019830     0.047036
Triad:           9615.0     0.055179     0.024961     0.065223
Add:             9508.0     0.057542     0.025242     0.064552
-------------------------------------------------------------
Triad:           9675.9     0.055202     0.024804     0.065120
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31456 microseconds.
   (= 31456 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11795.0     0.028918     0.013565     0.031941
Scale:           7993.2     0.042254     0.020017     0.046556
Add:             8486.6     0.058354     0.028280     0.065122
Triad:           9697.8     0.055910     0.024748     0.066227
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 27763 microseconds.
   (= 27763 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12734.9     0.027309     0.012564     0.032610
Scale:           8418.8     0.043877     0.019005     0.048570
Add:             8384.8     0.058158     0.028623     0.065108
Triad:           9231.5     0.055506     0.025998     0.066007
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31303 microseconds.
   (= 31303 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12012.0     0.029327     0.013320     0.032517
Scale:           8268.3     0.042241     0.019351     0.046958
Add:             8285.2     0.058746     0.028967     0.064730
Triad:           8119.1     0.056548     0.029560     0.065771
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31883 microseconds.
   (= 31883 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12148.8     0.027102     0.013170     0.031841
Scale:           8452.2     0.041312     0.018930     0.046913
Add:             9103.7     0.057405     0.026363     0.066001
Triad:           9668.8     0.058860     0.024822     0.070187
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 25903 microseconds.
   (= 25903 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11806.4     0.026518     0.013552     0.031215
Scale:           8559.4     0.045029     0.018693     0.050677
Add:             9104.0     0.059921     0.026362     0.065123
Triad:           7826.2     0.055317     0.030666     0.065289
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 30621 microseconds.
   (= 30621 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12724.7     0.027670     0.012574     0.034132
Scale:           8637.5     0.041692     0.018524     0.049040
Add:             8223.7     0.057662     0.029184     0.065293
Triad:          10400.9     0.058614     0.023075     0.068822
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
START OF JOBSPEC
{"resources": [{"type": "node", "count": 1, "with": [{"type": "slot", "count": 56, "with": [{"type": "core", "count": 1}], "label": "task"}]}], "tasks": [{"command": ["stream_c.exe"], "slot": "task", "count": {"per_slot": 1}}], "attributes": {"system": {"duration": 0, "cwd": "/opt/stream", "shell": {"options": {"rlimit": {"cpu": -1, "fsize": -1, "data": -1, "stack": 8388608, "core": -1, "nofile": 1048576, "as": -1, "rss": -1, "nproc": -1}, "cpu-affinity": "per-task"}}, "constraints": {"hostlist": ["flux-sample-117"]}}, "user": {"study_id": "stream-1-iter-1-node-117"}}, "version": 1}
START OF EVENTLOG
{"timestamp":1724448192.2398517,"name":"init"}
{"timestamp":1724448192.2411129,"name":"starting"}
{"timestamp":1724448192.2637739,"name":"shell.init","context":{"service":"0-shell-fR6wPo3d","leader-rank":117,"size":1}}
{"timestamp":1724448192.7003922,"name":"shell.start","context":{"taskmap":{"version":1,"map":[[0,1,56,1]]}}}
{"timestamp":1724448194.1319845,"name":"shell.task-exit","context":{"localid":25,"rank":25,"state":"Exited","pid":93,"wait_status":0,"signaled":0,"exitcode":0}}
{"timestamp":1724448194.8828866,"name":"complete","context":{"status":0}}
{"timestamp":1724448194.8829033,"name":"done"}

