-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 27062 microseconds.
   (= 27062 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14441.6     0.018051     0.011079     0.021925
Scale:           9442.4     0.031492     0.016945     0.043643
Add:            10795.8     0.042144     0.022231     0.054885
Triad:          11069.6     0.038216     0.021681     0.053209
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 14065 microseconds.
   (= 14065 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14517.9     0.015495     0.011021     0.021198
Scale:           9361.1     0.027608     0.017092     0.037293
Add:            10816.7     0.043444     0.022188     0.053989
Triad:          10923.5     0.036675     0.021971     0.054351
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23322 microseconds.
   (= 23322 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14301.0     0.018428     0.011188     0.022874
Scale:           9151.7     0.029756     0.017483     0.036378
Add:            10968.8     0.038522     0.021880     0.054761
Triad:          10596.0     0.039860     0.022650     0.055462
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 23619 microseconds.
   (= 23619 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           13850.6     0.020288     0.011552     0.022702
Scale:           7123.5     0.036878     0.022461     0.042516
Add:             7129.5     0.047950     0.033663     0.053219
Triad:           6897.5     0.046228     0.034795     0.051898
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24448 microseconds.
   (= 24448 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9791.3     0.022003     0.016341     0.023692
Scale:           6518.3     0.035124     0.024546     0.037572
Add:             6172.9     0.050177     0.038880     0.053503
Triad:           7611.5     0.048262     0.031531     0.053981
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21550 microseconds.
   (= 21550 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            9831.1     0.022168     0.016275     0.023446
Scale:           5309.1     0.037040     0.030137     0.040239
Add:             6433.6     0.050088     0.037304     0.056638
Triad:           7975.3     0.047481     0.030093     0.053864
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19495 microseconds.
   (= 19495 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           14579.7     0.017868     0.010974     0.023151
Scale:           9314.9     0.032339     0.017177     0.039253
Add:             9829.2     0.043271     0.024417     0.052498
Triad:          11036.1     0.040612     0.021747     0.050980
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20194 microseconds.
   (= 20194 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           13753.8     0.019735     0.011633     0.023606
Scale:           9848.7     0.033750     0.016246     0.038336
Add:            10960.8     0.045697     0.021896     0.053528
Triad:          13147.1     0.043375     0.018255     0.056367
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 6999 microseconds.
   (= 6999 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7978.0     0.024848     0.020055     0.026466
Scale:           4121.7     0.044955     0.038819     0.047033
Add:             3969.2     0.068074     0.060465     0.071128
Triad:           4255.5     0.063246     0.056398     0.066368
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7949 microseconds.
   (= 7949 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7645.6     0.025732     0.020927     0.026897
Scale:           4018.5     0.045570     0.039816     0.047862
Add:             3907.5     0.068328     0.061420     0.073173
Triad:           4273.2     0.065508     0.056164     0.069415
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 12449 microseconds.
   (= 12449 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6636.0     0.025006     0.024111     0.026750
Scale:           3684.0     0.046871     0.043431     0.051222
Add:             5009.0     0.060787     0.047914     0.066889
Triad:           5171.6     0.058634     0.046407     0.065187
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 11969 microseconds.
   (= 11969 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6653.9     0.024602     0.024046     0.025978
Scale:           3556.2     0.047058     0.044992     0.050968
Add:             4981.8     0.060772     0.048175     0.067519
Triad:           5132.7     0.058647     0.046759     0.064760
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 9054 microseconds.
   (= 9054 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7584.7     0.024459     0.021095     0.025789
Scale:           3720.8     0.047478     0.043002     0.050338
Add:             3845.1     0.067761     0.062417     0.078945
Triad:           4272.5     0.063512     0.056174     0.066629
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 17696 microseconds.
   (= 17696 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6936.3     0.024696     0.023067     0.026747
Scale:           4375.5     0.043558     0.036567     0.047974
Add:             5154.3     0.059677     0.046563     0.063977
Triad:           5339.4     0.061956     0.044949     0.069206
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 15480 microseconds.
   (= 15480 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7032.0     0.024887     0.022753     0.026340
Scale:           3709.7     0.045577     0.043130     0.046732
Add:             4272.9     0.063927     0.056168     0.067038
Triad:           4608.6     0.066461     0.052076     0.070202
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21615 microseconds.
   (= 21615 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6972.9     0.025002     0.022946     0.027840
Scale:           4672.5     0.041825     0.034243     0.045759
Add:             4815.7     0.059781     0.049837     0.064435
Triad:           5510.3     0.063538     0.043555     0.070912
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
STREAM version $Revision: 5.10 $
This system uses 8 bytes per array element.
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
This system uses 8 bytes per array element.
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
This system uses 8 bytes per array element.
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
This system uses 8 bytes per array element.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
-------------------------------------------------------------
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Array size = 10000000 (elements), Offset = 0 (elements)
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Array size = 10000000 (elements), Offset = 0 (elements)
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Memory per array = 76.3 MiB (= 0.1 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Memory per array = 76.3 MiB (= 0.1 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Total memory required = 228.9 MiB (= 0.2 GiB).
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Total memory required = 228.9 MiB (= 0.2 GiB).
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Each kernel will be executed 10 times.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Each kernel will be executed 10 times.
-------------------------------------------------------------
-------------------------------------------------------------
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 The *best* time for each kernel (excluding the first iteration)
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
 will be used to compute the reported bandwidth.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 20117 microseconds.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24723 microseconds.
Each test below will take on the order of 22768 microseconds.
 will be used to compute the reported bandwidth.
Each test below will take on the order of 16881 microseconds.
Each test below will take on the order of 22342 microseconds.
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Each test below will take on the order of 19248 microseconds.
Each test below will take on the order of 15570 microseconds.
-------------------------------------------------------------
Each test below will take on the order of 9578 microseconds.
   (= 20117 clock ticks)
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 7958 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 31630 microseconds.
STREAM version $Revision: 5.10 $
Each test below will take on the order of 31696 microseconds.
Each test below will take on the order of 29798 microseconds.
Each test below will take on the order of 30573 microseconds.
Each test below will take on the order of 31337 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32160 microseconds.
Each test below will take on the order of 28273 microseconds.
Each test below will take on the order of 30247 microseconds.
   (= 24723 clock ticks)
   (= 22768 clock ticks)
-------------------------------------------------------------
   (= 16881 clock ticks)
   (= 22342 clock ticks)
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
Your clock granularity/precision appears to be 1 microseconds.
   (= 19248 clock ticks)
   (= 15570 clock ticks)
Your clock granularity/precision appears to be 1 microseconds.
   (= 9578 clock ticks)
Increase the size of the arrays if this shows that
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 19392 microseconds.
Each test below will take on the order of 13725 microseconds.
   (= 7958 clock ticks)
Each test below will take on the order of 7215 microseconds.
   (= 31630 clock ticks)
-------------------------------------------------------------
   (= 31696 clock ticks)
   (= 29798 clock ticks)
   (= 30573 clock ticks)
   (= 31337 clock ticks)
Each test below will take on the order of 9714 microseconds.
   (= 32160 clock ticks)
   (= 28273 clock ticks)
   (= 30247 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Your clock granularity/precision appears to be 1 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 25654 microseconds.
Each test below will take on the order of 8482 microseconds.
Each test below will take on the order of 16630 microseconds.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Each test below will take on the order of 11938 microseconds.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Each test below will take on the order of 11405 microseconds.
   (= 19392 clock ticks)
   (= 13725 clock ticks)
Increase the size of the arrays if this shows that
   (= 7215 clock ticks)
Increase the size of the arrays if this shows that
This system uses 8 bytes per array element.
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
   (= 9714 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Each test below will take on the order of 16250 microseconds.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Each test below will take on the order of 14625 microseconds.
   (= 25654 clock ticks)
   (= 8482 clock ticks)
   (= 16630 clock ticks)
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
   (= 11938 clock ticks)
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
   (= 11405 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
   (= 16250 clock ticks)
-------------------------------------------------------------
-------------------------------------------------------------
   (= 14625 clock ticks)
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
Increase the size of the arrays if this shows that
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
you are not getting at least 20 clock ticks per test.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
Memory per array = 76.3 MiB (= 0.1 GiB).
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
you are not getting at least 20 clock ticks per test.
For best results, please be sure you know the
For best results, please be sure you know the
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
Total memory required = 228.9 MiB (= 0.2 GiB).
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
WARNING -- The above is only a rough guideline.
precision of your system timer.
precision of your system timer.
WARNING -- The above is only a rough guideline.
precision of your system timer.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
Each kernel will be executed 10 times.
precision of your system timer.
precision of your system timer.
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
For best results, please be sure you know the
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
For best results, please be sure you know the
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
 The *best* time for each kernel (excluding the first iteration)
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
For best results, please be sure you know the
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
For best results, please be sure you know the
precision of your system timer.
precision of your system timer.
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            6944.4     0.025178     0.023040     0.026356
precision of your system timer.
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
 will be used to compute the reported bandwidth.
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7597.0     0.025010     0.021061     0.027909
Copy:            7377.7     0.025030     0.021687     0.028104
precision of your system timer.
Copy:            6997.9     0.024250     0.022864     0.031223
Copy:            7289.0     0.024824     0.021951     0.027129
precision of your system timer.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Copy:            7328.4     0.023909     0.021833     0.024851
Copy:            6533.5     0.026462     0.024489     0.028752
-------------------------------------------------------------
Copy:            6726.9     0.026277     0.023785     0.028291
Scale:           4033.2     0.043193     0.039671     0.044968
-------------------------------------------------------------
Copy:            7795.7     0.024233     0.020524     0.025485
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12655.1     0.028128     0.012643     0.031809
-------------------------------------------------------------
Copy:           12909.5     0.028437     0.012394     0.032849
Copy:           12025.4     0.030324     0.013305     0.034907
Copy:           11834.3     0.030172     0.013520     0.034291
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12040.9     0.027523     0.013288     0.031198
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11662.8     0.027728     0.013719     0.031489
Copy:           11294.7     0.030374     0.014166     0.034642
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11450.7     0.029780     0.013973     0.034087
Scale:           4725.3     0.043405     0.033860     0.048444
Scale:           4688.6     0.044174     0.034125     0.049870
-------------------------------------------------------------
Scale:           4587.4     0.045634     0.034878     0.051621
Scale:           4698.0     0.041277     0.034057     0.045978
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4153.9     0.043137     0.038518     0.045687
Scale:           3830.3     0.044739     0.041772     0.046445
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           3923.7     0.044482     0.040778     0.047132
Add:             4363.1     0.066070     0.055007     0.069870
Function    Best Rate MB/s  Avg time     Min time     Max time
Scale:           4204.8     0.044109     0.038052     0.047165
Copy:            7887.6     0.024773     0.020285     0.026610
Scale:           8458.5     0.043494     0.018916     0.049060
Your clock granularity/precision appears to be 1 microseconds.
Scale:           8590.2     0.043068     0.018626     0.048285
Scale:           7265.5     0.042292     0.022022     0.047043
Scale:           8456.3     0.042198     0.018921     0.047302
Copy:            7263.8     0.024845     0.022027     0.025875
Scale:           8796.1     0.043363     0.018190     0.049506
Copy:            7517.3     0.024845     0.021284     0.026568
Scale:           7184.3     0.043578     0.022271     0.048529
Scale:           8817.4     0.041966     0.018146     0.047186
Copy:            7291.6     0.024635     0.021943     0.025894
Scale:           8868.7     0.042013     0.018041     0.047213
Add:             4971.4     0.059725     0.048276     0.065819
Add:             5235.2     0.059554     0.045844     0.065705
Function    Best Rate MB/s  Avg time     Min time     Max time
Add:             5178.6     0.061222     0.046345     0.067432
Add:             5768.5     0.060312     0.041605     0.066329
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7753.1     0.023919     0.020637     0.025878
Copy:            7036.7     0.025467     0.022738     0.027340
Copy:            7947.5     0.024126     0.020132     0.026233
Add:             4420.3     0.065465     0.054295     0.068596
Add:             4055.0     0.065787     0.059186     0.069473
Copy:            7186.9     0.024445     0.022263     0.026843
Add:             4244.6     0.066698     0.056542     0.072091
Triad:           5256.3     0.065506     0.045659     0.070090
Copy:            7302.9     0.024604     0.021909     0.027169
Add:             4050.2     0.067961     0.059256     0.072063
Scale:           3676.2     0.047317     0.043523     0.050253
Add:             9031.0     0.058946     0.026575     0.065713
Each test below will take on the order of 16531 microseconds.
Add:             9204.6     0.058503     0.026074     0.065657
Add:             9049.8     0.057782     0.026520     0.065477
Add:             9205.6     0.057815     0.026071     0.065702
Scale:           4130.4     0.043003     0.038737     0.044555
Add:             9241.4     0.058808     0.025970     0.065203
Scale:           3897.0     0.046281     0.041057     0.049263
Add:             8116.0     0.058822     0.029571     0.065348
Add:             9184.2     0.057749     0.026132     0.065165
Scale:           3938.6     0.045419     0.040624     0.047452
Add:             9135.5     0.057930     0.026271     0.065065
Triad:           4491.7     0.061970     0.053432     0.066096
Triad:           5965.5     0.060195     0.040231     0.065207
Copy:            7225.5     0.025924     0.022144     0.027624
Triad:           5391.3     0.058624     0.044516     0.064541
Triad:           8658.6     0.062881     0.027718     0.075957
Copy:            7152.1     0.026093     0.022371     0.027774
Scale:           4943.0     0.041954     0.032369     0.045699
Scale:           3936.2     0.046537     0.040648     0.050216
Scale:           4762.8     0.044045     0.033594     0.047838
Triad:           6336.8     0.066369     0.037874     0.071416
Triad:           4440.4     0.065118     0.054049     0.068044
Scale:           4681.6     0.043946     0.034176     0.047544
Triad:           4649.7     0.066684     0.051616     0.070438
-------------------------------------------------------------
Scale:           4704.1     0.044122     0.034013     0.047971
Triad:           4113.4     0.063965     0.058346     0.066013
Add:             4126.5     0.066801     0.058160     0.071872
Triad:           9315.7     0.056258     0.025763     0.065513
   (= 16531 clock ticks)
Triad:           7927.6     0.056574     0.030274     0.065513
Triad:           9715.0     0.057108     0.024704     0.066092
Triad:           9257.1     0.056480     0.025926     0.065906
Add:             4398.5     0.065946     0.054564     0.070084
Triad:           8972.3     0.056690     0.026749     0.065394
Add:             3992.9     0.066950     0.060106     0.069849
Triad:           9181.3     0.056761     0.026140     0.065394
Triad:           9074.4     0.056952     0.026448     0.065440
Add:             4255.3     0.065375     0.056400     0.068470
Triad:           9070.3     0.057122     0.026460     0.065719
-------------------------------------------------------------
-------------------------------------------------------------
Scale:           4668.8     0.045570     0.034270     0.051701
-------------------------------------------------------------
-------------------------------------------------------------
Scale:           4604.7     0.045781     0.034747     0.051707
Add:             6209.4     0.058916     0.038651     0.066491
Add:             4114.2     0.069039     0.058334     0.086339
Add:             5801.6     0.059813     0.041368     0.066340
-------------------------------------------------------------
-------------------------------------------------------------
Add:             5054.7     0.064725     0.047480     0.069598
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Add:             4997.1     0.063920     0.048028     0.069752
-------------------------------------------------------------
Triad:           4482.5     0.066245     0.053542     0.070124
-------------------------------------------------------------
Increase the size of the arrays if this shows that
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           5712.9     0.065509     0.042010     0.071873
-------------------------------------------------------------
Triad:           4238.2     0.063691     0.056628     0.067220
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           4806.7     0.064766     0.049930     0.069133
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Add:             5228.0     0.060913     0.045907     0.068625
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Add:             4980.2     0.061844     0.048191     0.068678
Triad:           6089.5     0.062514     0.039412     0.069529
Triad:           4399.1     0.064482     0.054557     0.068305
Triad:           6311.8     0.060636     0.038024     0.069995
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Triad:           5349.5     0.060548     0.044864     0.065179
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Triad:           5241.3     0.060747     0.045790     0.065531
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
you are not getting at least 20 clock ticks per test.
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           5942.7     0.057181     0.040386     0.062831
-------------------------------------------------------------
-------------------------------------------------------------
Triad:           6849.5     0.056609     0.035039     0.062803
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
For best results, please be sure you know the
-------------------------------------------------------------
-------------------------------------------------------------
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7185.2     0.025148     0.022268     0.026945
Scale:           3934.6     0.045484     0.040665     0.047287
Add:             4255.4     0.063761     0.056399     0.066702
Triad:           4656.1     0.067239     0.051545     0.071832
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21332 microseconds.
   (= 21332 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7249.3     0.024887     0.022071     0.026408
Scale:           4161.5     0.043135     0.038448     0.045329
Add:             4345.2     0.065294     0.055233     0.070075
Triad:           5699.5     0.066384     0.042109     0.072284
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 24677 microseconds.
   (= 24677 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            7809.8     0.024971     0.020487     0.028086
Scale:           4794.7     0.043844     0.033370     0.048209
Add:             5048.5     0.059366     0.047539     0.065694
Triad:           5395.1     0.061645     0.044485     0.069693
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 26628 microseconds.
   (= 26628 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:            8076.7     0.024239     0.019810     0.028041
Scale:           4722.3     0.041720     0.033882     0.045566
Add:             4943.7     0.060850     0.048547     0.077080
Triad:           8327.5     0.063083     0.028820     0.075590
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 28375 microseconds.
   (= 28375 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11932.2     0.027892     0.013409     0.031370
Scale:           8409.1     0.044057     0.019027     0.049632
Add:             9065.5     0.058026     0.026474     0.065648
Triad:           8927.9     0.055931     0.026882     0.064920
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 27106 microseconds.
   (= 27106 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11918.2     0.028241     0.013425     0.031457
Scale:           8317.3     0.044272     0.019237     0.049890
Add:             9056.2     0.057948     0.026501     0.065651
Triad:           8929.3     0.055854     0.026878     0.064967
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 29515 microseconds.
   (= 29515 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11115.0     0.028896     0.014395     0.032934
Scale:           8444.2     0.043655     0.018948     0.049627
Add:             9710.3     0.057779     0.024716     0.065708
Triad:          10328.8     0.055516     0.023236     0.064921
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32098 microseconds.
   (= 32098 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           11840.6     0.027708     0.013513     0.031563
Scale:           8435.6     0.043671     0.018967     0.050001
Add:             9580.9     0.058088     0.025050     0.065762
Triad:           8992.1     0.056273     0.026690     0.065279
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 34383 microseconds.
   (= 34383 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           13566.4     0.025816     0.011794     0.029569
Scale:           8318.5     0.042036     0.019234     0.048024
Add:             8968.3     0.057524     0.026761     0.065643
Triad:           9448.1     0.060253     0.025402     0.072538
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 29685 microseconds.
   (= 29685 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12154.3     0.029929     0.013164     0.034911
Scale:           8354.7     0.042125     0.019151     0.047594
Add:            10016.2     0.057979     0.023961     0.065684
Triad:          10594.6     0.056581     0.022653     0.067857
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 32059 microseconds.
   (= 32059 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12589.6     0.027376     0.012709     0.030915
Scale:           8067.3     0.043520     0.019833     0.048996
Add:             8950.9     0.059484     0.026813     0.065708
Triad:          10452.1     0.057686     0.022962     0.066422
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 33145 microseconds.
   (= 33145 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           12035.5     0.028118     0.013294     0.032232
Scale:           8119.0     0.042610     0.019707     0.048116
Add:             6058.0     0.059307     0.039617     0.065528
Triad:           8617.9     0.057655     0.027849     0.067601
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
START OF JOBSPEC
{"resources": [{"type": "node", "count": 1, "with": [{"type": "slot", "count": 56, "with": [{"type": "core", "count": 1}], "label": "task"}]}], "tasks": [{"command": ["stream_c.exe"], "slot": "task", "count": {"per_slot": 1}}], "attributes": {"system": {"duration": 0, "cwd": "/opt/stream", "shell": {"options": {"rlimit": {"cpu": -1, "fsize": -1, "data": -1, "stack": 8388608, "core": -1, "nofile": 1048576, "as": -1, "rss": -1, "nproc": -1}, "cpu-affinity": "per-task"}}, "constraints": {"hostlist": ["flux-sample-91"]}}, "user": {"study_id": "stream-1-iter-3-node-91"}}, "version": 1}
START OF EVENTLOG
{"timestamp":1724465673.7434952,"name":"init"}
{"timestamp":1724465673.7465794,"name":"starting"}
{"timestamp":1724465673.7854326,"name":"shell.init","context":{"service":"0-shell-f23j3QoxT","leader-rank":91,"size":1}}
{"timestamp":1724465674.219197,"name":"shell.start","context":{"taskmap":{"version":1,"map":[[0,1,56,1]]}}}
{"timestamp":1724465675.6506069,"name":"shell.task-exit","context":{"localid":27,"rank":27,"state":"Exited","pid":209,"wait_status":0,"signaled":0,"exitcode":0}}
{"timestamp":1724465676.4183774,"name":"complete","context":{"status":0}}
{"timestamp":1724465676.4183962,"name":"done"}

